//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------

#nullable enable

#pragma warning disable 108 // Disable "CS0108 '{derivedDto}.ToJson()' hides inherited member '{dtoBase}.ToJson()'. Use the new keyword if hiding was intended."
#pragma warning disable 114 // Disable "CS0114 '{derivedDto}.RaisePropertyChanged(String)' hides inherited member 'dtoBase.RaisePropertyChanged(String)'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword."
#pragma warning disable 472 // Disable "CS0472 The result of the expression is always 'false' since a value of type 'Int32' is never equal to 'null' of type 'Int32?'
#pragma warning disable 1573 // Disable "CS1573 Parameter '...' has no matching param tag in the XML comment for ...
#pragma warning disable 1591 // Disable "CS1591 Missing XML comment for publicly visible type or member ..."
#pragma warning disable 8073 // Disable "CS8073 The result of the expression is always 'false' since a value of type 'T' is never equal to 'null' of type 'T?'"
#pragma warning disable 3016 // Disable "CS3016 Arrays as attribute arguments is not CLS-compliant"
#pragma warning disable 8603 // Disable "CS8603 Possible null reference return"

namespace PurpleBank {
 using System = global::System;

 [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public interface IController {

  /// <summary>
  /// Get Accounts
  /// </summary>

  /// <remarks>
  /// Obtain a list of accounts.
  /// <br/>
  /// <br/>Obsolete versions: [v1](includes/obsolete/get-accounts-v1.html)
  /// </remarks>

  /// <param name="x_v">Version of the API end point requested by the client. Must be set to a positive integer. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If the value of [x-min-v](#request-headers) is equal to or higher than the value of [x-v](#request-headers) then the [x-min-v](#request-headers) header should be treated as absent. If all versions requested are not supported then the data holder must respond with a 406 Not Acceptable. See [HTTP Headers](#request-headers)</param>

  /// <param name="product_category">Used to filter results on the productCategory field applicable to accounts. Any one of the valid values for this field can be supplied. If absent then all accounts returned.)</param>

  /// <param name="open_status">Used to filter results according to open/closed status. Values can be OPEN, CLOSED or ALL. If absent then ALL is assumed</param>

  /// <param name="is_owned">Filters accounts based on whether they are owned by the authorised customer.  True for owned accounts, false for unowned accounts and absent for all accounts</param>

  /// <param name="page">Page of results to request (standard pagination)</param>

  /// <param name="page_size">Page size to request. Default is 25 (standard pagination)</param>

  /// <param name="x_min_v">Minimum version of the API end point requested by the client. Must be set to a positive integer if provided. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If all versions requested are not supported then the data holder must respond with a 406 Not Acceptable.</param>

  /// <param name="x_fapi_interaction_id">An **[[RFC4122]](#nref-RFC4122)** UUID used as a correlation id. If provided, the data holder must play back this value in the x-fapi-interaction-id response header. If not provided a **[[RFC4122]](#nref-RFC4122)** UUID value is required to be provided in the response header to track the interaction.</param>

  /// <param name="x_fapi_auth_date">The time when the customer last logged in to the Data Recipient Software Product as described in **[[FAPI-R-Draft]](#nref-FAPI-R-Draft)**.  Required for all resource calls (customer present and unattended). Not required for unauthenticated calls.</param>

  /// <param name="x_fapi_customer_ip_address">The customer's original IP address if the customer is currently logged in to the Data Recipient Software Product. The presence of this header indicates that the API is being called in a customer present context. Not to be included for unauthenticated calls.</param>

  /// <param name="x_cds_client_headers">The customer's original standard http headers [Base64](#common-field-types) encoded, including the original User Agent header, if the customer is currently logged in to the Data Recipient Software Product. Mandatory for customer present calls.  Not required for unattended or unauthenticated calls.</param>

  /// <returns>Success</returns>

  System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.ActionResult<ResponseBankingAccountListV2>> ListAccountsAsync(string x_v, ProductCategory? product_category = null, OpenStatus open_status, bool? is_owned = null, int page, int page_size, string? x_min_v = null, string? x_fapi_interaction_id = null, string? x_fapi_auth_date = null, string? x_fapi_customer_ip_address = null, string? x_cds_client_headers = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

  /// <summary>
  /// Get Bulk Balances
  /// </summary>

  /// <remarks>
  /// Obtain balances for multiple, filtered accounts
  /// </remarks>

  /// <param name="x_v">Version of the API end point requested by the client. Must be set to a positive integer. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If the value of [x-min-v](#request-headers) is equal to or higher than the value of [x-v](#request-headers) then the [x-min-v](#request-headers) header should be treated as absent. If all versions requested are not supported then the data holder must respond with a 406 Not Acceptable. See [HTTP Headers](#request-headers)</param>

  /// <param name="product_category">Used to filter results on the productCategory field applicable to accounts. Any one of the valid values for this field can be supplied. If absent then all accounts returned.</param>

  /// <param name="open_status">Used to filter results according to open/closed status. Values can be OPEN, CLOSED or ALL. If absent then ALL is assumed</param>

  /// <param name="is_owned">Filters accounts based on whether they are owned by the authorised customer.  True for owned accounts, false for unowned accounts and absent for all accounts</param>

  /// <param name="page">Page of results to request (standard pagination)</param>

  /// <param name="page_size">Page size to request. Default is 25 (standard pagination)</param>

  /// <param name="x_min_v">Minimum version of the API end point requested by the client. Must be set to a positive integer if provided. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If all versions requested are not supported then the data holder must respond with a 406 Not Acceptable.</param>

  /// <param name="x_fapi_interaction_id">An **[[RFC4122]](#nref-RFC4122)** UUID used as a correlation id. If provided, the data holder must play back this value in the x-fapi-interaction-id response header. If not provided a **[[RFC4122]](#nref-RFC4122)** UUID value is required to be provided in the response header to track the interaction.</param>

  /// <param name="x_fapi_auth_date">The time when the customer last logged in to the Data Recipient Software Product as described in **[[FAPI-R-Draft]](#nref-FAPI-R-Draft)**.  Required for all resource calls (customer present and unattended). Not required for unauthenticated calls.</param>

  /// <param name="x_fapi_customer_ip_address">The customer's original IP address if the customer is currently logged in to the Data Recipient Software Product. The presence of this header indicates that the API is being called in a customer present context. Not to be included for unauthenticated calls.</param>

  /// <param name="x_cds_client_headers">The customer's original standard http headers [Base64](#common-field-types) encoded, including the original User Agent header, if the customer is currently logged in to the Data Recipient Software Product. Mandatory for customer present calls.  Not required for unattended or unauthenticated calls.</param>

  /// <returns>Success</returns>

  System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.ActionResult<ResponseBankingAccountsBalanceList>> ListBalancesBulkAsync(string x_v, ProductCategory2? product_category = null, OpenStatus2 open_status, bool? is_owned = null, int page, int page_size, string? x_min_v = null, string? x_fapi_interaction_id = null, string? x_fapi_auth_date = null, string? x_fapi_customer_ip_address = null, string? x_cds_client_headers = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

  /// <summary>
  /// Get Balances For Specific Accounts
  /// </summary>

  /// <remarks>
  /// Obtain balances for a specified list of accounts
  /// </remarks>

  /// <param name="x_v">Version of the API end point requested by the client. Must be set to a positive integer. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If the value of [x-min-v](#request-headers) is equal to or higher than the value of [x-v](#request-headers) then the [x-min-v](#request-headers) header should be treated as absent. If all versions requested are not supported then the data holder must respond with a 406 Not Acceptable. See [HTTP Headers](#request-headers)</param>

  /// <param name="body">The list of account IDs to obtain balances for</param>

  /// <param name="page">Page of results to request (standard pagination)</param>

  /// <param name="page_size">Page size to request. Default is 25 (standard pagination)</param>

  /// <param name="x_min_v">Minimum version of the API end point requested by the client. Must be set to a positive integer if provided. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If all versions requested are not supported then the data holder must respond with a 406 Not Acceptable.</param>

  /// <param name="x_fapi_interaction_id">An **[[RFC4122]](#nref-RFC4122)** UUID used as a correlation id. If provided, the data holder must play back this value in the x-fapi-interaction-id response header. If not provided a **[[RFC4122]](#nref-RFC4122)** UUID value is required to be provided in the response header to track the interaction.</param>

  /// <param name="x_fapi_auth_date">The time when the customer last logged in to the Data Recipient Software Product as described in **[[FAPI-R-Draft]](#nref-FAPI-R-Draft)**.  Required for all resource calls (customer present and unattended). Not required for unauthenticated calls.</param>

  /// <param name="x_fapi_customer_ip_address">The customer's original IP address if the customer is currently logged in to the Data Recipient Software Product. The presence of this header indicates that the API is being called in a customer present context. Not to be included for unauthenticated calls.</param>

  /// <param name="x_cds_client_headers">The customer's original standard http headers [Base64](#common-field-types) encoded, including the original User Agent header, if the customer is currently logged in to the Data Recipient Software Product. Mandatory for customer present calls.  Not required for unattended or unauthenticated calls.</param>

  /// <returns>Success</returns>

  System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.ActionResult<ResponseBankingAccountsBalanceList>> ListBalancesSpecificAccountsAsync(string x_v, RequestAccountIds body, int page, int page_size, string? x_min_v = null, string? x_fapi_interaction_id = null, string? x_fapi_auth_date = null, string? x_fapi_customer_ip_address = null, string? x_cds_client_headers = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

  /// <summary>
  /// Get Account Balance
  /// </summary>

  /// <remarks>
  /// Obtain the balance for a single specified account
  /// </remarks>

  /// <param name="accountId">ID of the specific account requested</param>

  /// <param name="x_v">Version of the API end point requested by the client. Must be set to a positive integer. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If the value of [x-min-v](#request-headers) is equal to or higher than the value of [x-v](#request-headers) then the [x-min-v](#request-headers) header should be treated as absent. If all versions requested are not supported then the data holder must respond with a 406 Not Acceptable. See [HTTP Headers](#request-headers)</param>

  /// <param name="x_min_v">Minimum version of the API end point requested by the client. Must be set to a positive integer if provided. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If all versions requested are not supported then the data holder must respond with a 406 Not Acceptable.</param>

  /// <param name="x_fapi_interaction_id">An **[[RFC4122]](#nref-RFC4122)** UUID used as a correlation id. If provided, the data holder must play back this value in the x-fapi-interaction-id response header. If not provided a **[[RFC4122]](#nref-RFC4122)** UUID value is required to be provided in the response header to track the interaction.</param>

  /// <param name="x_fapi_auth_date">The time when the customer last logged in to the Data Recipient Software Product as described in **[[FAPI-R-Draft]](#nref-FAPI-R-Draft)**.  Required for all resource calls (customer present and unattended). Not required for unauthenticated calls.</param>

  /// <param name="x_fapi_customer_ip_address">The customer's original IP address if the customer is currently logged in to the Data Recipient Software Product. The presence of this header indicates that the API is being called in a customer present context. Not to be included for unauthenticated calls.</param>

  /// <param name="x_cds_client_headers">The customer's original standard http headers [Base64](#common-field-types) encoded, including the original User Agent header, if the customer is currently logged in to the Data Recipient Software Product. Mandatory for customer present calls.  Not required for unattended or unauthenticated calls.</param>

  /// <returns>Success</returns>

  System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.ActionResult<ResponseBankingAccountsBalanceById>> GetBalanceAsync(string accountId, string x_v, string? x_min_v = null, string? x_fapi_interaction_id = null, string? x_fapi_auth_date = null, string? x_fapi_customer_ip_address = null, string? x_cds_client_headers = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

  /// <summary>
  /// Get Account Detail
  /// </summary>

  /// <remarks>
  /// Obtain detailed information on a single account.
  /// <br/>
  /// <br/>Obsolete versions: [v1](includes/obsolete/get-account-detail-v1.html), [v2](includes/obsolete/get-account-detail-v2.html)
  /// </remarks>

  /// <param name="accountId">A tokenised identifier for the account which is unique but not shareable</param>

  /// <param name="x_v">Version of the API end point requested by the client. Must be set to a positive integer. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If the value of [x-min-v](#request-headers) is equal to or higher than the value of [x-v](#request-headers) then the [x-min-v](#request-headers) header should be treated as absent. If all versions requested are not supported then the data holder must respond with a 406 Not Acceptable. See [HTTP Headers](#request-headers)</param>

  /// <param name="x_min_v">Minimum version of the API end point requested by the client. Must be set to a positive integer if provided. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If all versions requested are not supported then the data holder must respond with a 406 Not Acceptable.</param>

  /// <param name="x_fapi_interaction_id">An **[[RFC4122]](#nref-RFC4122)** UUID used as a correlation id. If provided, the data holder must play back this value in the x-fapi-interaction-id response header. If not provided a **[[RFC4122]](#nref-RFC4122)** UUID value is required to be provided in the response header to track the interaction.</param>

  /// <param name="x_fapi_auth_date">The time when the customer last logged in to the Data Recipient Software Product as described in **[[FAPI-R-Draft]](#nref-FAPI-R-Draft)**.  Required for all resource calls (customer present and unattended). Not required for unauthenticated calls.</param>

  /// <param name="x_fapi_customer_ip_address">The customer's original IP address if the customer is currently logged in to the Data Recipient Software Product. The presence of this header indicates that the API is being called in a customer present context. Not to be included for unauthenticated calls.</param>

  /// <param name="x_cds_client_headers">The customer's original standard http headers [Base64](#common-field-types) encoded, including the original User Agent header, if the customer is currently logged in to the Data Recipient Software Product. Mandatory for customer present calls.  Not required for unattended or unauthenticated calls.</param>

  /// <returns>Success</returns>

  System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.ActionResult<ResponseBankingAccountByIdV3>> GetAccountDetailAsync(string accountId, string x_v, string? x_min_v = null, string? x_fapi_interaction_id = null, string? x_fapi_auth_date = null, string? x_fapi_customer_ip_address = null, string? x_cds_client_headers = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

  /// <summary>
  /// Get Transactions For Account
  /// </summary>

  /// <remarks>
  /// Obtain transactions for a specific account.
  /// <br/>
  /// <br/>Some general notes that apply to all end points that retrieve transactions:
  /// <br/>
  /// <br/>- Where multiple transactions are returned, transactions should be ordered according to effective date in descending order
  /// <br/>- As the date and time for a transaction can alter depending on status and transaction type two separate date/times are included in the payload. There are still some scenarios where neither of these time stamps is available. For the purpose of filtering and ordering it is expected that the data holder will use the "effective" date/time which will be defined as:
  /// <br/>  - Posted date/time if available, then
  /// <br/>  - Execution date/time if available, then
  /// <br/>  - A reasonable date/time nominated by the data holder using internal data structures
  /// <br/>- For transaction amounts it should be assumed that a negative value indicates a reduction of the available balance on the account while a positive value indicates an increase in the available balance on the account
  /// <br/>- For aggregated transactions (ie. groups of sub transactions reported as a single entry for the account) only the aggregated information, with as much consistent information accross the subsidiary transactions as possible, is required to be shared
  /// </remarks>

  /// <param name="accountId">ID of the account to get transactions for.  Must have previously been returned by one of the account list end points.</param>

  /// <param name="x_v">Version of the API end point requested by the client. Must be set to a positive integer. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If the value of [x-min-v](#request-headers) is equal to or higher than the value of [x-v](#request-headers) then the [x-min-v](#request-headers) header should be treated as absent. If all versions requested are not supported then the data holder must respond with a 406 Not Acceptable. See [HTTP Headers](#request-headers)</param>

  /// <param name="oldest_time">Constrain the transaction history request to transactions with effective time at or after this date/time. If absent defaults to newest-time minus 90 days.  Format is aligned to DateTimeString common type</param>

  /// <param name="newest_time">Constrain the transaction history request to transactions with effective time at or before this date/time.  If absent defaults to today.  Format is aligned to DateTimeString common type</param>

  /// <param name="min_amount">Filter transactions to only transactions with amounts higher or equal to than this amount</param>

  /// <param name="max_amount">Filter transactions to only transactions with amounts less than or equal to than this amount</param>

  /// <param name="text">Filter transactions to only transactions where this string value is found as a substring of either the reference or description fields. Format is arbitrary ASCII string. This parameter is optionally implemented by data holders. If it is not implemented then a response should be provided as normal without text filtering applied and an additional boolean field named isQueryParamUnsupported should be included in the meta object and set to true (whether the text parameter is supplied or not)</param>

  /// <param name="page">Page of results to request (standard pagination)</param>

  /// <param name="page_size">Page size to request. Default is 25 (standard pagination)</param>

  /// <param name="x_min_v">Minimum version of the API end point requested by the client. Must be set to a positive integer if provided. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If all versions requested are not supported then the data holder must respond with a 406 Not Acceptable.</param>

  /// <param name="x_fapi_interaction_id">An **[[RFC4122]](#nref-RFC4122)** UUID used as a correlation id. If provided, the data holder must play back this value in the x-fapi-interaction-id response header. If not provided a **[[RFC4122]](#nref-RFC4122)** UUID value is required to be provided in the response header to track the interaction.</param>

  /// <param name="x_fapi_auth_date">The time when the customer last logged in to the Data Recipient Software Product as described in **[[FAPI-R-Draft]](#nref-FAPI-R-Draft)**.  Required for all resource calls (customer present and unattended). Not required for unauthenticated calls.</param>

  /// <param name="x_fapi_customer_ip_address">The customer's original IP address if the customer is currently logged in to the Data Recipient Software Product. The presence of this header indicates that the API is being called in a customer present context. Not to be included for unauthenticated calls.</param>

  /// <param name="x_cds_client_headers">The customer's original standard http headers [Base64](#common-field-types) encoded, including the original User Agent header, if the customer is currently logged in to the Data Recipient Software Product. Mandatory for customer present calls.  Not required for unattended or unauthenticated calls.</param>

  /// <returns>Success</returns>

  System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.ActionResult<ResponseBankingTransactionList>> GetTransactionsAsync(string accountId, string x_v, string? oldest_time = null, string? newest_time = null, string? min_amount = null, string? max_amount = null, string? text = null, int page, int page_size, string? x_min_v = null, string? x_fapi_interaction_id = null, string? x_fapi_auth_date = null, string? x_fapi_customer_ip_address = null, string? x_cds_client_headers = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

  /// <summary>
  /// Get Transaction Detail
  /// </summary>

  /// <remarks>
  /// Obtain detailed information on a transaction for a specific account
  /// </remarks>

  /// <param name="accountId">ID of the account to get transactions for.  Must have previously been returned by one of the account list end points</param>

  /// <param name="transactionId">ID of the transaction obtained from a previous call to one of the other transaction end points</param>

  /// <param name="x_v">Version of the API end point requested by the client. Must be set to a positive integer. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If the value of [x-min-v](#request-headers) is equal to or higher than the value of [x-v](#request-headers) then the [x-min-v](#request-headers) header should be treated as absent. If all versions requested are not supported then the data holder must respond with a 406 Not Acceptable. See [HTTP Headers](#request-headers)</param>

  /// <param name="x_min_v">Minimum version of the API end point requested by the client. Must be set to a positive integer if provided. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If all versions requested are not supported then the data holder must respond with a 406 Not Acceptable.</param>

  /// <param name="x_fapi_interaction_id">An **[[RFC4122]](#nref-RFC4122)** UUID used as a correlation id. If provided, the data holder must play back this value in the x-fapi-interaction-id response header. If not provided a **[[RFC4122]](#nref-RFC4122)** UUID value is required to be provided in the response header to track the interaction.</param>

  /// <param name="x_fapi_auth_date">The time when the customer last logged in to the Data Recipient Software Product as described in **[[FAPI-R-Draft]](#nref-FAPI-R-Draft)**.  Required for all resource calls (customer present and unattended). Not required for unauthenticated calls.</param>

  /// <param name="x_fapi_customer_ip_address">The customer's original IP address if the customer is currently logged in to the Data Recipient Software Product. The presence of this header indicates that the API is being called in a customer present context. Not to be included for unauthenticated calls.</param>

  /// <param name="x_cds_client_headers">The customer's original standard http headers [Base64](#common-field-types) encoded, including the original User Agent header, if the customer is currently logged in to the Data Recipient Software Product. Mandatory for customer present calls.  Not required for unattended or unauthenticated calls.</param>

  /// <returns>Success</returns>

  System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.ActionResult<ResponseBankingTransactionById>> GetTransactionDetailAsync(string accountId, string transactionId, string x_v, string? x_min_v = null, string? x_fapi_interaction_id = null, string? x_fapi_auth_date = null, string? x_fapi_customer_ip_address = null, string? x_cds_client_headers = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

  /// <summary>
  /// Get Direct Debits For Account
  /// </summary>

  /// <remarks>
  /// Obtain direct debit authorisations for a specific account
  /// </remarks>

  /// <param name="accountId">ID of the account to get direct debit authorisations for.  Must have previously been returned by one of the account list end points.</param>

  /// <param name="x_v">Version of the API end point requested by the client. Must be set to a positive integer. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If the value of [x-min-v](#request-headers) is equal to or higher than the value of [x-v](#request-headers) then the [x-min-v](#request-headers) header should be treated as absent. If all versions requested are not supported then the data holder must respond with a 406 Not Acceptable. See [HTTP Headers](#request-headers)</param>

  /// <param name="page">Page of results to request (standard pagination)</param>

  /// <param name="page_size">Page size to request. Default is 25 (standard pagination)</param>

  /// <param name="x_min_v">Minimum version of the API end point requested by the client. Must be set to a positive integer if provided. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If all versions requested are not supported then the data holder must respond with a 406 Not Acceptable.</param>

  /// <param name="x_fapi_interaction_id">An **[[RFC4122]](#nref-RFC4122)** UUID used as a correlation id. If provided, the data holder must play back this value in the x-fapi-interaction-id response header. If not provided a **[[RFC4122]](#nref-RFC4122)** UUID value is required to be provided in the response header to track the interaction.</param>

  /// <param name="x_fapi_auth_date">The time when the customer last logged in to the Data Recipient Software Product as described in **[[FAPI-R-Draft]](#nref-FAPI-R-Draft)**.  Required for all resource calls (customer present and unattended). Not required for unauthenticated calls.</param>

  /// <param name="x_fapi_customer_ip_address">The customer's original IP address if the customer is currently logged in to the Data Recipient Software Product. The presence of this header indicates that the API is being called in a customer present context. Not to be included for unauthenticated calls.</param>

  /// <param name="x_cds_client_headers">The customer's original standard http headers [Base64](#common-field-types) encoded, including the original User Agent header, if the customer is currently logged in to the Data Recipient Software Product. Mandatory for customer present calls.  Not required for unattended or unauthenticated calls.</param>

  /// <returns>Success</returns>

  System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.ActionResult<ResponseBankingDirectDebitAuthorisationList>> ListDirectDebitsAsync(string accountId, string x_v, int page, int page_size, string? x_min_v = null, string? x_fapi_interaction_id = null, string? x_fapi_auth_date = null, string? x_fapi_customer_ip_address = null, string? x_cds_client_headers = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

  /// <summary>
  /// Get Bulk Direct Debits
  /// </summary>

  /// <remarks>
  /// Obtain direct debit authorisations for multiple, filtered accounts
  /// </remarks>

  /// <param name="x_v">Version of the API end point requested by the client. Must be set to a positive integer. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If the value of [x-min-v](#request-headers) is equal to or higher than the value of [x-v](#request-headers) then the [x-min-v](#request-headers) header should be treated as absent. If all versions requested are not supported then the data holder must respond with a 406 Not Acceptable. See [HTTP Headers](#request-headers)</param>

  /// <param name="product_category">Used to filter results on the productCategory field applicable to accounts. Any one of the valid values for this field can be supplied. If absent then all accounts returned.</param>

  /// <param name="open_status">Used to filter results according to open/closed status. Values can be OPEN, CLOSED or ALL. If absent then ALL is assumed</param>

  /// <param name="is_owned">Filters accounts based on whether they are owned by the authorised customer.  True for owned accounts, false for unowned accounts and absent for all accounts</param>

  /// <param name="page">Page of results to request (standard pagination)</param>

  /// <param name="page_size">Page size to request. Default is 25 (standard pagination)</param>

  /// <param name="x_min_v">Minimum version of the API end point requested by the client. Must be set to a positive integer if provided. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If all versions requested are not supported then the data holder must respond with a 406 Not Acceptable.</param>

  /// <param name="x_fapi_interaction_id">An **[[RFC4122]](#nref-RFC4122)** UUID used as a correlation id. If provided, the data holder must play back this value in the x-fapi-interaction-id response header. If not provided a **[[RFC4122]](#nref-RFC4122)** UUID value is required to be provided in the response header to track the interaction.</param>

  /// <param name="x_fapi_auth_date">The time when the customer last logged in to the Data Recipient Software Product as described in **[[FAPI-R-Draft]](#nref-FAPI-R-Draft)**.  Required for all resource calls (customer present and unattended). Not required for unauthenticated calls.</param>

  /// <param name="x_fapi_customer_ip_address">The customer's original IP address if the customer is currently logged in to the Data Recipient Software Product. The presence of this header indicates that the API is being called in a customer present context. Not to be included for unauthenticated calls.</param>

  /// <param name="x_cds_client_headers">The customer's original standard http headers [Base64](#common-field-types) encoded, including the original User Agent header, if the customer is currently logged in to the Data Recipient Software Product. Mandatory for customer present calls.  Not required for unattended or unauthenticated calls.</param>

  /// <returns>Success</returns>

  System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.ActionResult<ResponseBankingDirectDebitAuthorisationList>> ListDirectDebitsBulkAsync(string x_v, ProductCategory3? product_category = null, OpenStatus3 open_status, bool? is_owned = null, int page, int page_size, string? x_min_v = null, string? x_fapi_interaction_id = null, string? x_fapi_auth_date = null, string? x_fapi_customer_ip_address = null, string? x_cds_client_headers = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

  /// <summary>
  /// Get Direct Debits For Specific Accounts
  /// </summary>

  /// <remarks>
  /// Obtain direct debit authorisations for a specified list of accounts
  /// </remarks>

  /// <param name="x_v">Version of the API end point requested by the client. Must be set to a positive integer. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If the value of [x-min-v](#request-headers) is equal to or higher than the value of [x-v](#request-headers) then the [x-min-v](#request-headers) header should be treated as absent. If all versions requested are not supported then the data holder must respond with a 406 Not Acceptable. See [HTTP Headers](#request-headers)</param>

  /// <param name="body">Array of specific accountIds to obtain authorisations for</param>

  /// <param name="page">Page of results to request (standard pagination)</param>

  /// <param name="page_size">Page size to request. Default is 25 (standard pagination)</param>

  /// <param name="x_min_v">Minimum version of the API end point requested by the client. Must be set to a positive integer if provided. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If all versions requested are not supported then the data holder must respond with a 406 Not Acceptable.</param>

  /// <param name="x_fapi_interaction_id">An **[[RFC4122]](#nref-RFC4122)** UUID used as a correlation id. If provided, the data holder must play back this value in the x-fapi-interaction-id response header. If not provided a **[[RFC4122]](#nref-RFC4122)** UUID value is required to be provided in the response header to track the interaction.</param>

  /// <param name="x_fapi_auth_date">The time when the customer last logged in to the Data Recipient Software Product as described in **[[FAPI-R-Draft]](#nref-FAPI-R-Draft)**.  Required for all resource calls (customer present and unattended). Not required for unauthenticated calls.</param>

  /// <param name="x_fapi_customer_ip_address">The customer's original IP address if the customer is currently logged in to the Data Recipient Software Product. The presence of this header indicates that the API is being called in a customer present context. Not to be included for unauthenticated calls.</param>

  /// <param name="x_cds_client_headers">The customer's original standard http headers [Base64](#common-field-types) encoded, including the original User Agent header, if the customer is currently logged in to the Data Recipient Software Product. Mandatory for customer present calls.  Not required for unattended or unauthenticated calls.</param>

  /// <returns>Success</returns>

  System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.ActionResult<ResponseBankingDirectDebitAuthorisationList>> ListDirectDebitsSpecificAccountsAsync(string x_v, RequestAccountIds body, int page, int page_size, string? x_min_v = null, string? x_fapi_interaction_id = null, string? x_fapi_auth_date = null, string? x_fapi_customer_ip_address = null, string? x_cds_client_headers = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

  /// <summary>
  /// Get Scheduled Payments for Account
  /// </summary>

  /// <remarks>
  /// Obtain scheduled, outgoing payments for a specific account
  /// </remarks>

  /// <param name="accountId">ID of the account to get scheduled payments for. Must have previously been returned by one of the account list end points. The account specified is the source account for the payment</param>

  /// <param name="x_v">Version of the API end point requested by the client. Must be set to a positive integer. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If the value of [x-min-v](#request-headers) is equal to or higher than the value of [x-v](#request-headers) then the [x-min-v](#request-headers) header should be treated as absent. If all versions requested are not supported then the data holder must respond with a 406 Not Acceptable. See [HTTP Headers](#request-headers)</param>

  /// <param name="page">Page of results to request (standard pagination)</param>

  /// <param name="page_size">Page size to request. Default is 25 (standard pagination)</param>

  /// <param name="x_min_v">Minimum version of the API end point requested by the client. Must be set to a positive integer if provided. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If all versions requested are not supported then the data holder must respond with a 406 Not Acceptable.</param>

  /// <param name="x_fapi_interaction_id">An **[[RFC4122]](#nref-RFC4122)** UUID used as a correlation id. If provided, the data holder must play back this value in the x-fapi-interaction-id response header. If not provided a **[[RFC4122]](#nref-RFC4122)** UUID value is required to be provided in the response header to track the interaction.</param>

  /// <param name="x_fapi_auth_date">The time when the customer last logged in to the Data Recipient Software Product as described in **[[FAPI-R-Draft]](#nref-FAPI-R-Draft)**.  Required for all resource calls (customer present and unattended). Not required for unauthenticated calls.</param>

  /// <param name="x_fapi_customer_ip_address">The customer's original IP address if the customer is currently logged in to the Data Recipient Software Product. The presence of this header indicates that the API is being called in a customer present context. Not to be included for unauthenticated calls.</param>

  /// <param name="x_cds_client_headers">The customer's original standard http headers [Base64](#common-field-types) encoded, including the original User Agent header, if the customer is currently logged in to the Data Recipient Software Product. Mandatory for customer present calls.  Not required for unattended or unauthenticated calls.</param>

  /// <returns>Success</returns>

  System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.ActionResult<ResponseBankingScheduledPaymentsList>> ListScheduledPaymentsAsync(string accountId, string x_v, int page, int page_size, string? x_min_v = null, string? x_fapi_interaction_id = null, string? x_fapi_auth_date = null, string? x_fapi_customer_ip_address = null, string? x_cds_client_headers = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

  /// <summary>
  /// Get Scheduled Payments Bulk
  /// </summary>

  /// <remarks>
  /// Obtain scheduled payments for multiple, filtered accounts that are the source of funds for the payments
  /// </remarks>

  /// <param name="x_v">Version of the API end point requested by the client. Must be set to a positive integer. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If the value of [x-min-v](#request-headers) is equal to or higher than the value of [x-v](#request-headers) then the [x-min-v](#request-headers) header should be treated as absent. If all versions requested are not supported then the data holder must respond with a 406 Not Acceptable. See [HTTP Headers](#request-headers)</param>

  /// <param name="product_category">Used to filter results on the productCategory field applicable to accounts. Any one of the valid values for this field can be supplied. If absent then all accounts returned.</param>

  /// <param name="open_status">Used to filter results according to open/closed status. Values can be OPEN, CLOSED or ALL. If absent then ALL is assumed</param>

  /// <param name="is_owned">Filters accounts based on whether they are owned by the authorised customer.  True for owned accounts, false for unowned accounts and absent for all accounts</param>

  /// <param name="page">Page of results to request (standard pagination)</param>

  /// <param name="page_size">Page size to request. Default is 25 (standard pagination)</param>

  /// <param name="x_min_v">Minimum version of the API end point requested by the client. Must be set to a positive integer if provided. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If all versions requested are not supported then the data holder must respond with a 406 Not Acceptable.</param>

  /// <param name="x_fapi_interaction_id">An **[[RFC4122]](#nref-RFC4122)** UUID used as a correlation id. If provided, the data holder must play back this value in the x-fapi-interaction-id response header. If not provided a **[[RFC4122]](#nref-RFC4122)** UUID value is required to be provided in the response header to track the interaction.</param>

  /// <param name="x_fapi_auth_date">The time when the customer last logged in to the Data Recipient Software Product as described in **[[FAPI-R-Draft]](#nref-FAPI-R-Draft)**.  Required for all resource calls (customer present and unattended). Not required for unauthenticated calls.</param>

  /// <param name="x_fapi_customer_ip_address">The customer's original IP address if the customer is currently logged in to the Data Recipient Software Product. The presence of this header indicates that the API is being called in a customer present context. Not to be included for unauthenticated calls.</param>

  /// <param name="x_cds_client_headers">The customer's original standard http headers [Base64](#common-field-types) encoded, including the original User Agent header, if the customer is currently logged in to the Data Recipient Software Product. Mandatory for customer present calls.  Not required for unattended or unauthenticated calls.</param>

  /// <returns>Success</returns>

  System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.ActionResult<ResponseBankingScheduledPaymentsList>> ListScheduledPaymentsBulkAsync(string x_v, ProductCategory4? product_category = null, OpenStatus4 open_status, bool? is_owned = null, int page, int page_size, string? x_min_v = null, string? x_fapi_interaction_id = null, string? x_fapi_auth_date = null, string? x_fapi_customer_ip_address = null, string? x_cds_client_headers = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

  /// <summary>
  /// Get Scheduled Payments For Specific Accounts
  /// </summary>

  /// <remarks>
  /// Obtain scheduled payments for a specified list of accounts
  /// </remarks>

  /// <param name="x_v">Version of the API end point requested by the client. Must be set to a positive integer. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If the value of [x-min-v](#request-headers) is equal to or higher than the value of [x-v](#request-headers) then the [x-min-v](#request-headers) header should be treated as absent. If all versions requested are not supported then the data holder must respond with a 406 Not Acceptable. See [HTTP Headers](#request-headers)</param>

  /// <param name="body">Array of specific accountIds to obtain scheduled payments for.  The accounts specified are the source of funds for the payments returned</param>

  /// <param name="page">Page of results to request (standard pagination)</param>

  /// <param name="page_size">Page size to request. Default is 25 (standard pagination)</param>

  /// <param name="x_min_v">Minimum version of the API end point requested by the client. Must be set to a positive integer if provided. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If all versions requested are not supported then the data holder must respond with a 406 Not Acceptable.</param>

  /// <param name="x_fapi_interaction_id">An **[[RFC4122]](#nref-RFC4122)** UUID used as a correlation id. If provided, the data holder must play back this value in the x-fapi-interaction-id response header. If not provided a **[[RFC4122]](#nref-RFC4122)** UUID value is required to be provided in the response header to track the interaction.</param>

  /// <param name="x_fapi_auth_date">The time when the customer last logged in to the Data Recipient Software Product as described in **[[FAPI-R-Draft]](#nref-FAPI-R-Draft)**.  Required for all resource calls (customer present and unattended). Not required for unauthenticated calls.</param>

  /// <param name="x_fapi_customer_ip_address">The customer's original IP address if the customer is currently logged in to the Data Recipient Software Product. The presence of this header indicates that the API is being called in a customer present context. Not to be included for unauthenticated calls.</param>

  /// <param name="x_cds_client_headers">The customer's original standard http headers [Base64](#common-field-types) encoded, including the original User Agent header, if the customer is currently logged in to the Data Recipient Software Product. Mandatory for customer present calls.  Not required for unattended or unauthenticated calls.</param>

  /// <returns>Success</returns>

  System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.ActionResult<ResponseBankingScheduledPaymentsList>> ListScheduledPaymentsSpecificAccountsAsync(string x_v, RequestAccountIds body, int page, int page_size, string? x_min_v = null, string? x_fapi_interaction_id = null, string? x_fapi_auth_date = null, string? x_fapi_customer_ip_address = null, string? x_cds_client_headers = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

  /// <summary>
  /// Get Payees
  /// </summary>

  /// <remarks>
  /// Obtain a list of pre-registered payees.
  /// <br/>
  /// <br/>Obsolete versions: [v1](includes/obsolete/get-payees-v1.html)
  /// </remarks>

  /// <param name="x_v">Version of the API end point requested by the client. Must be set to a positive integer. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If the value of [x-min-v](#request-headers) is equal to or higher than the value of [x-v](#request-headers) then the [x-min-v](#request-headers) header should be treated as absent. If all versions requested are not supported then the data holder must respond with a 406 Not Acceptable. See [HTTP Headers](#request-headers)</param>

  /// <param name="type">Filter on the payee type field.  In addition to normal type field values, ALL can be specified to retrieve all payees.  If absent the assumed value is ALL</param>

  /// <param name="page">Page of results to request (standard pagination)</param>

  /// <param name="page_size">Page size to request. Default is 25 (standard pagination)</param>

  /// <param name="x_min_v">Minimum version of the API end point requested by the client. Must be set to a positive integer if provided. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If all versions requested are not supported then the data holder must respond with a 406 Not Acceptable.</param>

  /// <param name="x_fapi_interaction_id">An **[[RFC4122]](#nref-RFC4122)** UUID used as a correlation id. If provided, the data holder must play back this value in the x-fapi-interaction-id response header. If not provided a **[[RFC4122]](#nref-RFC4122)** UUID value is required to be provided in the response header to track the interaction.</param>

  /// <param name="x_fapi_auth_date">The time when the customer last logged in to the Data Recipient Software Product as described in **[[FAPI-R-Draft]](#nref-FAPI-R-Draft)**.  Required for all resource calls (customer present and unattended). Not required for unauthenticated calls.</param>

  /// <param name="x_fapi_customer_ip_address">The customer's original IP address if the customer is currently logged in to the Data Recipient Software Product. The presence of this header indicates that the API is being called in a customer present context. Not to be included for unauthenticated calls.</param>

  /// <param name="x_cds_client_headers">The customer's original standard http headers [Base64](#common-field-types) encoded, including the original User Agent header, if the customer is currently logged in to the Data Recipient Software Product. Mandatory for customer present calls.  Not required for unattended or unauthenticated calls.</param>

  /// <returns>Success</returns>

  System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.ActionResult<ResponseBankingPayeeListV2>> ListPayeesAsync(string x_v, Type type, int page, int page_size, string? x_min_v = null, string? x_fapi_interaction_id = null, string? x_fapi_auth_date = null, string? x_fapi_customer_ip_address = null, string? x_cds_client_headers = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

  /// <summary>
  /// Get Payee Detail
  /// </summary>

  /// <remarks>
  /// Obtain detailed information on a single payee.
  /// <br/>
  /// <br/>Note that the payee sub-structure should be selected to represent the payment destination only rather than any known characteristics of the payment recipient.
  /// <br/>
  /// <br/>Obsolete versions: [v1](includes/obsolete/get-payee-detail-v1.html)
  /// </remarks>

  /// <param name="payeeId">The ID used to locate the details of a particular payee</param>

  /// <param name="x_v">Version of the API end point requested by the client. Must be set to a positive integer. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If the value of [x-min-v](#request-headers) is equal to or higher than the value of [x-v](#request-headers) then the [x-min-v](#request-headers) header should be treated as absent. If all versions requested are not supported then the data holder must respond with a 406 Not Acceptable. See [HTTP Headers](#request-headers)</param>

  /// <param name="x_min_v">Minimum version of the API end point requested by the client. Must be set to a positive integer if provided. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If all versions requested are not supported then the data holder must respond with a 406 Not Acceptable.</param>

  /// <param name="x_fapi_interaction_id">An **[[RFC4122]](#nref-RFC4122)** UUID used as a correlation id. If provided, the data holder must play back this value in the x-fapi-interaction-id response header. If not provided a **[[RFC4122]](#nref-RFC4122)** UUID value is required to be provided in the response header to track the interaction.</param>

  /// <param name="x_fapi_auth_date">The time when the customer last logged in to the Data Recipient Software Product as described in **[[FAPI-R-Draft]](#nref-FAPI-R-Draft)**.  Required for all resource calls (customer present and unattended). Not required for unauthenticated calls.</param>

  /// <param name="x_fapi_customer_ip_address">The customer's original IP address if the customer is currently logged in to the Data Recipient Software Product. The presence of this header indicates that the API is being called in a customer present context. Not to be included for unauthenticated calls.</param>

  /// <param name="x_cds_client_headers">The customer's original standard http headers [Base64](#common-field-types) encoded, including the original User Agent header, if the customer is currently logged in to the Data Recipient Software Product. Mandatory for customer present calls.  Not required for unattended or unauthenticated calls.</param>

  /// <returns>Success</returns>

  System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.ActionResult<ResponseBankingPayeeByIdV2>> GetPayeeDetailAsync(string payeeId, string x_v, string? x_min_v = null, string? x_fapi_interaction_id = null, string? x_fapi_auth_date = null, string? x_fapi_customer_ip_address = null, string? x_cds_client_headers = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

  /// <summary>
  /// Get Products
  /// </summary>

  /// <remarks>
  /// Obtain a list of products that are currently openly offered to the market
  /// <br/>
  /// <br/>Note that the results returned by this end point are expected to be ordered in descending order according to ``lastUpdated``.
  /// <br/>
  /// <br/>### Conventions
  /// <br/>In the product reference payloads there are a number of recurring conventions that are explained here, in one place.
  /// <br/>
  /// <br/>#### Arrays Of Features
  /// <br/>
  /// <br/>In the product detail payload there are a number of arrays articulating generic features, constraints, prices, etc. The intent of these arrays is as follows:
  /// <br/>
  /// <br/>- Each element in an array has the same structure so that clients can reliably interpret the payloads
  /// <br/>- Each element as a type element that is an enumeration of the specific aspect of a product being described, such as types of fees.
  /// <br/>- Each element has a field name [additionalValue](#productfeaturetypedoc).  This is a generic field with contents that will vary based on the type of object being described. The contents of this field for the ADDITIONAL_CARDS feature is the number of cards allowed while the contents of this field for the MAX_LIMIT constraint would be the maximum credit limit allowed for the product.
  /// <br/>- An element in these arrays of the same type may appear more than once. For instance, a product may offer two separate loyalty programs that the customer can select from. A fixed term mortgage may have different rates for different term lengths.
  /// <br/>- An element in these arrays may contain an additionalInfo and additionalInfoUri field. The additionalInfo field is used to provide displayable text clarifying the purpose of the element in some way when the product is presented to a customer. The additionalInfoUri provides a link to externally hosted information specifically relevant to that feature of the product.
  /// <br/>- Depending on the type of data being represented there may be additional specific fields.
  /// <br/>
  /// <br/>#### URIs To More Information
  /// <br/>
  /// <br/>As the complexities and nuances of a financial product can not easily be fully expressed in a data structure without a high degree of complexity it is necessary to provide additional reference information that a potential customer can access so that they are fully informed of the features and implications of the product. The payloads for product reference therefore contain numerous fields that are provided to allow the product holder to describe the product more fully using a web page hosted on their online channels.
  /// <br/>
  /// <br/>These URIs do not need to all link to different pages. If desired, they can all link to a single hosted page and use difference HTML anchors to focus on a specific topic such as eligibility or fees.
  /// <br/>
  /// <br/>#### Linkage To Accounts
  /// <br/>From the moment that a customer applies for a product and an account is created the account and the product that spawned it will diverge.  Rates and features of the product may change and a discount may be negotiated for the account.
  /// <br/>
  /// <br/>For this reason, while productCategory is a common field between accounts and products, there is no specific ID that can be used to link an account to a product within the regime.
  /// <br/>
  /// <br/>Similarly, many of the fields and objects in the product payload will appear in the account detail payload but the structures and semantics are not identical as one refers to a product that can potentially be originated and one refers to an account that actual has been instantiated and created along with the associated decisions inherent in that process.
  /// <br/>
  /// <br/>#### Dates
  /// <br/>It is expected that data consumers needing this data will call relatively frequently to ensure the data they have is representative of the current offering from a bank.  To minimise the volume and frequency of these calls the ability to set a lastUpdated field with the date and time of the last update to this product is included.  A call for a list of products can then be filtered to only return products that have been updated since the last time that data was obtained using the updated-since query parameter.
  /// <br/>
  /// <br/>In addition, the concept of effective date and time has also been included.  This allows for a product to be marked for obsolescence, or introduction, from a certain time without the need for an update to show that a product has been changed.  The inclusion of these dates also removes the need to represent deleted products in the payload.  Products that are no long offered can be marked not effective for a few weeks before they are then removed from the product set as an option entirely.
  /// <br/>
  /// <br/>Obsolete versions: [v1](includes/obsolete/get-products-v1.html) [v2](includes/obsolete/get-products-v2.html)
  /// </remarks>

  /// <param name="x_v">Version of the API end point requested by the client. Must be set to a positive integer. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If the value of [x-min-v](#request-headers) is equal to or higher than the value of [x-v](#request-headers) then the [x-min-v](#request-headers) header should be treated as absent. If all versions requested are not supported then the data holder must respond with a 406 Not Acceptable. See [HTTP Headers](#request-headers)</param>

  /// <param name="effective">Allows for the filtering of products based on whether the current time is within the period of time defined as effective by the effectiveFrom and effectiveTo fields. Valid values are ‘CURRENT’, ‘FUTURE’ and ‘ALL’. If absent defaults to 'CURRENT'</param>

  /// <param name="updated_since">Only include products that have been updated after the specified date and time. If absent defaults to include all products</param>

  /// <param name="brand">Filter results based on a specific brand</param>

  /// <param name="product_category">Used to filter results on the productCategory field applicable to accounts. Any one of the valid values for this field can be supplied. If absent then all accounts returned.</param>

  /// <param name="page">Page of results to request (standard pagination)</param>

  /// <param name="page_size">Page size to request. Default is 25 (standard pagination)</param>

  /// <param name="x_min_v">Minimum version of the API end point requested by the client. Must be set to a positive integer if provided. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If all versions requested are not supported then the data holder must respond with a 406 Not Acceptable.</param>

  /// <returns>Success</returns>

  System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.ActionResult<ResponseBankingProductListV2>> ListProductsAsync(string x_v, Effective effective, string? updated_since = null, string? brand = null, ProductCategory5? product_category = null, int page, int page_size, string? x_min_v = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

  /// <summary>
  /// Get Product Detail
  /// </summary>

  /// <remarks>
  /// Obtain detailed information on a single product offered openly to the market.
  /// <br/>
  /// <br/>Obsolete versions: [v1](includes/obsolete/get-product-detail-v1.html) [v2](includes/obsolete/get-product-detail-v2.html) [v3](includes/obsolete/get-product-detail-v3.html)
  /// </remarks>

  /// <param name="productId">ID of the specific product requested</param>

  /// <param name="x_v">Version of the API end point requested by the client. Must be set to a positive integer. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If the value of [x-min-v](#request-headers) is equal to or higher than the value of [x-v](#request-headers) then the [x-min-v](#request-headers) header should be treated as absent. If all versions requested are not supported then the data holder must respond with a 406 Not Acceptable. See [HTTP Headers](#request-headers)</param>

  /// <param name="x_min_v">Minimum version of the API end point requested by the client. Must be set to a positive integer if provided. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If all versions requested are not supported then the data holder must respond with a 406 Not Acceptable.</param>

  /// <returns>Success</returns>

  System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.ActionResult<ResponseBankingProductByIdV4>> GetProductDetailAsync(string productId, string x_v, string? x_min_v = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

 }

 [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 [Microsoft.AspNetCore.Mvc.Route("cds-au/v1")]

 public partial class Controller : ControllerBase {
  private IController _implementation;

  public Controller(IController implementation) {
   _implementation = implementation;
  }

  /// <summary>
  /// Get Accounts
  /// </summary>
  /// <remarks>
  /// Obtain a list of accounts.
  /// <br/>
  /// <br/>Obsolete versions: [v1](includes/obsolete/get-accounts-v1.html)
  /// </remarks>
  /// <param name="x_v">Version of the API end point requested by the client. Must be set to a positive integer. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If the value of [x-min-v](#request-headers) is equal to or higher than the value of [x-v](#request-headers) then the [x-min-v](#request-headers) header should be treated as absent. If all versions requested are not supported then the data holder must respond with a 406 Not Acceptable. See [HTTP Headers](#request-headers)</param>
  /// <param name="product_category">Used to filter results on the productCategory field applicable to accounts. Any one of the valid values for this field can be supplied. If absent then all accounts returned.)</param>
  /// <param name="open_status">Used to filter results according to open/closed status. Values can be OPEN, CLOSED or ALL. If absent then ALL is assumed</param>
  /// <param name="is_owned">Filters accounts based on whether they are owned by the authorised customer.  True for owned accounts, false for unowned accounts and absent for all accounts</param>
  /// <param name="page">Page of results to request (standard pagination)</param>
  /// <param name="page_size">Page size to request. Default is 25 (standard pagination)</param>
  /// <param name="x_min_v">Minimum version of the API end point requested by the client. Must be set to a positive integer if provided. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If all versions requested are not supported then the data holder must respond with a 406 Not Acceptable.</param>
  /// <param name="x_fapi_interaction_id">An **[[RFC4122]](#nref-RFC4122)** UUID used as a correlation id. If provided, the data holder must play back this value in the x-fapi-interaction-id response header. If not provided a **[[RFC4122]](#nref-RFC4122)** UUID value is required to be provided in the response header to track the interaction.</param>
  /// <param name="x_fapi_auth_date">The time when the customer last logged in to the Data Recipient Software Product as described in **[[FAPI-R-Draft]](#nref-FAPI-R-Draft)**.  Required for all resource calls (customer present and unattended). Not required for unauthenticated calls.</param>
  /// <param name="x_fapi_customer_ip_address">The customer's original IP address if the customer is currently logged in to the Data Recipient Software Product. The presence of this header indicates that the API is being called in a customer present context. Not to be included for unauthenticated calls.</param>
  /// <param name="x_cds_client_headers">The customer's original standard http headers [Base64](#common-field-types) encoded, including the original User Agent header, if the customer is currently logged in to the Data Recipient Software Product. Mandatory for customer present calls.  Not required for unattended or unauthenticated calls.</param>
  /// <returns>Success</returns>
  [Microsoft.AspNetCore.Mvc.HttpGet, Microsoft.AspNetCore.Mvc.Route("banking/accounts")]
  public System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.ActionResult<ResponseBankingAccountListV2>> ListAccounts([Microsoft.AspNetCore.Mvc.FromHeader(Name = "x-v")][Microsoft.AspNetCore.Mvc.ModelBinding.BindRequired] string x_v, [Microsoft.AspNetCore.Mvc.FromQuery(Name = "product-category")] ProductCategory? product_category = null, [Microsoft.AspNetCore.Mvc.FromQuery(Name = "open-status")] OpenStatus? open_status = null, [Microsoft.AspNetCore.Mvc.FromQuery(Name = "is-owned")] bool? is_owned = null, [Microsoft.AspNetCore.Mvc.FromQuery] int? page = null, [Microsoft.AspNetCore.Mvc.FromQuery(Name = "page-size")] int? page_size = null, [Microsoft.AspNetCore.Mvc.FromHeader(Name = "x-min-v")] string? x_min_v = null, [Microsoft.AspNetCore.Mvc.FromHeader(Name = "x-fapi-interaction-id")] string? x_fapi_interaction_id = null, [Microsoft.AspNetCore.Mvc.FromHeader(Name = "x-fapi-auth-date")] string? x_fapi_auth_date = null, [Microsoft.AspNetCore.Mvc.FromHeader(Name = "x-fapi-customer-ip-address")] string? x_fapi_customer_ip_address = null, [Microsoft.AspNetCore.Mvc.FromHeader(Name = "x-cds-client-headers")] string? x_cds_client_headers = null, System.Threading.CancellationToken cancellationToken) {

   return _implementation.ListAccountsAsync(x_v, product_category, open_status ?? PurpleBank.OpenStatus.ALL, is_owned, page ?? 1, page_size ?? 25, x_min_v, x_fapi_interaction_id, x_fapi_auth_date, x_fapi_customer_ip_address, x_cds_client_headers, cancellationToken);
  }

  /// <summary>
  /// Get Bulk Balances
  /// </summary>
  /// <remarks>
  /// Obtain balances for multiple, filtered accounts
  /// </remarks>
  /// <param name="x_v">Version of the API end point requested by the client. Must be set to a positive integer. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If the value of [x-min-v](#request-headers) is equal to or higher than the value of [x-v](#request-headers) then the [x-min-v](#request-headers) header should be treated as absent. If all versions requested are not supported then the data holder must respond with a 406 Not Acceptable. See [HTTP Headers](#request-headers)</param>
  /// <param name="product_category">Used to filter results on the productCategory field applicable to accounts. Any one of the valid values for this field can be supplied. If absent then all accounts returned.</param>
  /// <param name="open_status">Used to filter results according to open/closed status. Values can be OPEN, CLOSED or ALL. If absent then ALL is assumed</param>
  /// <param name="is_owned">Filters accounts based on whether they are owned by the authorised customer.  True for owned accounts, false for unowned accounts and absent for all accounts</param>
  /// <param name="page">Page of results to request (standard pagination)</param>
  /// <param name="page_size">Page size to request. Default is 25 (standard pagination)</param>
  /// <param name="x_min_v">Minimum version of the API end point requested by the client. Must be set to a positive integer if provided. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If all versions requested are not supported then the data holder must respond with a 406 Not Acceptable.</param>
  /// <param name="x_fapi_interaction_id">An **[[RFC4122]](#nref-RFC4122)** UUID used as a correlation id. If provided, the data holder must play back this value in the x-fapi-interaction-id response header. If not provided a **[[RFC4122]](#nref-RFC4122)** UUID value is required to be provided in the response header to track the interaction.</param>
  /// <param name="x_fapi_auth_date">The time when the customer last logged in to the Data Recipient Software Product as described in **[[FAPI-R-Draft]](#nref-FAPI-R-Draft)**.  Required for all resource calls (customer present and unattended). Not required for unauthenticated calls.</param>
  /// <param name="x_fapi_customer_ip_address">The customer's original IP address if the customer is currently logged in to the Data Recipient Software Product. The presence of this header indicates that the API is being called in a customer present context. Not to be included for unauthenticated calls.</param>
  /// <param name="x_cds_client_headers">The customer's original standard http headers [Base64](#common-field-types) encoded, including the original User Agent header, if the customer is currently logged in to the Data Recipient Software Product. Mandatory for customer present calls.  Not required for unattended or unauthenticated calls.</param>
  /// <returns>Success</returns>
  [Microsoft.AspNetCore.Mvc.HttpGet, Microsoft.AspNetCore.Mvc.Route("banking/accounts/balances")]
  public System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.ActionResult<ResponseBankingAccountsBalanceList>> ListBalancesBulk([Microsoft.AspNetCore.Mvc.FromHeader(Name = "x-v")][Microsoft.AspNetCore.Mvc.ModelBinding.BindRequired] string x_v, [Microsoft.AspNetCore.Mvc.FromQuery(Name = "product-category")] ProductCategory2? product_category = null, [Microsoft.AspNetCore.Mvc.FromQuery(Name = "open-status")] OpenStatus2? open_status = null, [Microsoft.AspNetCore.Mvc.FromQuery(Name = "is-owned")] bool? is_owned = null, [Microsoft.AspNetCore.Mvc.FromQuery] int? page = null, [Microsoft.AspNetCore.Mvc.FromQuery(Name = "page-size")] int? page_size = null, [Microsoft.AspNetCore.Mvc.FromHeader(Name = "x-min-v")] string? x_min_v = null, [Microsoft.AspNetCore.Mvc.FromHeader(Name = "x-fapi-interaction-id")] string? x_fapi_interaction_id = null, [Microsoft.AspNetCore.Mvc.FromHeader(Name = "x-fapi-auth-date")] string? x_fapi_auth_date = null, [Microsoft.AspNetCore.Mvc.FromHeader(Name = "x-fapi-customer-ip-address")] string? x_fapi_customer_ip_address = null, [Microsoft.AspNetCore.Mvc.FromHeader(Name = "x-cds-client-headers")] string? x_cds_client_headers = null, System.Threading.CancellationToken cancellationToken) {

   return _implementation.ListBalancesBulkAsync(x_v, product_category, open_status ?? PurpleBank.OpenStatus2.ALL, is_owned, page ?? 1, page_size ?? 25, x_min_v, x_fapi_interaction_id, x_fapi_auth_date, x_fapi_customer_ip_address, x_cds_client_headers, cancellationToken);
  }

  /// <summary>
  /// Get Balances For Specific Accounts
  /// </summary>
  /// <remarks>
  /// Obtain balances for a specified list of accounts
  /// </remarks>
  /// <param name="x_v">Version of the API end point requested by the client. Must be set to a positive integer. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If the value of [x-min-v](#request-headers) is equal to or higher than the value of [x-v](#request-headers) then the [x-min-v](#request-headers) header should be treated as absent. If all versions requested are not supported then the data holder must respond with a 406 Not Acceptable. See [HTTP Headers](#request-headers)</param>
  /// <param name="body">The list of account IDs to obtain balances for</param>
  /// <param name="page">Page of results to request (standard pagination)</param>
  /// <param name="page_size">Page size to request. Default is 25 (standard pagination)</param>
  /// <param name="x_min_v">Minimum version of the API end point requested by the client. Must be set to a positive integer if provided. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If all versions requested are not supported then the data holder must respond with a 406 Not Acceptable.</param>
  /// <param name="x_fapi_interaction_id">An **[[RFC4122]](#nref-RFC4122)** UUID used as a correlation id. If provided, the data holder must play back this value in the x-fapi-interaction-id response header. If not provided a **[[RFC4122]](#nref-RFC4122)** UUID value is required to be provided in the response header to track the interaction.</param>
  /// <param name="x_fapi_auth_date">The time when the customer last logged in to the Data Recipient Software Product as described in **[[FAPI-R-Draft]](#nref-FAPI-R-Draft)**.  Required for all resource calls (customer present and unattended). Not required for unauthenticated calls.</param>
  /// <param name="x_fapi_customer_ip_address">The customer's original IP address if the customer is currently logged in to the Data Recipient Software Product. The presence of this header indicates that the API is being called in a customer present context. Not to be included for unauthenticated calls.</param>
  /// <param name="x_cds_client_headers">The customer's original standard http headers [Base64](#common-field-types) encoded, including the original User Agent header, if the customer is currently logged in to the Data Recipient Software Product. Mandatory for customer present calls.  Not required for unattended or unauthenticated calls.</param>
  /// <returns>Success</returns>
  [Microsoft.AspNetCore.Mvc.HttpPost, Microsoft.AspNetCore.Mvc.Route("banking/accounts/balances")]
  public System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.ActionResult<ResponseBankingAccountsBalanceList>> ListBalancesSpecificAccounts([Microsoft.AspNetCore.Mvc.FromHeader(Name = "x-v")][Microsoft.AspNetCore.Mvc.ModelBinding.BindRequired] string x_v, [Microsoft.AspNetCore.Mvc.FromBody][Microsoft.AspNetCore.Mvc.ModelBinding.BindRequired] RequestAccountIds body, [Microsoft.AspNetCore.Mvc.FromQuery] int? page = null, [Microsoft.AspNetCore.Mvc.FromQuery(Name = "page-size")] int? page_size = null, [Microsoft.AspNetCore.Mvc.FromHeader(Name = "x-min-v")] string? x_min_v = null, [Microsoft.AspNetCore.Mvc.FromHeader(Name = "x-fapi-interaction-id")] string? x_fapi_interaction_id = null, [Microsoft.AspNetCore.Mvc.FromHeader(Name = "x-fapi-auth-date")] string? x_fapi_auth_date = null, [Microsoft.AspNetCore.Mvc.FromHeader(Name = "x-fapi-customer-ip-address")] string? x_fapi_customer_ip_address = null, [Microsoft.AspNetCore.Mvc.FromHeader(Name = "x-cds-client-headers")] string? x_cds_client_headers = null, System.Threading.CancellationToken cancellationToken) {

   return _implementation.ListBalancesSpecificAccountsAsync(x_v, body, page ?? 1, page_size ?? 25, x_min_v, x_fapi_interaction_id, x_fapi_auth_date, x_fapi_customer_ip_address, x_cds_client_headers, cancellationToken);
  }

  /// <summary>
  /// Get Account Balance
  /// </summary>
  /// <remarks>
  /// Obtain the balance for a single specified account
  /// </remarks>
  /// <param name="accountId">ID of the specific account requested</param>
  /// <param name="x_v">Version of the API end point requested by the client. Must be set to a positive integer. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If the value of [x-min-v](#request-headers) is equal to or higher than the value of [x-v](#request-headers) then the [x-min-v](#request-headers) header should be treated as absent. If all versions requested are not supported then the data holder must respond with a 406 Not Acceptable. See [HTTP Headers](#request-headers)</param>
  /// <param name="x_min_v">Minimum version of the API end point requested by the client. Must be set to a positive integer if provided. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If all versions requested are not supported then the data holder must respond with a 406 Not Acceptable.</param>
  /// <param name="x_fapi_interaction_id">An **[[RFC4122]](#nref-RFC4122)** UUID used as a correlation id. If provided, the data holder must play back this value in the x-fapi-interaction-id response header. If not provided a **[[RFC4122]](#nref-RFC4122)** UUID value is required to be provided in the response header to track the interaction.</param>
  /// <param name="x_fapi_auth_date">The time when the customer last logged in to the Data Recipient Software Product as described in **[[FAPI-R-Draft]](#nref-FAPI-R-Draft)**.  Required for all resource calls (customer present and unattended). Not required for unauthenticated calls.</param>
  /// <param name="x_fapi_customer_ip_address">The customer's original IP address if the customer is currently logged in to the Data Recipient Software Product. The presence of this header indicates that the API is being called in a customer present context. Not to be included for unauthenticated calls.</param>
  /// <param name="x_cds_client_headers">The customer's original standard http headers [Base64](#common-field-types) encoded, including the original User Agent header, if the customer is currently logged in to the Data Recipient Software Product. Mandatory for customer present calls.  Not required for unattended or unauthenticated calls.</param>
  /// <returns>Success</returns>
  [Microsoft.AspNetCore.Mvc.HttpGet, Microsoft.AspNetCore.Mvc.Route("banking/accounts/{accountId}/balance")]
  public System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.ActionResult<ResponseBankingAccountsBalanceById>> GetBalance([Microsoft.AspNetCore.Mvc.ModelBinding.BindRequired] string accountId, [Microsoft.AspNetCore.Mvc.FromHeader(Name = "x-v")][Microsoft.AspNetCore.Mvc.ModelBinding.BindRequired] string x_v, [Microsoft.AspNetCore.Mvc.FromHeader(Name = "x-min-v")] string? x_min_v = null, [Microsoft.AspNetCore.Mvc.FromHeader(Name = "x-fapi-interaction-id")] string? x_fapi_interaction_id = null, [Microsoft.AspNetCore.Mvc.FromHeader(Name = "x-fapi-auth-date")] string? x_fapi_auth_date = null, [Microsoft.AspNetCore.Mvc.FromHeader(Name = "x-fapi-customer-ip-address")] string? x_fapi_customer_ip_address = null, [Microsoft.AspNetCore.Mvc.FromHeader(Name = "x-cds-client-headers")] string? x_cds_client_headers = null, System.Threading.CancellationToken cancellationToken) {

   return _implementation.GetBalanceAsync(accountId, x_v, x_min_v, x_fapi_interaction_id, x_fapi_auth_date, x_fapi_customer_ip_address, x_cds_client_headers, cancellationToken);
  }

  /// <summary>
  /// Get Account Detail
  /// </summary>
  /// <remarks>
  /// Obtain detailed information on a single account.
  /// <br/>
  /// <br/>Obsolete versions: [v1](includes/obsolete/get-account-detail-v1.html), [v2](includes/obsolete/get-account-detail-v2.html)
  /// </remarks>
  /// <param name="accountId">A tokenised identifier for the account which is unique but not shareable</param>
  /// <param name="x_v">Version of the API end point requested by the client. Must be set to a positive integer. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If the value of [x-min-v](#request-headers) is equal to or higher than the value of [x-v](#request-headers) then the [x-min-v](#request-headers) header should be treated as absent. If all versions requested are not supported then the data holder must respond with a 406 Not Acceptable. See [HTTP Headers](#request-headers)</param>
  /// <param name="x_min_v">Minimum version of the API end point requested by the client. Must be set to a positive integer if provided. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If all versions requested are not supported then the data holder must respond with a 406 Not Acceptable.</param>
  /// <param name="x_fapi_interaction_id">An **[[RFC4122]](#nref-RFC4122)** UUID used as a correlation id. If provided, the data holder must play back this value in the x-fapi-interaction-id response header. If not provided a **[[RFC4122]](#nref-RFC4122)** UUID value is required to be provided in the response header to track the interaction.</param>
  /// <param name="x_fapi_auth_date">The time when the customer last logged in to the Data Recipient Software Product as described in **[[FAPI-R-Draft]](#nref-FAPI-R-Draft)**.  Required for all resource calls (customer present and unattended). Not required for unauthenticated calls.</param>
  /// <param name="x_fapi_customer_ip_address">The customer's original IP address if the customer is currently logged in to the Data Recipient Software Product. The presence of this header indicates that the API is being called in a customer present context. Not to be included for unauthenticated calls.</param>
  /// <param name="x_cds_client_headers">The customer's original standard http headers [Base64](#common-field-types) encoded, including the original User Agent header, if the customer is currently logged in to the Data Recipient Software Product. Mandatory for customer present calls.  Not required for unattended or unauthenticated calls.</param>
  /// <returns>Success</returns>
  [Microsoft.AspNetCore.Mvc.HttpGet, Microsoft.AspNetCore.Mvc.Route("banking/accounts/{accountId}")]
  public System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.ActionResult<ResponseBankingAccountByIdV3>> GetAccountDetail([Microsoft.AspNetCore.Mvc.ModelBinding.BindRequired] string accountId, [Microsoft.AspNetCore.Mvc.FromHeader(Name = "x-v")][Microsoft.AspNetCore.Mvc.ModelBinding.BindRequired] string x_v, [Microsoft.AspNetCore.Mvc.FromHeader(Name = "x-min-v")] string? x_min_v = null, [Microsoft.AspNetCore.Mvc.FromHeader(Name = "x-fapi-interaction-id")] string? x_fapi_interaction_id = null, [Microsoft.AspNetCore.Mvc.FromHeader(Name = "x-fapi-auth-date")] string? x_fapi_auth_date = null, [Microsoft.AspNetCore.Mvc.FromHeader(Name = "x-fapi-customer-ip-address")] string? x_fapi_customer_ip_address = null, [Microsoft.AspNetCore.Mvc.FromHeader(Name = "x-cds-client-headers")] string? x_cds_client_headers = null, System.Threading.CancellationToken cancellationToken) {

   return _implementation.GetAccountDetailAsync(accountId, x_v, x_min_v, x_fapi_interaction_id, x_fapi_auth_date, x_fapi_customer_ip_address, x_cds_client_headers, cancellationToken);
  }

  /// <summary>
  /// Get Transactions For Account
  /// </summary>
  /// <remarks>
  /// Obtain transactions for a specific account.
  /// <br/>
  /// <br/>Some general notes that apply to all end points that retrieve transactions:
  /// <br/>
  /// <br/>- Where multiple transactions are returned, transactions should be ordered according to effective date in descending order
  /// <br/>- As the date and time for a transaction can alter depending on status and transaction type two separate date/times are included in the payload. There are still some scenarios where neither of these time stamps is available. For the purpose of filtering and ordering it is expected that the data holder will use the "effective" date/time which will be defined as:
  /// <br/>  - Posted date/time if available, then
  /// <br/>  - Execution date/time if available, then
  /// <br/>  - A reasonable date/time nominated by the data holder using internal data structures
  /// <br/>- For transaction amounts it should be assumed that a negative value indicates a reduction of the available balance on the account while a positive value indicates an increase in the available balance on the account
  /// <br/>- For aggregated transactions (ie. groups of sub transactions reported as a single entry for the account) only the aggregated information, with as much consistent information accross the subsidiary transactions as possible, is required to be shared
  /// </remarks>
  /// <param name="accountId">ID of the account to get transactions for.  Must have previously been returned by one of the account list end points.</param>
  /// <param name="x_v">Version of the API end point requested by the client. Must be set to a positive integer. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If the value of [x-min-v](#request-headers) is equal to or higher than the value of [x-v](#request-headers) then the [x-min-v](#request-headers) header should be treated as absent. If all versions requested are not supported then the data holder must respond with a 406 Not Acceptable. See [HTTP Headers](#request-headers)</param>
  /// <param name="oldest_time">Constrain the transaction history request to transactions with effective time at or after this date/time. If absent defaults to newest-time minus 90 days.  Format is aligned to DateTimeString common type</param>
  /// <param name="newest_time">Constrain the transaction history request to transactions with effective time at or before this date/time.  If absent defaults to today.  Format is aligned to DateTimeString common type</param>
  /// <param name="min_amount">Filter transactions to only transactions with amounts higher or equal to than this amount</param>
  /// <param name="max_amount">Filter transactions to only transactions with amounts less than or equal to than this amount</param>
  /// <param name="text">Filter transactions to only transactions where this string value is found as a substring of either the reference or description fields. Format is arbitrary ASCII string. This parameter is optionally implemented by data holders. If it is not implemented then a response should be provided as normal without text filtering applied and an additional boolean field named isQueryParamUnsupported should be included in the meta object and set to true (whether the text parameter is supplied or not)</param>
  /// <param name="page">Page of results to request (standard pagination)</param>
  /// <param name="page_size">Page size to request. Default is 25 (standard pagination)</param>
  /// <param name="x_min_v">Minimum version of the API end point requested by the client. Must be set to a positive integer if provided. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If all versions requested are not supported then the data holder must respond with a 406 Not Acceptable.</param>
  /// <param name="x_fapi_interaction_id">An **[[RFC4122]](#nref-RFC4122)** UUID used as a correlation id. If provided, the data holder must play back this value in the x-fapi-interaction-id response header. If not provided a **[[RFC4122]](#nref-RFC4122)** UUID value is required to be provided in the response header to track the interaction.</param>
  /// <param name="x_fapi_auth_date">The time when the customer last logged in to the Data Recipient Software Product as described in **[[FAPI-R-Draft]](#nref-FAPI-R-Draft)**.  Required for all resource calls (customer present and unattended). Not required for unauthenticated calls.</param>
  /// <param name="x_fapi_customer_ip_address">The customer's original IP address if the customer is currently logged in to the Data Recipient Software Product. The presence of this header indicates that the API is being called in a customer present context. Not to be included for unauthenticated calls.</param>
  /// <param name="x_cds_client_headers">The customer's original standard http headers [Base64](#common-field-types) encoded, including the original User Agent header, if the customer is currently logged in to the Data Recipient Software Product. Mandatory for customer present calls.  Not required for unattended or unauthenticated calls.</param>
  /// <returns>Success</returns>
  [Microsoft.AspNetCore.Mvc.HttpGet, Microsoft.AspNetCore.Mvc.Route("banking/accounts/{accountId}/transactions")]
  public System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.ActionResult<ResponseBankingTransactionList>> GetTransactions([Microsoft.AspNetCore.Mvc.ModelBinding.BindRequired] string accountId, [Microsoft.AspNetCore.Mvc.FromHeader(Name = "x-v")][Microsoft.AspNetCore.Mvc.ModelBinding.BindRequired] string x_v, [Microsoft.AspNetCore.Mvc.FromQuery(Name = "oldest-time")] string? oldest_time = null, [Microsoft.AspNetCore.Mvc.FromQuery(Name = "newest-time")] string? newest_time = null, [Microsoft.AspNetCore.Mvc.FromQuery(Name = "min-amount")] string? min_amount = null, [Microsoft.AspNetCore.Mvc.FromQuery(Name = "max-amount")] string? max_amount = null, [Microsoft.AspNetCore.Mvc.FromQuery] string? text = null, [Microsoft.AspNetCore.Mvc.FromQuery] int? page = null, [Microsoft.AspNetCore.Mvc.FromQuery(Name = "page-size")] int? page_size = null, [Microsoft.AspNetCore.Mvc.FromHeader(Name = "x-min-v")] string? x_min_v = null, [Microsoft.AspNetCore.Mvc.FromHeader(Name = "x-fapi-interaction-id")] string? x_fapi_interaction_id = null, [Microsoft.AspNetCore.Mvc.FromHeader(Name = "x-fapi-auth-date")] string? x_fapi_auth_date = null, [Microsoft.AspNetCore.Mvc.FromHeader(Name = "x-fapi-customer-ip-address")] string? x_fapi_customer_ip_address = null, [Microsoft.AspNetCore.Mvc.FromHeader(Name = "x-cds-client-headers")] string? x_cds_client_headers = null, System.Threading.CancellationToken cancellationToken) {

   return _implementation.GetTransactionsAsync(accountId, x_v, oldest_time, newest_time, min_amount, max_amount, text, page ?? 1, page_size ?? 25, x_min_v, x_fapi_interaction_id, x_fapi_auth_date, x_fapi_customer_ip_address, x_cds_client_headers, cancellationToken);
  }

  /// <summary>
  /// Get Transaction Detail
  /// </summary>
  /// <remarks>
  /// Obtain detailed information on a transaction for a specific account
  /// </remarks>
  /// <param name="accountId">ID of the account to get transactions for.  Must have previously been returned by one of the account list end points</param>
  /// <param name="transactionId">ID of the transaction obtained from a previous call to one of the other transaction end points</param>
  /// <param name="x_v">Version of the API end point requested by the client. Must be set to a positive integer. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If the value of [x-min-v](#request-headers) is equal to or higher than the value of [x-v](#request-headers) then the [x-min-v](#request-headers) header should be treated as absent. If all versions requested are not supported then the data holder must respond with a 406 Not Acceptable. See [HTTP Headers](#request-headers)</param>
  /// <param name="x_min_v">Minimum version of the API end point requested by the client. Must be set to a positive integer if provided. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If all versions requested are not supported then the data holder must respond with a 406 Not Acceptable.</param>
  /// <param name="x_fapi_interaction_id">An **[[RFC4122]](#nref-RFC4122)** UUID used as a correlation id. If provided, the data holder must play back this value in the x-fapi-interaction-id response header. If not provided a **[[RFC4122]](#nref-RFC4122)** UUID value is required to be provided in the response header to track the interaction.</param>
  /// <param name="x_fapi_auth_date">The time when the customer last logged in to the Data Recipient Software Product as described in **[[FAPI-R-Draft]](#nref-FAPI-R-Draft)**.  Required for all resource calls (customer present and unattended). Not required for unauthenticated calls.</param>
  /// <param name="x_fapi_customer_ip_address">The customer's original IP address if the customer is currently logged in to the Data Recipient Software Product. The presence of this header indicates that the API is being called in a customer present context. Not to be included for unauthenticated calls.</param>
  /// <param name="x_cds_client_headers">The customer's original standard http headers [Base64](#common-field-types) encoded, including the original User Agent header, if the customer is currently logged in to the Data Recipient Software Product. Mandatory for customer present calls.  Not required for unattended or unauthenticated calls.</param>
  /// <returns>Success</returns>
  [Microsoft.AspNetCore.Mvc.HttpGet, Microsoft.AspNetCore.Mvc.Route("banking/accounts/{accountId}/transactions/{transactionId}")]
  public System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.ActionResult<ResponseBankingTransactionById>> GetTransactionDetail([Microsoft.AspNetCore.Mvc.ModelBinding.BindRequired] string accountId, [Microsoft.AspNetCore.Mvc.ModelBinding.BindRequired] string transactionId, [Microsoft.AspNetCore.Mvc.FromHeader(Name = "x-v")][Microsoft.AspNetCore.Mvc.ModelBinding.BindRequired] string x_v, [Microsoft.AspNetCore.Mvc.FromHeader(Name = "x-min-v")] string? x_min_v = null, [Microsoft.AspNetCore.Mvc.FromHeader(Name = "x-fapi-interaction-id")] string? x_fapi_interaction_id = null, [Microsoft.AspNetCore.Mvc.FromHeader(Name = "x-fapi-auth-date")] string? x_fapi_auth_date = null, [Microsoft.AspNetCore.Mvc.FromHeader(Name = "x-fapi-customer-ip-address")] string? x_fapi_customer_ip_address = null, [Microsoft.AspNetCore.Mvc.FromHeader(Name = "x-cds-client-headers")] string? x_cds_client_headers = null, System.Threading.CancellationToken cancellationToken) {

   return _implementation.GetTransactionDetailAsync(accountId, transactionId, x_v, x_min_v, x_fapi_interaction_id, x_fapi_auth_date, x_fapi_customer_ip_address, x_cds_client_headers, cancellationToken);
  }

  /// <summary>
  /// Get Direct Debits For Account
  /// </summary>
  /// <remarks>
  /// Obtain direct debit authorisations for a specific account
  /// </remarks>
  /// <param name="accountId">ID of the account to get direct debit authorisations for.  Must have previously been returned by one of the account list end points.</param>
  /// <param name="x_v">Version of the API end point requested by the client. Must be set to a positive integer. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If the value of [x-min-v](#request-headers) is equal to or higher than the value of [x-v](#request-headers) then the [x-min-v](#request-headers) header should be treated as absent. If all versions requested are not supported then the data holder must respond with a 406 Not Acceptable. See [HTTP Headers](#request-headers)</param>
  /// <param name="page">Page of results to request (standard pagination)</param>
  /// <param name="page_size">Page size to request. Default is 25 (standard pagination)</param>
  /// <param name="x_min_v">Minimum version of the API end point requested by the client. Must be set to a positive integer if provided. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If all versions requested are not supported then the data holder must respond with a 406 Not Acceptable.</param>
  /// <param name="x_fapi_interaction_id">An **[[RFC4122]](#nref-RFC4122)** UUID used as a correlation id. If provided, the data holder must play back this value in the x-fapi-interaction-id response header. If not provided a **[[RFC4122]](#nref-RFC4122)** UUID value is required to be provided in the response header to track the interaction.</param>
  /// <param name="x_fapi_auth_date">The time when the customer last logged in to the Data Recipient Software Product as described in **[[FAPI-R-Draft]](#nref-FAPI-R-Draft)**.  Required for all resource calls (customer present and unattended). Not required for unauthenticated calls.</param>
  /// <param name="x_fapi_customer_ip_address">The customer's original IP address if the customer is currently logged in to the Data Recipient Software Product. The presence of this header indicates that the API is being called in a customer present context. Not to be included for unauthenticated calls.</param>
  /// <param name="x_cds_client_headers">The customer's original standard http headers [Base64](#common-field-types) encoded, including the original User Agent header, if the customer is currently logged in to the Data Recipient Software Product. Mandatory for customer present calls.  Not required for unattended or unauthenticated calls.</param>
  /// <returns>Success</returns>
  [Microsoft.AspNetCore.Mvc.HttpGet, Microsoft.AspNetCore.Mvc.Route("banking/accounts/{accountId}/direct-debits")]
  public System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.ActionResult<ResponseBankingDirectDebitAuthorisationList>> ListDirectDebits([Microsoft.AspNetCore.Mvc.ModelBinding.BindRequired] string accountId, [Microsoft.AspNetCore.Mvc.FromHeader(Name = "x-v")][Microsoft.AspNetCore.Mvc.ModelBinding.BindRequired] string x_v, [Microsoft.AspNetCore.Mvc.FromQuery] int? page = null, [Microsoft.AspNetCore.Mvc.FromQuery(Name = "page-size")] int? page_size = null, [Microsoft.AspNetCore.Mvc.FromHeader(Name = "x-min-v")] string? x_min_v = null, [Microsoft.AspNetCore.Mvc.FromHeader(Name = "x-fapi-interaction-id")] string? x_fapi_interaction_id = null, [Microsoft.AspNetCore.Mvc.FromHeader(Name = "x-fapi-auth-date")] string? x_fapi_auth_date = null, [Microsoft.AspNetCore.Mvc.FromHeader(Name = "x-fapi-customer-ip-address")] string? x_fapi_customer_ip_address = null, [Microsoft.AspNetCore.Mvc.FromHeader(Name = "x-cds-client-headers")] string? x_cds_client_headers = null, System.Threading.CancellationToken cancellationToken) {

   return _implementation.ListDirectDebitsAsync(accountId, x_v, page ?? 1, page_size ?? 25, x_min_v, x_fapi_interaction_id, x_fapi_auth_date, x_fapi_customer_ip_address, x_cds_client_headers, cancellationToken);
  }

  /// <summary>
  /// Get Bulk Direct Debits
  /// </summary>
  /// <remarks>
  /// Obtain direct debit authorisations for multiple, filtered accounts
  /// </remarks>
  /// <param name="x_v">Version of the API end point requested by the client. Must be set to a positive integer. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If the value of [x-min-v](#request-headers) is equal to or higher than the value of [x-v](#request-headers) then the [x-min-v](#request-headers) header should be treated as absent. If all versions requested are not supported then the data holder must respond with a 406 Not Acceptable. See [HTTP Headers](#request-headers)</param>
  /// <param name="product_category">Used to filter results on the productCategory field applicable to accounts. Any one of the valid values for this field can be supplied. If absent then all accounts returned.</param>
  /// <param name="open_status">Used to filter results according to open/closed status. Values can be OPEN, CLOSED or ALL. If absent then ALL is assumed</param>
  /// <param name="is_owned">Filters accounts based on whether they are owned by the authorised customer.  True for owned accounts, false for unowned accounts and absent for all accounts</param>
  /// <param name="page">Page of results to request (standard pagination)</param>
  /// <param name="page_size">Page size to request. Default is 25 (standard pagination)</param>
  /// <param name="x_min_v">Minimum version of the API end point requested by the client. Must be set to a positive integer if provided. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If all versions requested are not supported then the data holder must respond with a 406 Not Acceptable.</param>
  /// <param name="x_fapi_interaction_id">An **[[RFC4122]](#nref-RFC4122)** UUID used as a correlation id. If provided, the data holder must play back this value in the x-fapi-interaction-id response header. If not provided a **[[RFC4122]](#nref-RFC4122)** UUID value is required to be provided in the response header to track the interaction.</param>
  /// <param name="x_fapi_auth_date">The time when the customer last logged in to the Data Recipient Software Product as described in **[[FAPI-R-Draft]](#nref-FAPI-R-Draft)**.  Required for all resource calls (customer present and unattended). Not required for unauthenticated calls.</param>
  /// <param name="x_fapi_customer_ip_address">The customer's original IP address if the customer is currently logged in to the Data Recipient Software Product. The presence of this header indicates that the API is being called in a customer present context. Not to be included for unauthenticated calls.</param>
  /// <param name="x_cds_client_headers">The customer's original standard http headers [Base64](#common-field-types) encoded, including the original User Agent header, if the customer is currently logged in to the Data Recipient Software Product. Mandatory for customer present calls.  Not required for unattended or unauthenticated calls.</param>
  /// <returns>Success</returns>
  [Microsoft.AspNetCore.Mvc.HttpGet, Microsoft.AspNetCore.Mvc.Route("banking/accounts/direct-debits")]
  public System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.ActionResult<ResponseBankingDirectDebitAuthorisationList>> ListDirectDebitsBulk([Microsoft.AspNetCore.Mvc.FromHeader(Name = "x-v")][Microsoft.AspNetCore.Mvc.ModelBinding.BindRequired] string x_v, [Microsoft.AspNetCore.Mvc.FromQuery(Name = "product-category")] ProductCategory3? product_category = null, [Microsoft.AspNetCore.Mvc.FromQuery(Name = "open-status")] OpenStatus3? open_status = null, [Microsoft.AspNetCore.Mvc.FromQuery(Name = "is-owned")] bool? is_owned = null, [Microsoft.AspNetCore.Mvc.FromQuery] int? page = null, [Microsoft.AspNetCore.Mvc.FromQuery(Name = "page-size")] int? page_size = null, [Microsoft.AspNetCore.Mvc.FromHeader(Name = "x-min-v")] string? x_min_v = null, [Microsoft.AspNetCore.Mvc.FromHeader(Name = "x-fapi-interaction-id")] string? x_fapi_interaction_id = null, [Microsoft.AspNetCore.Mvc.FromHeader(Name = "x-fapi-auth-date")] string? x_fapi_auth_date = null, [Microsoft.AspNetCore.Mvc.FromHeader(Name = "x-fapi-customer-ip-address")] string? x_fapi_customer_ip_address = null, [Microsoft.AspNetCore.Mvc.FromHeader(Name = "x-cds-client-headers")] string? x_cds_client_headers = null, System.Threading.CancellationToken cancellationToken) {

   return _implementation.ListDirectDebitsBulkAsync(x_v, product_category, open_status ?? PurpleBank.OpenStatus3.ALL, is_owned, page ?? 1, page_size ?? 25, x_min_v, x_fapi_interaction_id, x_fapi_auth_date, x_fapi_customer_ip_address, x_cds_client_headers, cancellationToken);
  }

  /// <summary>
  /// Get Direct Debits For Specific Accounts
  /// </summary>
  /// <remarks>
  /// Obtain direct debit authorisations for a specified list of accounts
  /// </remarks>
  /// <param name="x_v">Version of the API end point requested by the client. Must be set to a positive integer. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If the value of [x-min-v](#request-headers) is equal to or higher than the value of [x-v](#request-headers) then the [x-min-v](#request-headers) header should be treated as absent. If all versions requested are not supported then the data holder must respond with a 406 Not Acceptable. See [HTTP Headers](#request-headers)</param>
  /// <param name="body">Array of specific accountIds to obtain authorisations for</param>
  /// <param name="page">Page of results to request (standard pagination)</param>
  /// <param name="page_size">Page size to request. Default is 25 (standard pagination)</param>
  /// <param name="x_min_v">Minimum version of the API end point requested by the client. Must be set to a positive integer if provided. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If all versions requested are not supported then the data holder must respond with a 406 Not Acceptable.</param>
  /// <param name="x_fapi_interaction_id">An **[[RFC4122]](#nref-RFC4122)** UUID used as a correlation id. If provided, the data holder must play back this value in the x-fapi-interaction-id response header. If not provided a **[[RFC4122]](#nref-RFC4122)** UUID value is required to be provided in the response header to track the interaction.</param>
  /// <param name="x_fapi_auth_date">The time when the customer last logged in to the Data Recipient Software Product as described in **[[FAPI-R-Draft]](#nref-FAPI-R-Draft)**.  Required for all resource calls (customer present and unattended). Not required for unauthenticated calls.</param>
  /// <param name="x_fapi_customer_ip_address">The customer's original IP address if the customer is currently logged in to the Data Recipient Software Product. The presence of this header indicates that the API is being called in a customer present context. Not to be included for unauthenticated calls.</param>
  /// <param name="x_cds_client_headers">The customer's original standard http headers [Base64](#common-field-types) encoded, including the original User Agent header, if the customer is currently logged in to the Data Recipient Software Product. Mandatory for customer present calls.  Not required for unattended or unauthenticated calls.</param>
  /// <returns>Success</returns>
  [Microsoft.AspNetCore.Mvc.HttpPost, Microsoft.AspNetCore.Mvc.Route("banking/accounts/direct-debits")]
  public System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.ActionResult<ResponseBankingDirectDebitAuthorisationList>> ListDirectDebitsSpecificAccounts([Microsoft.AspNetCore.Mvc.FromHeader(Name = "x-v")][Microsoft.AspNetCore.Mvc.ModelBinding.BindRequired] string x_v, [Microsoft.AspNetCore.Mvc.FromBody][Microsoft.AspNetCore.Mvc.ModelBinding.BindRequired] RequestAccountIds body, [Microsoft.AspNetCore.Mvc.FromQuery] int? page = null, [Microsoft.AspNetCore.Mvc.FromQuery(Name = "page-size")] int? page_size = null, [Microsoft.AspNetCore.Mvc.FromHeader(Name = "x-min-v")] string? x_min_v = null, [Microsoft.AspNetCore.Mvc.FromHeader(Name = "x-fapi-interaction-id")] string? x_fapi_interaction_id = null, [Microsoft.AspNetCore.Mvc.FromHeader(Name = "x-fapi-auth-date")] string? x_fapi_auth_date = null, [Microsoft.AspNetCore.Mvc.FromHeader(Name = "x-fapi-customer-ip-address")] string? x_fapi_customer_ip_address = null, [Microsoft.AspNetCore.Mvc.FromHeader(Name = "x-cds-client-headers")] string? x_cds_client_headers = null, System.Threading.CancellationToken cancellationToken) {

   return _implementation.ListDirectDebitsSpecificAccountsAsync(x_v, body, page ?? 1, page_size ?? 25, x_min_v, x_fapi_interaction_id, x_fapi_auth_date, x_fapi_customer_ip_address, x_cds_client_headers, cancellationToken);
  }

  /// <summary>
  /// Get Scheduled Payments for Account
  /// </summary>
  /// <remarks>
  /// Obtain scheduled, outgoing payments for a specific account
  /// </remarks>
  /// <param name="accountId">ID of the account to get scheduled payments for. Must have previously been returned by one of the account list end points. The account specified is the source account for the payment</param>
  /// <param name="x_v">Version of the API end point requested by the client. Must be set to a positive integer. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If the value of [x-min-v](#request-headers) is equal to or higher than the value of [x-v](#request-headers) then the [x-min-v](#request-headers) header should be treated as absent. If all versions requested are not supported then the data holder must respond with a 406 Not Acceptable. See [HTTP Headers](#request-headers)</param>
  /// <param name="page">Page of results to request (standard pagination)</param>
  /// <param name="page_size">Page size to request. Default is 25 (standard pagination)</param>
  /// <param name="x_min_v">Minimum version of the API end point requested by the client. Must be set to a positive integer if provided. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If all versions requested are not supported then the data holder must respond with a 406 Not Acceptable.</param>
  /// <param name="x_fapi_interaction_id">An **[[RFC4122]](#nref-RFC4122)** UUID used as a correlation id. If provided, the data holder must play back this value in the x-fapi-interaction-id response header. If not provided a **[[RFC4122]](#nref-RFC4122)** UUID value is required to be provided in the response header to track the interaction.</param>
  /// <param name="x_fapi_auth_date">The time when the customer last logged in to the Data Recipient Software Product as described in **[[FAPI-R-Draft]](#nref-FAPI-R-Draft)**.  Required for all resource calls (customer present and unattended). Not required for unauthenticated calls.</param>
  /// <param name="x_fapi_customer_ip_address">The customer's original IP address if the customer is currently logged in to the Data Recipient Software Product. The presence of this header indicates that the API is being called in a customer present context. Not to be included for unauthenticated calls.</param>
  /// <param name="x_cds_client_headers">The customer's original standard http headers [Base64](#common-field-types) encoded, including the original User Agent header, if the customer is currently logged in to the Data Recipient Software Product. Mandatory for customer present calls.  Not required for unattended or unauthenticated calls.</param>
  /// <returns>Success</returns>
  [Microsoft.AspNetCore.Mvc.HttpGet, Microsoft.AspNetCore.Mvc.Route("banking/accounts/{accountId}/payments/scheduled")]
  public System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.ActionResult<ResponseBankingScheduledPaymentsList>> ListScheduledPayments([Microsoft.AspNetCore.Mvc.ModelBinding.BindRequired] string accountId, [Microsoft.AspNetCore.Mvc.FromHeader(Name = "x-v")][Microsoft.AspNetCore.Mvc.ModelBinding.BindRequired] string x_v, [Microsoft.AspNetCore.Mvc.FromQuery] int? page = null, [Microsoft.AspNetCore.Mvc.FromQuery(Name = "page-size")] int? page_size = null, [Microsoft.AspNetCore.Mvc.FromHeader(Name = "x-min-v")] string? x_min_v = null, [Microsoft.AspNetCore.Mvc.FromHeader(Name = "x-fapi-interaction-id")] string? x_fapi_interaction_id = null, [Microsoft.AspNetCore.Mvc.FromHeader(Name = "x-fapi-auth-date")] string? x_fapi_auth_date = null, [Microsoft.AspNetCore.Mvc.FromHeader(Name = "x-fapi-customer-ip-address")] string? x_fapi_customer_ip_address = null, [Microsoft.AspNetCore.Mvc.FromHeader(Name = "x-cds-client-headers")] string? x_cds_client_headers = null, System.Threading.CancellationToken cancellationToken) {

   return _implementation.ListScheduledPaymentsAsync(accountId, x_v, page ?? 1, page_size ?? 25, x_min_v, x_fapi_interaction_id, x_fapi_auth_date, x_fapi_customer_ip_address, x_cds_client_headers, cancellationToken);
  }

  /// <summary>
  /// Get Scheduled Payments Bulk
  /// </summary>
  /// <remarks>
  /// Obtain scheduled payments for multiple, filtered accounts that are the source of funds for the payments
  /// </remarks>
  /// <param name="x_v">Version of the API end point requested by the client. Must be set to a positive integer. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If the value of [x-min-v](#request-headers) is equal to or higher than the value of [x-v](#request-headers) then the [x-min-v](#request-headers) header should be treated as absent. If all versions requested are not supported then the data holder must respond with a 406 Not Acceptable. See [HTTP Headers](#request-headers)</param>
  /// <param name="product_category">Used to filter results on the productCategory field applicable to accounts. Any one of the valid values for this field can be supplied. If absent then all accounts returned.</param>
  /// <param name="open_status">Used to filter results according to open/closed status. Values can be OPEN, CLOSED or ALL. If absent then ALL is assumed</param>
  /// <param name="is_owned">Filters accounts based on whether they are owned by the authorised customer.  True for owned accounts, false for unowned accounts and absent for all accounts</param>
  /// <param name="page">Page of results to request (standard pagination)</param>
  /// <param name="page_size">Page size to request. Default is 25 (standard pagination)</param>
  /// <param name="x_min_v">Minimum version of the API end point requested by the client. Must be set to a positive integer if provided. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If all versions requested are not supported then the data holder must respond with a 406 Not Acceptable.</param>
  /// <param name="x_fapi_interaction_id">An **[[RFC4122]](#nref-RFC4122)** UUID used as a correlation id. If provided, the data holder must play back this value in the x-fapi-interaction-id response header. If not provided a **[[RFC4122]](#nref-RFC4122)** UUID value is required to be provided in the response header to track the interaction.</param>
  /// <param name="x_fapi_auth_date">The time when the customer last logged in to the Data Recipient Software Product as described in **[[FAPI-R-Draft]](#nref-FAPI-R-Draft)**.  Required for all resource calls (customer present and unattended). Not required for unauthenticated calls.</param>
  /// <param name="x_fapi_customer_ip_address">The customer's original IP address if the customer is currently logged in to the Data Recipient Software Product. The presence of this header indicates that the API is being called in a customer present context. Not to be included for unauthenticated calls.</param>
  /// <param name="x_cds_client_headers">The customer's original standard http headers [Base64](#common-field-types) encoded, including the original User Agent header, if the customer is currently logged in to the Data Recipient Software Product. Mandatory for customer present calls.  Not required for unattended or unauthenticated calls.</param>
  /// <returns>Success</returns>
  [Microsoft.AspNetCore.Mvc.HttpGet, Microsoft.AspNetCore.Mvc.Route("banking/payments/scheduled")]
  public System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.ActionResult<ResponseBankingScheduledPaymentsList>> ListScheduledPaymentsBulk([Microsoft.AspNetCore.Mvc.FromHeader(Name = "x-v")][Microsoft.AspNetCore.Mvc.ModelBinding.BindRequired] string x_v, [Microsoft.AspNetCore.Mvc.FromQuery(Name = "product-category")] ProductCategory4? product_category = null, [Microsoft.AspNetCore.Mvc.FromQuery(Name = "open-status")] OpenStatus4? open_status = null, [Microsoft.AspNetCore.Mvc.FromQuery(Name = "is-owned")] bool? is_owned = null, [Microsoft.AspNetCore.Mvc.FromQuery] int? page = null, [Microsoft.AspNetCore.Mvc.FromQuery(Name = "page-size")] int? page_size = null, [Microsoft.AspNetCore.Mvc.FromHeader(Name = "x-min-v")] string? x_min_v = null, [Microsoft.AspNetCore.Mvc.FromHeader(Name = "x-fapi-interaction-id")] string? x_fapi_interaction_id = null, [Microsoft.AspNetCore.Mvc.FromHeader(Name = "x-fapi-auth-date")] string? x_fapi_auth_date = null, [Microsoft.AspNetCore.Mvc.FromHeader(Name = "x-fapi-customer-ip-address")] string? x_fapi_customer_ip_address = null, [Microsoft.AspNetCore.Mvc.FromHeader(Name = "x-cds-client-headers")] string? x_cds_client_headers = null, System.Threading.CancellationToken cancellationToken) {

   return _implementation.ListScheduledPaymentsBulkAsync(x_v, product_category, open_status ?? PurpleBank.OpenStatus4.ALL, is_owned, page ?? 1, page_size ?? 25, x_min_v, x_fapi_interaction_id, x_fapi_auth_date, x_fapi_customer_ip_address, x_cds_client_headers, cancellationToken);
  }

  /// <summary>
  /// Get Scheduled Payments For Specific Accounts
  /// </summary>
  /// <remarks>
  /// Obtain scheduled payments for a specified list of accounts
  /// </remarks>
  /// <param name="x_v">Version of the API end point requested by the client. Must be set to a positive integer. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If the value of [x-min-v](#request-headers) is equal to or higher than the value of [x-v](#request-headers) then the [x-min-v](#request-headers) header should be treated as absent. If all versions requested are not supported then the data holder must respond with a 406 Not Acceptable. See [HTTP Headers](#request-headers)</param>
  /// <param name="body">Array of specific accountIds to obtain scheduled payments for.  The accounts specified are the source of funds for the payments returned</param>
  /// <param name="page">Page of results to request (standard pagination)</param>
  /// <param name="page_size">Page size to request. Default is 25 (standard pagination)</param>
  /// <param name="x_min_v">Minimum version of the API end point requested by the client. Must be set to a positive integer if provided. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If all versions requested are not supported then the data holder must respond with a 406 Not Acceptable.</param>
  /// <param name="x_fapi_interaction_id">An **[[RFC4122]](#nref-RFC4122)** UUID used as a correlation id. If provided, the data holder must play back this value in the x-fapi-interaction-id response header. If not provided a **[[RFC4122]](#nref-RFC4122)** UUID value is required to be provided in the response header to track the interaction.</param>
  /// <param name="x_fapi_auth_date">The time when the customer last logged in to the Data Recipient Software Product as described in **[[FAPI-R-Draft]](#nref-FAPI-R-Draft)**.  Required for all resource calls (customer present and unattended). Not required for unauthenticated calls.</param>
  /// <param name="x_fapi_customer_ip_address">The customer's original IP address if the customer is currently logged in to the Data Recipient Software Product. The presence of this header indicates that the API is being called in a customer present context. Not to be included for unauthenticated calls.</param>
  /// <param name="x_cds_client_headers">The customer's original standard http headers [Base64](#common-field-types) encoded, including the original User Agent header, if the customer is currently logged in to the Data Recipient Software Product. Mandatory for customer present calls.  Not required for unattended or unauthenticated calls.</param>
  /// <returns>Success</returns>
  [Microsoft.AspNetCore.Mvc.HttpPost, Microsoft.AspNetCore.Mvc.Route("banking/payments/scheduled")]
  public System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.ActionResult<ResponseBankingScheduledPaymentsList>> ListScheduledPaymentsSpecificAccounts([Microsoft.AspNetCore.Mvc.FromHeader(Name = "x-v")][Microsoft.AspNetCore.Mvc.ModelBinding.BindRequired] string x_v, [Microsoft.AspNetCore.Mvc.FromBody][Microsoft.AspNetCore.Mvc.ModelBinding.BindRequired] RequestAccountIds body, [Microsoft.AspNetCore.Mvc.FromQuery] int? page = null, [Microsoft.AspNetCore.Mvc.FromQuery(Name = "page-size")] int? page_size = null, [Microsoft.AspNetCore.Mvc.FromHeader(Name = "x-min-v")] string? x_min_v = null, [Microsoft.AspNetCore.Mvc.FromHeader(Name = "x-fapi-interaction-id")] string? x_fapi_interaction_id = null, [Microsoft.AspNetCore.Mvc.FromHeader(Name = "x-fapi-auth-date")] string? x_fapi_auth_date = null, [Microsoft.AspNetCore.Mvc.FromHeader(Name = "x-fapi-customer-ip-address")] string? x_fapi_customer_ip_address = null, [Microsoft.AspNetCore.Mvc.FromHeader(Name = "x-cds-client-headers")] string? x_cds_client_headers = null, System.Threading.CancellationToken cancellationToken) {

   return _implementation.ListScheduledPaymentsSpecificAccountsAsync(x_v, body, page ?? 1, page_size ?? 25, x_min_v, x_fapi_interaction_id, x_fapi_auth_date, x_fapi_customer_ip_address, x_cds_client_headers, cancellationToken);
  }

  /// <summary>
  /// Get Payees
  /// </summary>
  /// <remarks>
  /// Obtain a list of pre-registered payees.
  /// <br/>
  /// <br/>Obsolete versions: [v1](includes/obsolete/get-payees-v1.html)
  /// </remarks>
  /// <param name="x_v">Version of the API end point requested by the client. Must be set to a positive integer. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If the value of [x-min-v](#request-headers) is equal to or higher than the value of [x-v](#request-headers) then the [x-min-v](#request-headers) header should be treated as absent. If all versions requested are not supported then the data holder must respond with a 406 Not Acceptable. See [HTTP Headers](#request-headers)</param>
  /// <param name="type">Filter on the payee type field.  In addition to normal type field values, ALL can be specified to retrieve all payees.  If absent the assumed value is ALL</param>
  /// <param name="page">Page of results to request (standard pagination)</param>
  /// <param name="page_size">Page size to request. Default is 25 (standard pagination)</param>
  /// <param name="x_min_v">Minimum version of the API end point requested by the client. Must be set to a positive integer if provided. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If all versions requested are not supported then the data holder must respond with a 406 Not Acceptable.</param>
  /// <param name="x_fapi_interaction_id">An **[[RFC4122]](#nref-RFC4122)** UUID used as a correlation id. If provided, the data holder must play back this value in the x-fapi-interaction-id response header. If not provided a **[[RFC4122]](#nref-RFC4122)** UUID value is required to be provided in the response header to track the interaction.</param>
  /// <param name="x_fapi_auth_date">The time when the customer last logged in to the Data Recipient Software Product as described in **[[FAPI-R-Draft]](#nref-FAPI-R-Draft)**.  Required for all resource calls (customer present and unattended). Not required for unauthenticated calls.</param>
  /// <param name="x_fapi_customer_ip_address">The customer's original IP address if the customer is currently logged in to the Data Recipient Software Product. The presence of this header indicates that the API is being called in a customer present context. Not to be included for unauthenticated calls.</param>
  /// <param name="x_cds_client_headers">The customer's original standard http headers [Base64](#common-field-types) encoded, including the original User Agent header, if the customer is currently logged in to the Data Recipient Software Product. Mandatory for customer present calls.  Not required for unattended or unauthenticated calls.</param>
  /// <returns>Success</returns>
  [Microsoft.AspNetCore.Mvc.HttpGet, Microsoft.AspNetCore.Mvc.Route("banking/payees")]
  public System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.ActionResult<ResponseBankingPayeeListV2>> ListPayees([Microsoft.AspNetCore.Mvc.FromHeader(Name = "x-v")][Microsoft.AspNetCore.Mvc.ModelBinding.BindRequired] string x_v, [Microsoft.AspNetCore.Mvc.FromQuery] Type? type = null, [Microsoft.AspNetCore.Mvc.FromQuery] int? page = null, [Microsoft.AspNetCore.Mvc.FromQuery(Name = "page-size")] int? page_size = null, [Microsoft.AspNetCore.Mvc.FromHeader(Name = "x-min-v")] string? x_min_v = null, [Microsoft.AspNetCore.Mvc.FromHeader(Name = "x-fapi-interaction-id")] string? x_fapi_interaction_id = null, [Microsoft.AspNetCore.Mvc.FromHeader(Name = "x-fapi-auth-date")] string? x_fapi_auth_date = null, [Microsoft.AspNetCore.Mvc.FromHeader(Name = "x-fapi-customer-ip-address")] string? x_fapi_customer_ip_address = null, [Microsoft.AspNetCore.Mvc.FromHeader(Name = "x-cds-client-headers")] string? x_cds_client_headers = null, System.Threading.CancellationToken cancellationToken) {

   return _implementation.ListPayeesAsync(x_v, type ?? PurpleBank.Type.ALL, page ?? 1, page_size ?? 25, x_min_v, x_fapi_interaction_id, x_fapi_auth_date, x_fapi_customer_ip_address, x_cds_client_headers, cancellationToken);
  }

  /// <summary>
  /// Get Payee Detail
  /// </summary>
  /// <remarks>
  /// Obtain detailed information on a single payee.
  /// <br/>
  /// <br/>Note that the payee sub-structure should be selected to represent the payment destination only rather than any known characteristics of the payment recipient.
  /// <br/>
  /// <br/>Obsolete versions: [v1](includes/obsolete/get-payee-detail-v1.html)
  /// </remarks>
  /// <param name="payeeId">The ID used to locate the details of a particular payee</param>
  /// <param name="x_v">Version of the API end point requested by the client. Must be set to a positive integer. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If the value of [x-min-v](#request-headers) is equal to or higher than the value of [x-v](#request-headers) then the [x-min-v](#request-headers) header should be treated as absent. If all versions requested are not supported then the data holder must respond with a 406 Not Acceptable. See [HTTP Headers](#request-headers)</param>
  /// <param name="x_min_v">Minimum version of the API end point requested by the client. Must be set to a positive integer if provided. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If all versions requested are not supported then the data holder must respond with a 406 Not Acceptable.</param>
  /// <param name="x_fapi_interaction_id">An **[[RFC4122]](#nref-RFC4122)** UUID used as a correlation id. If provided, the data holder must play back this value in the x-fapi-interaction-id response header. If not provided a **[[RFC4122]](#nref-RFC4122)** UUID value is required to be provided in the response header to track the interaction.</param>
  /// <param name="x_fapi_auth_date">The time when the customer last logged in to the Data Recipient Software Product as described in **[[FAPI-R-Draft]](#nref-FAPI-R-Draft)**.  Required for all resource calls (customer present and unattended). Not required for unauthenticated calls.</param>
  /// <param name="x_fapi_customer_ip_address">The customer's original IP address if the customer is currently logged in to the Data Recipient Software Product. The presence of this header indicates that the API is being called in a customer present context. Not to be included for unauthenticated calls.</param>
  /// <param name="x_cds_client_headers">The customer's original standard http headers [Base64](#common-field-types) encoded, including the original User Agent header, if the customer is currently logged in to the Data Recipient Software Product. Mandatory for customer present calls.  Not required for unattended or unauthenticated calls.</param>
  /// <returns>Success</returns>
  [Microsoft.AspNetCore.Mvc.HttpGet, Microsoft.AspNetCore.Mvc.Route("banking/payees/{payeeId}")]
  public System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.ActionResult<ResponseBankingPayeeByIdV2>> GetPayeeDetail([Microsoft.AspNetCore.Mvc.ModelBinding.BindRequired] string payeeId, [Microsoft.AspNetCore.Mvc.FromHeader(Name = "x-v")][Microsoft.AspNetCore.Mvc.ModelBinding.BindRequired] string x_v, [Microsoft.AspNetCore.Mvc.FromHeader(Name = "x-min-v")] string? x_min_v = null, [Microsoft.AspNetCore.Mvc.FromHeader(Name = "x-fapi-interaction-id")] string? x_fapi_interaction_id = null, [Microsoft.AspNetCore.Mvc.FromHeader(Name = "x-fapi-auth-date")] string? x_fapi_auth_date = null, [Microsoft.AspNetCore.Mvc.FromHeader(Name = "x-fapi-customer-ip-address")] string? x_fapi_customer_ip_address = null, [Microsoft.AspNetCore.Mvc.FromHeader(Name = "x-cds-client-headers")] string? x_cds_client_headers = null, System.Threading.CancellationToken cancellationToken) {

   return _implementation.GetPayeeDetailAsync(payeeId, x_v, x_min_v, x_fapi_interaction_id, x_fapi_auth_date, x_fapi_customer_ip_address, x_cds_client_headers, cancellationToken);
  }

  /// <summary>
  /// Get Products
  /// </summary>
  /// <remarks>
  /// Obtain a list of products that are currently openly offered to the market
  /// <br/>
  /// <br/>Note that the results returned by this end point are expected to be ordered in descending order according to ``lastUpdated``.
  /// <br/>
  /// <br/>### Conventions
  /// <br/>In the product reference payloads there are a number of recurring conventions that are explained here, in one place.
  /// <br/>
  /// <br/>#### Arrays Of Features
  /// <br/>
  /// <br/>In the product detail payload there are a number of arrays articulating generic features, constraints, prices, etc. The intent of these arrays is as follows:
  /// <br/>
  /// <br/>- Each element in an array has the same structure so that clients can reliably interpret the payloads
  /// <br/>- Each element as a type element that is an enumeration of the specific aspect of a product being described, such as types of fees.
  /// <br/>- Each element has a field name [additionalValue](#productfeaturetypedoc).  This is a generic field with contents that will vary based on the type of object being described. The contents of this field for the ADDITIONAL_CARDS feature is the number of cards allowed while the contents of this field for the MAX_LIMIT constraint would be the maximum credit limit allowed for the product.
  /// <br/>- An element in these arrays of the same type may appear more than once. For instance, a product may offer two separate loyalty programs that the customer can select from. A fixed term mortgage may have different rates for different term lengths.
  /// <br/>- An element in these arrays may contain an additionalInfo and additionalInfoUri field. The additionalInfo field is used to provide displayable text clarifying the purpose of the element in some way when the product is presented to a customer. The additionalInfoUri provides a link to externally hosted information specifically relevant to that feature of the product.
  /// <br/>- Depending on the type of data being represented there may be additional specific fields.
  /// <br/>
  /// <br/>#### URIs To More Information
  /// <br/>
  /// <br/>As the complexities and nuances of a financial product can not easily be fully expressed in a data structure without a high degree of complexity it is necessary to provide additional reference information that a potential customer can access so that they are fully informed of the features and implications of the product. The payloads for product reference therefore contain numerous fields that are provided to allow the product holder to describe the product more fully using a web page hosted on their online channels.
  /// <br/>
  /// <br/>These URIs do not need to all link to different pages. If desired, they can all link to a single hosted page and use difference HTML anchors to focus on a specific topic such as eligibility or fees.
  /// <br/>
  /// <br/>#### Linkage To Accounts
  /// <br/>From the moment that a customer applies for a product and an account is created the account and the product that spawned it will diverge.  Rates and features of the product may change and a discount may be negotiated for the account.
  /// <br/>
  /// <br/>For this reason, while productCategory is a common field between accounts and products, there is no specific ID that can be used to link an account to a product within the regime.
  /// <br/>
  /// <br/>Similarly, many of the fields and objects in the product payload will appear in the account detail payload but the structures and semantics are not identical as one refers to a product that can potentially be originated and one refers to an account that actual has been instantiated and created along with the associated decisions inherent in that process.
  /// <br/>
  /// <br/>#### Dates
  /// <br/>It is expected that data consumers needing this data will call relatively frequently to ensure the data they have is representative of the current offering from a bank.  To minimise the volume and frequency of these calls the ability to set a lastUpdated field with the date and time of the last update to this product is included.  A call for a list of products can then be filtered to only return products that have been updated since the last time that data was obtained using the updated-since query parameter.
  /// <br/>
  /// <br/>In addition, the concept of effective date and time has also been included.  This allows for a product to be marked for obsolescence, or introduction, from a certain time without the need for an update to show that a product has been changed.  The inclusion of these dates also removes the need to represent deleted products in the payload.  Products that are no long offered can be marked not effective for a few weeks before they are then removed from the product set as an option entirely.
  /// <br/>
  /// <br/>Obsolete versions: [v1](includes/obsolete/get-products-v1.html) [v2](includes/obsolete/get-products-v2.html)
  /// </remarks>
  /// <param name="x_v">Version of the API end point requested by the client. Must be set to a positive integer. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If the value of [x-min-v](#request-headers) is equal to or higher than the value of [x-v](#request-headers) then the [x-min-v](#request-headers) header should be treated as absent. If all versions requested are not supported then the data holder must respond with a 406 Not Acceptable. See [HTTP Headers](#request-headers)</param>
  /// <param name="effective">Allows for the filtering of products based on whether the current time is within the period of time defined as effective by the effectiveFrom and effectiveTo fields. Valid values are ‘CURRENT’, ‘FUTURE’ and ‘ALL’. If absent defaults to 'CURRENT'</param>
  /// <param name="updated_since">Only include products that have been updated after the specified date and time. If absent defaults to include all products</param>
  /// <param name="brand">Filter results based on a specific brand</param>
  /// <param name="product_category">Used to filter results on the productCategory field applicable to accounts. Any one of the valid values for this field can be supplied. If absent then all accounts returned.</param>
  /// <param name="page">Page of results to request (standard pagination)</param>
  /// <param name="page_size">Page size to request. Default is 25 (standard pagination)</param>
  /// <param name="x_min_v">Minimum version of the API end point requested by the client. Must be set to a positive integer if provided. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If all versions requested are not supported then the data holder must respond with a 406 Not Acceptable.</param>
  /// <returns>Success</returns>
  [Microsoft.AspNetCore.Mvc.HttpGet, Microsoft.AspNetCore.Mvc.Route("banking/products")]
  public System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.ActionResult<ResponseBankingProductListV2>> ListProducts([Microsoft.AspNetCore.Mvc.FromHeader(Name = "x-v")][Microsoft.AspNetCore.Mvc.ModelBinding.BindRequired] string x_v, [Microsoft.AspNetCore.Mvc.FromQuery] Effective? effective = null, [Microsoft.AspNetCore.Mvc.FromQuery(Name = "updated-since")] string? updated_since = null, [Microsoft.AspNetCore.Mvc.FromQuery] string? brand = null, [Microsoft.AspNetCore.Mvc.FromQuery(Name = "product-category")] ProductCategory5? product_category = null, [Microsoft.AspNetCore.Mvc.FromQuery] int? page = null, [Microsoft.AspNetCore.Mvc.FromQuery(Name = "page-size")] int? page_size = null, [Microsoft.AspNetCore.Mvc.FromHeader(Name = "x-min-v")] string? x_min_v = null, System.Threading.CancellationToken cancellationToken) {

   return _implementation.ListProductsAsync(x_v, effective ?? PurpleBank.Effective.CURRENT, updated_since, brand, product_category, page ?? 1, page_size ?? 25, x_min_v, cancellationToken);
  }

  /// <summary>
  /// Get Product Detail
  /// </summary>
  /// <remarks>
  /// Obtain detailed information on a single product offered openly to the market.
  /// <br/>
  /// <br/>Obsolete versions: [v1](includes/obsolete/get-product-detail-v1.html) [v2](includes/obsolete/get-product-detail-v2.html) [v3](includes/obsolete/get-product-detail-v3.html)
  /// </remarks>
  /// <param name="productId">ID of the specific product requested</param>
  /// <param name="x_v">Version of the API end point requested by the client. Must be set to a positive integer. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If the value of [x-min-v](#request-headers) is equal to or higher than the value of [x-v](#request-headers) then the [x-min-v](#request-headers) header should be treated as absent. If all versions requested are not supported then the data holder must respond with a 406 Not Acceptable. See [HTTP Headers](#request-headers)</param>
  /// <param name="x_min_v">Minimum version of the API end point requested by the client. Must be set to a positive integer if provided. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If all versions requested are not supported then the data holder must respond with a 406 Not Acceptable.</param>
  /// <returns>Success</returns>
  [Microsoft.AspNetCore.Mvc.HttpGet, Microsoft.AspNetCore.Mvc.Route("banking/products/{productId}")]
  public System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.ActionResult<ResponseBankingProductByIdV4>> GetProductDetail([Microsoft.AspNetCore.Mvc.ModelBinding.BindRequired] string productId, [Microsoft.AspNetCore.Mvc.FromHeader(Name = "x-v")][Microsoft.AspNetCore.Mvc.ModelBinding.BindRequired] string x_v, [Microsoft.AspNetCore.Mvc.FromHeader(Name = "x-min-v")] string? x_min_v = null, System.Threading.CancellationToken cancellationToken) {

   return _implementation.GetProductDetailAsync(productId, x_v, x_min_v, cancellationToken);
  }

 }

 [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public partial class RequestAccountIds {
  [Newtonsoft.Json.JsonProperty("data", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required]
  public RequestAccountIds_data Data { get; set; } = new RequestAccountIds_data();

  [Newtonsoft.Json.JsonProperty("meta", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public Meta? Meta { get; set; } = default!;

  private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

  [Newtonsoft.Json.JsonExtensionData]
  public System.Collections.Generic.IDictionary<string, object> AdditionalProperties {
   get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
   set { _additionalProperties = value; }
  }

 }

 [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public partial class ResponseBankingProductListV2 {
  [Newtonsoft.Json.JsonProperty("data", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required]
  public ResponseBankingProductListV2_data Data { get; set; } = new ResponseBankingProductListV2_data();

  [Newtonsoft.Json.JsonProperty("links", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required]
  public LinksPaginated Links { get; set; } = new LinksPaginated();

  [Newtonsoft.Json.JsonProperty("meta", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required]
  public MetaPaginated Meta { get; set; } = new MetaPaginated();

  private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

  [Newtonsoft.Json.JsonExtensionData]
  public System.Collections.Generic.IDictionary<string, object> AdditionalProperties {
   get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
   set { _additionalProperties = value; }
  }

 }

 [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public partial class BankingProductV4 {
  /// <summary>
  /// A data holder specific unique identifier for this product. This identifier must be unique to a product but does not otherwise need to adhere to ID permanence guidelines.
  /// </summary>
  [Newtonsoft.Json.JsonProperty("productId", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
  public string ProductId { get; set; } = default!;

  /// <summary>
  /// The date and time from which this product is effective (ie. is available for origination).  Used to enable the articulation of products to the regime before they are available for customers to originate
  /// </summary>
  [Newtonsoft.Json.JsonProperty("effectiveFrom", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? EffectiveFrom { get; set; } = default!;

  /// <summary>
  /// The date and time at which this product will be retired and will no longer be offered.  Used to enable the managed deprecation of products
  /// </summary>
  [Newtonsoft.Json.JsonProperty("effectiveTo", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? EffectiveTo { get; set; } = default!;

  /// <summary>
  /// The last date and time that the information for this product was changed (or the creation date for the product if it has never been altered)
  /// </summary>
  [Newtonsoft.Json.JsonProperty("lastUpdated", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
  public string LastUpdated { get; set; } = default!;

  [Newtonsoft.Json.JsonProperty("productCategory", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
  [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
  public BankingProductCategory ProductCategory { get; set; } = default!;

  /// <summary>
  /// The display name of the product
  /// </summary>
  [Newtonsoft.Json.JsonProperty("name", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
  public string Name { get; set; } = default!;

  /// <summary>
  /// A description of the product
  /// </summary>
  [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
  public string Description { get; set; } = default!;

  /// <summary>
  /// A label of the brand for the product. Able to be used for filtering. For data holders with single brands this value is still required
  /// </summary>
  [Newtonsoft.Json.JsonProperty("brand", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
  public string Brand { get; set; } = default!;

  /// <summary>
  /// An optional display name of the brand
  /// </summary>
  [Newtonsoft.Json.JsonProperty("brandName", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? BrandName { get; set; } = default!;

  /// <summary>
  /// A link to an application web page where this product can be applied for.
  /// </summary>
  [Newtonsoft.Json.JsonProperty("applicationUri", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? ApplicationUri { get; set; } = default!;

  /// <summary>
  /// Indicates whether the product is specifically tailored to a circumstance.  In this case fees and prices are significantly negotiated depending on context. While all products are open to a degree of tailoring this flag indicates that tailoring is expected and thus that the provision of specific fees and rates is not applicable
  /// </summary>
  [Newtonsoft.Json.JsonProperty("isTailored", Required = Newtonsoft.Json.Required.Always)]
  public bool IsTailored { get; set; } = default!;

  [Newtonsoft.Json.JsonProperty("additionalInformation", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public BankingProductAdditionalInformationV2? AdditionalInformation { get; set; } = default!;

  /// <summary>
  /// An array of card art images
  /// </summary>
  [Newtonsoft.Json.JsonProperty("cardArt", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public System.Collections.Generic.List<BankingProductV4_cardArt>? CardArt { get; set; } = default!;

  private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

  [Newtonsoft.Json.JsonExtensionData]
  public System.Collections.Generic.IDictionary<string, object> AdditionalProperties {
   get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
   set { _additionalProperties = value; }
  }

 }

 /// <summary>
 /// Object that contains links to additional information on specific topics
 /// </summary>
 [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public partial class BankingProductAdditionalInformationV2 {
  /// <summary>
  /// General overview of the product. Mandatory if `additionalOverviewUris` includes one or more supporting documents.
  /// </summary>
  [Newtonsoft.Json.JsonProperty("overviewUri", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? OverviewUri { get; set; } = default!;

  /// <summary>
  /// Terms and conditions for the product. Mandatory if `additionalTermsUris` includes one or more supporting documents.
  /// </summary>
  [Newtonsoft.Json.JsonProperty("termsUri", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? TermsUri { get; set; } = default!;

  /// <summary>
  /// Eligibility rules and criteria for the product. Mandatory if `additionalEligibilityUris` includes one or more supporting documents.
  /// </summary>
  [Newtonsoft.Json.JsonProperty("eligibilityUri", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? EligibilityUri { get; set; } = default!;

  /// <summary>
  /// Description of fees, pricing, discounts, exemptions and bonuses for the product. Mandatory if `additionalFeesAndPricingUris` includes one or more supporting documents.
  /// </summary>
  [Newtonsoft.Json.JsonProperty("feesAndPricingUri", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? FeesAndPricingUri { get; set; } = default!;

  /// <summary>
  /// Description of a bundle that this product can be part of. Mandatory if `additionalBundleUris` includes one or more supporting documents.
  /// </summary>
  [Newtonsoft.Json.JsonProperty("bundleUri", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? BundleUri { get; set; } = default!;

  /// <summary>
  /// An array of additional general overviews for the product or features of the product, if applicable. To be treated as secondary documents to the `overviewUri`. Only to be used if there is a primary `overviewUri`.
  /// </summary>
  [Newtonsoft.Json.JsonProperty("additionalOverviewUris", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public System.Collections.Generic.List<BankingProductAdditionalInformationV2_additionalInformationUris>? AdditionalOverviewUris { get; set; } = default!;

  /// <summary>
  /// An array of additional terms and conditions for the product, if applicable. To be treated as secondary documents to the `termsUri`. Only to be used if there is a primary `termsUri`.
  /// </summary>
  [Newtonsoft.Json.JsonProperty("additionalTermsUris", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public System.Collections.Generic.List<BankingProductAdditionalInformationV2_additionalInformationUris>? AdditionalTermsUris { get; set; } = default!;

  /// <summary>
  /// An array of additional eligibility rules and criteria for the product, if applicable. To be treated as secondary documents to the `eligibilityUri`. Only to be used if there is a primary `eligibilityUri`.
  /// </summary>
  [Newtonsoft.Json.JsonProperty("additionalEligibilityUris", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public System.Collections.Generic.List<BankingProductAdditionalInformationV2_additionalInformationUris>? AdditionalEligibilityUris { get; set; } = default!;

  /// <summary>
  /// An array of additional fees, pricing, discounts, exemptions and bonuses for the product, if applicable. To be treated as secondary documents to the `feesAndPricingUri`. Only to be used if there is a primary `feesAndPricingUri`.
  /// </summary>
  [Newtonsoft.Json.JsonProperty("additionalFeesAndPricingUris", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public System.Collections.Generic.List<BankingProductAdditionalInformationV2_additionalInformationUris>? AdditionalFeesAndPricingUris { get; set; } = default!;

  /// <summary>
  /// An array of additional bundles for the product, if applicable. To be treated as secondary documents to the `bundleUri`. Only to be used if there is a primary `bundleUri`.
  /// </summary>
  [Newtonsoft.Json.JsonProperty("additionalBundleUris", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public System.Collections.Generic.List<BankingProductAdditionalInformationV2_additionalInformationUris>? AdditionalBundleUris { get; set; } = default!;

  private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

  [Newtonsoft.Json.JsonExtensionData]
  public System.Collections.Generic.IDictionary<string, object> AdditionalProperties {
   get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
   set { _additionalProperties = value; }
  }

 }

 [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public partial class BankingProductAdditionalInformationV2_additionalInformationUris {
  /// <summary>
  /// Display text providing more information about the document URI
  /// </summary>
  [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? Description { get; set; } = default!;

  /// <summary>
  /// The URI describing the additional information
  /// </summary>
  [Newtonsoft.Json.JsonProperty("additionalInfoUri", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
  public string AdditionalInfoUri { get; set; } = default!;

  private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

  [Newtonsoft.Json.JsonExtensionData]
  public System.Collections.Generic.IDictionary<string, object> AdditionalProperties {
   get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
   set { _additionalProperties = value; }
  }

 }

 [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public partial class ResponseBankingProductByIdV4 {
  [Newtonsoft.Json.JsonProperty("data", Required = Newtonsoft.Json.Required.Always)]
  public BankingProductDetailV4 Data { get; set; } = default!;

  [Newtonsoft.Json.JsonProperty("links", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required]
  public Links Links { get; set; } = new Links();

  [Newtonsoft.Json.JsonProperty("meta", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public Meta? Meta { get; set; } = default!;

  private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

  [Newtonsoft.Json.JsonExtensionData]
  public System.Collections.Generic.IDictionary<string, object> AdditionalProperties {
   get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
   set { _additionalProperties = value; }
  }

 }

 [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public partial class BankingProductDetailV4 : BankingProductV4 {
  /// <summary>
  /// An array of bundles that this product participates in.  Each bundle is described by free form information but also by a list of product IDs of the other products that are included in the bundle.  It is assumed that the current product is included in the bundle also
  /// </summary>
  [Newtonsoft.Json.JsonProperty("bundles", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public System.Collections.Generic.List<BankingProductBundle>? Bundles { get; set; } = default!;

  /// <summary>
  /// Array of features available for the product
  /// </summary>
  [Newtonsoft.Json.JsonProperty("features", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public System.Collections.Generic.List<BankingProductFeatureV2>? Features { get; set; } = default!;

  /// <summary>
  /// Constraints on the application for or operation of the product such as minimum balances or limit thresholds
  /// </summary>
  [Newtonsoft.Json.JsonProperty("constraints", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public System.Collections.Generic.List<BankingProductConstraint>? Constraints { get; set; } = default!;

  /// <summary>
  /// Eligibility criteria for the product
  /// </summary>
  [Newtonsoft.Json.JsonProperty("eligibility", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public System.Collections.Generic.List<BankingProductEligibility>? Eligibility { get; set; } = default!;

  /// <summary>
  /// Fees applicable for the product
  /// </summary>
  [Newtonsoft.Json.JsonProperty("fees", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public System.Collections.Generic.List<BankingProductFee>? Fees { get; set; } = default!;

  /// <summary>
  /// Interest rates available for deposits
  /// </summary>
  [Newtonsoft.Json.JsonProperty("depositRates", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public System.Collections.Generic.List<BankingProductDepositRate>? DepositRates { get; set; } = default!;

  /// <summary>
  /// Interest rates charged against lending balances
  /// </summary>
  [Newtonsoft.Json.JsonProperty("lendingRates", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public System.Collections.Generic.List<BankingProductLendingRateV2>? LendingRates { get; set; } = default!;

 }

 [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public partial class BankingProductBundle {
  /// <summary>
  /// Name of the bundle
  /// </summary>
  [Newtonsoft.Json.JsonProperty("name", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
  public string Name { get; set; } = default!;

  /// <summary>
  /// Description of the bundle
  /// </summary>
  [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
  public string Description { get; set; } = default!;

  /// <summary>
  /// Display text providing more information on the bundle
  /// </summary>
  [Newtonsoft.Json.JsonProperty("additionalInfo", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? AdditionalInfo { get; set; } = default!;

  /// <summary>
  /// Link to a web page with more information on the bundle criteria and benefits
  /// </summary>
  [Newtonsoft.Json.JsonProperty("additionalInfoUri", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? AdditionalInfoUri { get; set; } = default!;

  /// <summary>
  /// Array of product IDs for products included in the bundle that are available via the product end points.  Note that this array is not intended to represent a comprehensive model of the products included in the bundle and some products available for the bundle may not be available via the product reference end points
  /// </summary>
  [Newtonsoft.Json.JsonProperty("productIds", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public System.Collections.Generic.List<string>? ProductIds { get; set; } = default!;

  private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

  [Newtonsoft.Json.JsonExtensionData]
  public System.Collections.Generic.IDictionary<string, object> AdditionalProperties {
   get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
   set { _additionalProperties = value; }
  }

 }

 [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public partial class BankingProductFeatureV2 {
  /// <summary>
  /// The type of feature described
  /// </summary>
  [Newtonsoft.Json.JsonProperty("featureType", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
  [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
  public BankingProductFeatureV2FeatureType FeatureType { get; set; } = default!;

  /// <summary>
  /// Generic field containing additional information relevant to the [featureType](#tocSproductfeaturetypedoc) specified. Whether mandatory or not is dependent on the value of the [featureType.](#tocSproductfeaturetypedoc)
  /// </summary>
  [Newtonsoft.Json.JsonProperty("additionalValue", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? AdditionalValue { get; set; } = default!;

  /// <summary>
  /// Display text providing more information on the feature. Mandatory if the [feature type](#tocSproductfeaturetypedoc) is set to OTHER
  /// </summary>
  [Newtonsoft.Json.JsonProperty("additionalInfo", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? AdditionalInfo { get; set; } = default!;

  /// <summary>
  /// Link to a web page with more information on this feature
  /// </summary>
  [Newtonsoft.Json.JsonProperty("additionalInfoUri", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? AdditionalInfoUri { get; set; } = default!;

  private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

  [Newtonsoft.Json.JsonExtensionData]
  public System.Collections.Generic.IDictionary<string, object> AdditionalProperties {
   get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
   set { _additionalProperties = value; }
  }

 }

 [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public partial class BankingProductConstraint {
  /// <summary>
  /// The type of constraint described.  See the next section for an overview of valid values and their meaning
  /// </summary>
  [Newtonsoft.Json.JsonProperty("constraintType", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
  [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
  public BankingProductConstraintConstraintType ConstraintType { get; set; } = default!;

  /// <summary>
  /// Generic field containing additional information relevant to the [constraintType](#tocSproductconstrainttypedoc) specified.  Whether mandatory or not is dependent on the value of [constraintType](#tocSproductconstrainttypedoc)
  /// </summary>
  [Newtonsoft.Json.JsonProperty("additionalValue", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? AdditionalValue { get; set; } = default!;

  /// <summary>
  /// Display text providing more information the constraint
  /// </summary>
  [Newtonsoft.Json.JsonProperty("additionalInfo", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? AdditionalInfo { get; set; } = default!;

  /// <summary>
  /// Link to a web page with more information on the constraint
  /// </summary>
  [Newtonsoft.Json.JsonProperty("additionalInfoUri", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? AdditionalInfoUri { get; set; } = default!;

  private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

  [Newtonsoft.Json.JsonExtensionData]
  public System.Collections.Generic.IDictionary<string, object> AdditionalProperties {
   get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
   set { _additionalProperties = value; }
  }

 }

 [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public partial class BankingProductEligibility {
  /// <summary>
  /// The type of eligibility criteria described.  See the next section for an overview of valid values and their meaning
  /// </summary>
  [Newtonsoft.Json.JsonProperty("eligibilityType", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
  [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
  public BankingProductEligibilityEligibilityType EligibilityType { get; set; } = default!;

  /// <summary>
  /// Generic field containing additional information relevant to the [eligibilityType](#tocSproducteligibilitytypedoc) specified. Whether mandatory or not is dependent on the value of [eligibilityType](#tocSproducteligibilitytypedoc)
  /// </summary>
  [Newtonsoft.Json.JsonProperty("additionalValue", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? AdditionalValue { get; set; } = default!;

  /// <summary>
  /// Display text providing more information on the [eligibility](#tocSproducteligibilitytypedoc) criteria. Mandatory if the field is set to OTHER
  /// </summary>
  [Newtonsoft.Json.JsonProperty("additionalInfo", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? AdditionalInfo { get; set; } = default!;

  /// <summary>
  /// Link to a web page with more information on this eligibility criteria
  /// </summary>
  [Newtonsoft.Json.JsonProperty("additionalInfoUri", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? AdditionalInfoUri { get; set; } = default!;

  private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

  [Newtonsoft.Json.JsonExtensionData]
  public System.Collections.Generic.IDictionary<string, object> AdditionalProperties {
   get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
   set { _additionalProperties = value; }
  }

 }

 [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public partial class BankingProductFee {
  /// <summary>
  /// Name of the fee
  /// </summary>
  [Newtonsoft.Json.JsonProperty("name", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
  public string Name { get; set; } = default!;

  /// <summary>
  /// The type of fee
  /// </summary>
  [Newtonsoft.Json.JsonProperty("feeType", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
  [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
  public BankingProductFeeFeeType FeeType { get; set; } = default!;

  /// <summary>
  /// The amount charged for the fee. One of amount, balanceRate, transactionRate and accruedRate is mandatory unless the *feeType* "VARIABLE" is supplied
  /// </summary>
  [Newtonsoft.Json.JsonProperty("amount", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? Amount { get; set; } = default!;

  /// <summary>
  /// A fee rate calculated based on a proportion of the balance. One of amount, balanceRate, transactionRate and accruedRate is mandatory unless the *feeType* "VARIABLE" is supplied.
  /// </summary>
  [Newtonsoft.Json.JsonProperty("balanceRate", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? BalanceRate { get; set; } = default!;

  /// <summary>
  /// A fee rate calculated based on a proportion of a transaction. One of amount, balanceRate, transactionRate and accruedRate is mandatory unless the *feeType* "VARIABLE" is supplied
  /// </summary>
  [Newtonsoft.Json.JsonProperty("transactionRate", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? TransactionRate { get; set; } = default!;

  /// <summary>
  /// A fee rate calculated based on a proportion of the calculated interest accrued on the account. One of amount, balanceRate, transactionRate and accruedRate is mandatory unless the *feeType* "VARIABLE" is supplied
  /// </summary>
  [Newtonsoft.Json.JsonProperty("accruedRate", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? AccruedRate { get; set; } = default!;

  /// <summary>
  /// The indicative frequency with which the fee is calculated on the account. Only applies if balanceRate or accruedRate is also present. Formatted according to [ISO 8601 Durations](https://en.wikipedia.org/wiki/ISO_8601#Durations) (excludes recurrence syntax)
  /// </summary>
  [Newtonsoft.Json.JsonProperty("accrualFrequency", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? AccrualFrequency { get; set; } = default!;

  /// <summary>
  /// The currency the fee will be charged in. Assumes AUD if absent
  /// </summary>
  [Newtonsoft.Json.JsonProperty("currency", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? Currency { get; set; } = default!;

  /// <summary>
  /// Generic field containing additional information relevant to the [feeType](#tocSproductfeetypedoc) specified. Whether mandatory or not is dependent on the value of [feeType](#tocSproductfeetypedoc)
  /// </summary>
  [Newtonsoft.Json.JsonProperty("additionalValue", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? AdditionalValue { get; set; } = default!;

  /// <summary>
  /// Display text providing more information on the fee
  /// </summary>
  [Newtonsoft.Json.JsonProperty("additionalInfo", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? AdditionalInfo { get; set; } = default!;

  /// <summary>
  /// Link to a web page with more information on this fee
  /// </summary>
  [Newtonsoft.Json.JsonProperty("additionalInfoUri", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? AdditionalInfoUri { get; set; } = default!;

  /// <summary>
  /// An optional list of discounts to this fee that may be available
  /// </summary>
  [Newtonsoft.Json.JsonProperty("discounts", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public System.Collections.Generic.List<BankingProductDiscount>? Discounts { get; set; } = default!;

  private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

  [Newtonsoft.Json.JsonExtensionData]
  public System.Collections.Generic.IDictionary<string, object> AdditionalProperties {
   get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
   set { _additionalProperties = value; }
  }

 }

 [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public partial class BankingProductDiscount {
  /// <summary>
  /// Description of the discount
  /// </summary>
  [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
  public string Description { get; set; } = default!;

  /// <summary>
  /// The type of discount. See the next section for an overview of valid values and their meaning
  /// </summary>
  [Newtonsoft.Json.JsonProperty("discountType", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
  [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
  public BankingProductDiscountDiscountType DiscountType { get; set; } = default!;

  /// <summary>
  /// Dollar value of the discount. One of amount, balanceRate, transactionRate, accruedRate and feeRate is mandatory.
  /// </summary>
  [Newtonsoft.Json.JsonProperty("amount", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? Amount { get; set; } = default!;

  /// <summary>
  /// A discount rate calculated based on a proportion of the balance. Note that the currency of the fee discount is expected to be the same as the currency of the fee itself. One of amount, balanceRate, transactionRate, accruedRate and feeRate is mandatory. Unless noted in additionalInfo, assumes the application and calculation frequency are the same as the corresponding fee
  /// </summary>
  [Newtonsoft.Json.JsonProperty("balanceRate", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? BalanceRate { get; set; } = default!;

  /// <summary>
  /// A discount rate calculated based on a proportion of a transaction. Note that the currency of the fee discount is expected to be the same as the currency of the fee itself. One of amount, balanceRate, transactionRate, accruedRate and feeRate is mandatory
  /// </summary>
  [Newtonsoft.Json.JsonProperty("transactionRate", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? TransactionRate { get; set; } = default!;

  /// <summary>
  /// A discount rate calculated based on a proportion of the calculated interest accrued on the account. Note that the currency of the fee discount is expected to be the same as the currency of the fee itself. One of amount, balanceRate, transactionRate, accruedRate and feeRate is mandatory. Unless noted in additionalInfo, assumes the application and calculation frequency are the same as the corresponding fee
  /// </summary>
  [Newtonsoft.Json.JsonProperty("accruedRate", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? AccruedRate { get; set; } = default!;

  /// <summary>
  /// A discount rate calculated based on a proportion of the fee to which this discount is attached. Note that the currency of the fee discount is expected to be the same as the currency of the fee itself. One of amount, balanceRate, transactionRate, accruedRate and feeRate is mandatory. Unless noted in additionalInfo, assumes the application and calculation frequency are the same as the corresponding fee
  /// </summary>
  [Newtonsoft.Json.JsonProperty("feeRate", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? FeeRate { get; set; } = default!;

  /// <summary>
  /// Generic field containing additional information relevant to the [discountType](#tocSproductdiscounttypedoc) specified. Whether mandatory or not is dependent on the value of [discountType](#tocSproductdiscounttypedoc)
  /// </summary>
  [Newtonsoft.Json.JsonProperty("additionalValue", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? AdditionalValue { get; set; } = default!;

  /// <summary>
  /// Display text providing more information on the discount
  /// </summary>
  [Newtonsoft.Json.JsonProperty("additionalInfo", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? AdditionalInfo { get; set; } = default!;

  /// <summary>
  /// Link to a web page with more information on this discount
  /// </summary>
  [Newtonsoft.Json.JsonProperty("additionalInfoUri", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? AdditionalInfoUri { get; set; } = default!;

  /// <summary>
  /// Eligibility constraints that apply to this discount. Mandatory if ``discountType`` is ``ELIGIBILITY_ONLY``.
  /// </summary>
  [Newtonsoft.Json.JsonProperty("eligibility", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public System.Collections.Generic.List<BankingProductDiscountEligibility>? Eligibility { get; set; } = default!;

  private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

  [Newtonsoft.Json.JsonExtensionData]
  public System.Collections.Generic.IDictionary<string, object> AdditionalProperties {
   get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
   set { _additionalProperties = value; }
  }

 }

 [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public partial class BankingProductDiscountEligibility {
  /// <summary>
  /// The type of the specific eligibility constraint for a discount
  /// </summary>
  [Newtonsoft.Json.JsonProperty("discountEligibilityType", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
  [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
  public BankingProductDiscountEligibilityDiscountEligibilityType DiscountEligibilityType { get; set; } = default!;

  /// <summary>
  /// Generic field containing additional information relevant to the [discountEligibilityType](#tocSproductdiscounteligibilitydoc) specified. Whether mandatory or not is dependent on the value of [discountEligibilityType](#tocSproductdiscounteligibilitydoc)
  /// </summary>
  [Newtonsoft.Json.JsonProperty("additionalValue", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? AdditionalValue { get; set; } = default!;

  /// <summary>
  /// Display text providing more information on this eligibility constraint. Whether mandatory or not is dependent on the value of [discountEligibilityType](#tocSproductdiscounteligibilitydoc)
  /// </summary>
  [Newtonsoft.Json.JsonProperty("additionalInfo", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? AdditionalInfo { get; set; } = default!;

  /// <summary>
  /// Link to a web page with more information on this eligibility constraint
  /// </summary>
  [Newtonsoft.Json.JsonProperty("additionalInfoUri", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? AdditionalInfoUri { get; set; } = default!;

  private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

  [Newtonsoft.Json.JsonExtensionData]
  public System.Collections.Generic.IDictionary<string, object> AdditionalProperties {
   get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
   set { _additionalProperties = value; }
  }

 }

 [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public partial class BankingProductDepositRate {
  /// <summary>
  /// The type of rate (base, bonus, etc). See the next section for an overview of valid values and their meaning
  /// </summary>
  [Newtonsoft.Json.JsonProperty("depositRateType", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
  [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
  public BankingProductDepositRateDepositRateType DepositRateType { get; set; } = default!;

  /// <summary>
  /// The rate to be applied
  /// </summary>
  [Newtonsoft.Json.JsonProperty("rate", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
  public string Rate { get; set; } = default!;

  /// <summary>
  /// The period after which the rate is applied to the balance to calculate the amount due for the period. Calculation of the amount is often daily (as balances may change) but accumulated until the total amount is 'applied' to the account (see applicationFrequency). Formatted according to [ISO 8601 Durations](https://en.wikipedia.org/wiki/ISO_8601#Durations) (excludes recurrence syntax)
  /// </summary>
  [Newtonsoft.Json.JsonProperty("calculationFrequency", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? CalculationFrequency { get; set; } = default!;

  /// <summary>
  /// The period after which the calculated amount(s) (see calculationFrequency) are 'applied' (i.e. debited or credited) to the account. Formatted according to [ISO 8601 Durations](https://en.wikipedia.org/wiki/ISO_8601#Durations) (excludes recurrence syntax)
  /// </summary>
  [Newtonsoft.Json.JsonProperty("applicationFrequency", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? ApplicationFrequency { get; set; } = default!;

  /// <summary>
  /// Rate tiers applicable for this rate
  /// </summary>
  [Newtonsoft.Json.JsonProperty("tiers", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public System.Collections.Generic.List<BankingProductRateTierV3>? Tiers { get; set; } = default!;

  /// <summary>
  /// Generic field containing additional information relevant to the [depositRateType](#tocSproductdepositratetypedoc) specified. Whether mandatory or not is dependent on the value of [depositRateType](#tocSproductdepositratetypedoc)
  /// </summary>
  [Newtonsoft.Json.JsonProperty("additionalValue", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? AdditionalValue { get; set; } = default!;

  /// <summary>
  /// Display text providing more information on the rate
  /// </summary>
  [Newtonsoft.Json.JsonProperty("additionalInfo", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? AdditionalInfo { get; set; } = default!;

  /// <summary>
  /// Link to a web page with more information on this rate
  /// </summary>
  [Newtonsoft.Json.JsonProperty("additionalInfoUri", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? AdditionalInfoUri { get; set; } = default!;

  private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

  [Newtonsoft.Json.JsonExtensionData]
  public System.Collections.Generic.IDictionary<string, object> AdditionalProperties {
   get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
   set { _additionalProperties = value; }
  }

 }

 [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public partial class BankingProductLendingRateV2 {
  /// <summary>
  /// The type of rate (fixed, variable, etc). See the next section for an overview of valid values and their meaning
  /// </summary>
  [Newtonsoft.Json.JsonProperty("lendingRateType", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
  [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
  public BankingProductLendingRateV2LendingRateType LendingRateType { get; set; } = default!;

  /// <summary>
  /// The rate to be applied
  /// </summary>
  [Newtonsoft.Json.JsonProperty("rate", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
  public string Rate { get; set; } = default!;

  /// <summary>
  /// A comparison rate equivalent for this rate
  /// </summary>
  [Newtonsoft.Json.JsonProperty("comparisonRate", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? ComparisonRate { get; set; } = default!;

  /// <summary>
  /// The period after which the rate is applied to the balance to calculate the amount due for the period. Calculation of the amount is often daily (as balances may change) but accumulated until the total amount is 'applied' to the account (see applicationFrequency). Formatted according to [ISO 8601 Durations](https://en.wikipedia.org/wiki/ISO_8601#Durations) (excludes recurrence syntax)
  /// </summary>
  [Newtonsoft.Json.JsonProperty("calculationFrequency", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? CalculationFrequency { get; set; } = default!;

  /// <summary>
  /// The period after which the calculated amount(s) (see calculationFrequency) are 'applied' (i.e. debited or credited) to the account. Formatted according to [ISO 8601 Durations](https://en.wikipedia.org/wiki/ISO_8601#Durations) (excludes recurrence syntax)
  /// </summary>
  [Newtonsoft.Json.JsonProperty("applicationFrequency", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? ApplicationFrequency { get; set; } = default!;

  /// <summary>
  /// When loan payments are due to be paid within each period. The investment benefit of earlier payments affect the rate that can be offered
  /// </summary>
  [Newtonsoft.Json.JsonProperty("interestPaymentDue", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
  public BankingProductLendingRateV2InterestPaymentDue? InterestPaymentDue { get; set; } = default!;

  /// <summary>
  /// Options in place for repayments. If absent, the lending rate is applicable to all repayment types
  /// </summary>
  [Newtonsoft.Json.JsonProperty("repaymentType", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
  public BankingProductLendingRateV2RepaymentType? RepaymentType { get; set; } = default!;

  /// <summary>
  /// The reason for taking out the loan. If absent, the lending rate is applicable to all loan purposes
  /// </summary>
  [Newtonsoft.Json.JsonProperty("loanPurpose", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
  public BankingProductLendingRateV2LoanPurpose? LoanPurpose { get; set; } = default!;

  /// <summary>
  /// Rate tiers applicable for this rate
  /// </summary>
  [Newtonsoft.Json.JsonProperty("tiers", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public System.Collections.Generic.List<BankingProductRateTierV3>? Tiers { get; set; } = default!;

  /// <summary>
  /// Generic field containing additional information relevant to the [lendingRateType](#tocSproductlendingratetypedoc) specified. Whether mandatory or not is dependent on the value of [lendingRateType](#tocSproductlendingratetypedoc)
  /// </summary>
  [Newtonsoft.Json.JsonProperty("additionalValue", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? AdditionalValue { get; set; } = default!;

  /// <summary>
  /// Display text providing more information on the rate.
  /// </summary>
  [Newtonsoft.Json.JsonProperty("additionalInfo", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? AdditionalInfo { get; set; } = default!;

  /// <summary>
  /// Link to a web page with more information on this rate
  /// </summary>
  [Newtonsoft.Json.JsonProperty("additionalInfoUri", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? AdditionalInfoUri { get; set; } = default!;

  private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

  [Newtonsoft.Json.JsonExtensionData]
  public System.Collections.Generic.IDictionary<string, object> AdditionalProperties {
   get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
   set { _additionalProperties = value; }
  }

 }

 /// <summary>
 /// Defines the criteria and conditions for which a rate applies
 /// </summary>
 [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public partial class BankingProductRateTierV3 {
  /// <summary>
  /// A display name for the tier
  /// </summary>
  [Newtonsoft.Json.JsonProperty("name", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
  public string Name { get; set; } = default!;

  /// <summary>
  /// The unit of measure that applies to the tierValueMinimum and tierValueMaximum values e.g. a **DOLLAR** amount. **PERCENT** (in the case of loan-to-value ratio or LVR). Tier term period representing a discrete number of **MONTH**'s or **DAY**'s (in the case of term deposit tiers)
  /// </summary>
  [Newtonsoft.Json.JsonProperty("unitOfMeasure", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
  [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
  public BankingProductRateTierV3UnitOfMeasure UnitOfMeasure { get; set; } = default!;

  /// <summary>
  /// The number of tierUnitOfMeasure units that form the lower bound of the tier. The tier should be inclusive of this value
  /// </summary>
  [Newtonsoft.Json.JsonProperty("minimumValue", Required = Newtonsoft.Json.Required.Always)]
  public double MinimumValue { get; set; } = default!;

  /// <summary>
  /// The number of tierUnitOfMeasure units that form the upper bound of the tier or band. For a tier with a discrete value (as opposed to a range of values e.g. 1 month) this must be the same as tierValueMinimum. Where this is the same as the tierValueMinimum value of the next-higher tier the referenced tier should be exclusive of this value. For example a term deposit of 2 months falls into the upper tier of the following tiers: (1 – 2 months, 2 – 3 months). If absent the tier's range has no upper bound.
  /// </summary>
  [Newtonsoft.Json.JsonProperty("maximumValue", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public double? MaximumValue { get; set; } = default!;

  /// <summary>
  /// The method used to calculate the amount to be applied using one or more tiers. A single rate may be applied to the entire balance or each applicable tier rate is applied to the portion of the balance that falls into that tier (referred to as 'bands' or 'steps')
  /// </summary>
  [Newtonsoft.Json.JsonProperty("rateApplicationMethod", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
  public BankingProductRateTierV3RateApplicationMethod? RateApplicationMethod { get; set; } = default!;

  [Newtonsoft.Json.JsonProperty("applicabilityConditions", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public BankingProductRateCondition? ApplicabilityConditions { get; set; } = default!;

  /// <summary>
  /// Display text providing more information on the rate tier.
  /// </summary>
  [Newtonsoft.Json.JsonProperty("additionalInfo", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? AdditionalInfo { get; set; } = default!;

  /// <summary>
  /// Link to a web page with more information on this rate tier
  /// </summary>
  [Newtonsoft.Json.JsonProperty("additionalInfoUri", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? AdditionalInfoUri { get; set; } = default!;

  private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

  [Newtonsoft.Json.JsonExtensionData]
  public System.Collections.Generic.IDictionary<string, object> AdditionalProperties {
   get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
   set { _additionalProperties = value; }
  }

 }

 /// <summary>
 /// Defines a condition for the applicability of a tiered rate
 /// </summary>
 [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public partial class BankingProductRateCondition {
  /// <summary>
  /// Display text providing more information on the condition
  /// </summary>
  [Newtonsoft.Json.JsonProperty("additionalInfo", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? AdditionalInfo { get; set; } = default!;

  /// <summary>
  /// Link to a web page with more information on this condition
  /// </summary>
  [Newtonsoft.Json.JsonProperty("additionalInfoUri", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? AdditionalInfoUri { get; set; } = default!;

  private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

  [Newtonsoft.Json.JsonExtensionData]
  public System.Collections.Generic.IDictionary<string, object> AdditionalProperties {
   get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
   set { _additionalProperties = value; }
  }

 }

 [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public partial class ResponseBankingAccountListV2 {
  [Newtonsoft.Json.JsonProperty("data", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required]
  public ResponseBankingAccountListV2_data Data { get; set; } = new ResponseBankingAccountListV2_data();

  [Newtonsoft.Json.JsonProperty("links", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required]
  public LinksPaginated Links { get; set; } = new LinksPaginated();

  [Newtonsoft.Json.JsonProperty("meta", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required]
  public MetaPaginated Meta { get; set; } = new MetaPaginated();

  private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

  [Newtonsoft.Json.JsonExtensionData]
  public System.Collections.Generic.IDictionary<string, object> AdditionalProperties {
   get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
   set { _additionalProperties = value; }
  }

 }

 [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public partial class BankingAccountV2 {
  /// <summary>
  /// A unique ID of the account adhering to the standards for ID permanence
  /// </summary>
  [Newtonsoft.Json.JsonProperty("accountId", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
  public string AccountId { get; set; } = default!;

  /// <summary>
  /// Date that the account was created (if known)
  /// </summary>
  [Newtonsoft.Json.JsonProperty("creationDate", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? CreationDate { get; set; } = default!;

  /// <summary>
  /// The display name of the account as defined by the bank. This should not incorporate account numbers or PANs. If it does the values should be masked according to the rules of the MaskedAccountString common type.
  /// </summary>
  [Newtonsoft.Json.JsonProperty("displayName", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
  public string DisplayName { get; set; } = default!;

  /// <summary>
  /// A customer supplied nick name for the account
  /// </summary>
  [Newtonsoft.Json.JsonProperty("nickname", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? Nickname { get; set; } = default!;

  /// <summary>
  /// Open or closed status for the account. If not present then OPEN is assumed
  /// </summary>
  [Newtonsoft.Json.JsonProperty("openStatus", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
  public BankingAccountV2OpenStatus? OpenStatus { get; set; } = PurpleBank.BankingAccountV2OpenStatus.OPEN;

  /// <summary>
  /// Flag indicating that the customer associated with the authorisation is an owner of the account. Does not indicate sole ownership, however. If not present then 'true' is assumed
  /// </summary>
  [Newtonsoft.Json.JsonProperty("isOwned", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public bool? IsOwned { get; set; } = true;

  /// <summary>
  /// Value indicating the number of customers that have ownership of the account, according to the data holder's definition of account ownership. Does not indicate that all account owners are eligible consumers
  /// </summary>
  [Newtonsoft.Json.JsonProperty("accountOwnership", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
  [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
  public BankingAccountV2AccountOwnership AccountOwnership { get; set; } = default!;

  /// <summary>
  /// A masked version of the account. Whether BSB/Account Number, Credit Card PAN or another number
  /// </summary>
  [Newtonsoft.Json.JsonProperty("maskedNumber", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
  public string MaskedNumber { get; set; } = default!;

  [Newtonsoft.Json.JsonProperty("productCategory", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
  [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
  public BankingProductCategory ProductCategory { get; set; } = default!;

  /// <summary>
  /// The unique identifier of the account as defined by the data holder (akin to model number for the account)
  /// </summary>
  [Newtonsoft.Json.JsonProperty("productName", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
  public string ProductName { get; set; } = default!;

  private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

  [Newtonsoft.Json.JsonExtensionData]
  public System.Collections.Generic.IDictionary<string, object> AdditionalProperties {
   get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
   set { _additionalProperties = value; }
  }

 }

 [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public partial class ResponseBankingAccountByIdV3 {
  [Newtonsoft.Json.JsonProperty("data", Required = Newtonsoft.Json.Required.Always)]
  public BankingAccountDetailV3 Data { get; set; } = default!;

  [Newtonsoft.Json.JsonProperty("links", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required]
  public Links Links { get; set; } = new Links();

  [Newtonsoft.Json.JsonProperty("meta", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public Meta? Meta { get; set; } = default!;

  private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

  [Newtonsoft.Json.JsonExtensionData]
  public System.Collections.Generic.IDictionary<string, object> AdditionalProperties {
   get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
   set { _additionalProperties = value; }
  }

 }

 [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public partial class BankingAccountDetailV3 : BankingAccountV2 {
  /// <summary>
  /// The unmasked BSB for the account. Is expected to be formatted as digits only with leading zeros included and no punctuation or spaces
  /// </summary>
  [Newtonsoft.Json.JsonProperty("bsb", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? Bsb { get; set; } = default!;

  /// <summary>
  /// The unmasked account number for the account. Should not be supplied if the account number is a PAN requiring PCI compliance. Is expected to be formatted as digits only with leading zeros included and no punctuation or spaces
  /// </summary>
  [Newtonsoft.Json.JsonProperty("accountNumber", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? AccountNumber { get; set; } = default!;

  /// <summary>
  /// Optional field to indicate if this account is part of a bundle that is providing additional benefit for to the customer
  /// </summary>
  [Newtonsoft.Json.JsonProperty("bundleName", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? BundleName { get; set; } = default!;

  /// <summary>
  /// The type of structure to present account specific fields.
  /// </summary>
  [Newtonsoft.Json.JsonProperty("specificAccountUType", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
  public BankingAccountDetailV3SpecificAccountUType? SpecificAccountUType { get; set; } = default!;

  [Newtonsoft.Json.JsonProperty("termDeposit", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public System.Collections.Generic.List<BankingTermDepositAccount>? TermDeposit { get; set; } = default!;

  [Newtonsoft.Json.JsonProperty("creditCard", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public BankingCreditCardAccount? CreditCard { get; set; } = default!;

  [Newtonsoft.Json.JsonProperty("loan", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public BankingLoanAccountV2? Loan { get; set; } = default!;

  /// <summary>
  /// current rate to calculate interest earned being applied to deposit balances as it stands at the time of the API call
  /// </summary>
  [Newtonsoft.Json.JsonProperty("depositRate", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? DepositRate { get; set; } = default!;

  /// <summary>
  /// The current rate to calculate interest payable being applied to lending balances as it stands at the time of the API call
  /// </summary>
  [Newtonsoft.Json.JsonProperty("lendingRate", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? LendingRate { get; set; } = default!;

  /// <summary>
  /// Fully described deposit rates for this account based on the equivalent structure in Product Reference
  /// </summary>
  [Newtonsoft.Json.JsonProperty("depositRates", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public System.Collections.Generic.List<BankingProductDepositRate>? DepositRates { get; set; } = default!;

  /// <summary>
  /// Fully described deposit rates for this account based on the equivalent structure in Product Reference
  /// </summary>
  [Newtonsoft.Json.JsonProperty("lendingRates", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public System.Collections.Generic.List<BankingProductLendingRateV2>? LendingRates { get; set; } = default!;

  /// <summary>
  /// Array of features of the account based on the equivalent structure in Product Reference with the following additional field
  /// </summary>
  [Newtonsoft.Json.JsonProperty("features", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public System.Collections.Generic.List<Features>? Features { get; set; } = default!;

  /// <summary>
  /// Fees and charges applicable to the account based on the equivalent structure in Product Reference
  /// </summary>
  [Newtonsoft.Json.JsonProperty("fees", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public System.Collections.Generic.List<BankingProductFee>? Fees { get; set; } = default!;

  /// <summary>
  /// The addresses for the account to be used for correspondence
  /// </summary>
  [Newtonsoft.Json.JsonProperty("addresses", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public System.Collections.Generic.List<CommonPhysicalAddress>? Addresses { get; set; } = default!;

 }

 [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public partial class BankingTermDepositAccount {
  /// <summary>
  /// The lodgement date of the original deposit
  /// </summary>
  [Newtonsoft.Json.JsonProperty("lodgementDate", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
  public string LodgementDate { get; set; } = default!;

  /// <summary>
  /// Maturity date for the term deposit
  /// </summary>
  [Newtonsoft.Json.JsonProperty("maturityDate", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
  public string MaturityDate { get; set; } = default!;

  /// <summary>
  /// Amount to be paid upon maturity. If absent it implies the amount to paid is variable and cannot currently be calculated
  /// </summary>
  [Newtonsoft.Json.JsonProperty("maturityAmount", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? MaturityAmount { get; set; } = default!;

  /// <summary>
  /// If absent assumes AUD
  /// </summary>
  [Newtonsoft.Json.JsonProperty("maturityCurrency", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? MaturityCurrency { get; set; } = default!;

  /// <summary>
  /// Current instructions on action to be taken at maturity. This includes default actions that may be specified in the terms and conditions for the product e.g. roll-over to the same term and frequency of interest payments
  /// </summary>
  [Newtonsoft.Json.JsonProperty("maturityInstructions", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
  [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
  public BankingTermDepositAccountMaturityInstructions MaturityInstructions { get; set; } = default!;

  private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

  [Newtonsoft.Json.JsonExtensionData]
  public System.Collections.Generic.IDictionary<string, object> AdditionalProperties {
   get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
   set { _additionalProperties = value; }
  }

 }

 [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public partial class BankingCreditCardAccount {
  /// <summary>
  /// The minimum payment amount due for the next card payment
  /// </summary>
  [Newtonsoft.Json.JsonProperty("minPaymentAmount", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
  public string MinPaymentAmount { get; set; } = default!;

  /// <summary>
  /// The amount due for the next card payment
  /// </summary>
  [Newtonsoft.Json.JsonProperty("paymentDueAmount", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
  public string PaymentDueAmount { get; set; } = default!;

  /// <summary>
  /// If absent assumes AUD
  /// </summary>
  [Newtonsoft.Json.JsonProperty("paymentCurrency", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? PaymentCurrency { get; set; } = default!;

  /// <summary>
  /// Date that the next payment for the card is due
  /// </summary>
  [Newtonsoft.Json.JsonProperty("paymentDueDate", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
  public string PaymentDueDate { get; set; } = default!;

  private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

  [Newtonsoft.Json.JsonExtensionData]
  public System.Collections.Generic.IDictionary<string, object> AdditionalProperties {
   get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
   set { _additionalProperties = value; }
  }

 }

 [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public partial class BankingLoanAccountV2 {
  /// <summary>
  /// Optional original start date for the loan
  /// </summary>
  [Newtonsoft.Json.JsonProperty("originalStartDate", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? OriginalStartDate { get; set; } = default!;

  /// <summary>
  /// Optional original loan value
  /// </summary>
  [Newtonsoft.Json.JsonProperty("originalLoanAmount", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? OriginalLoanAmount { get; set; } = default!;

  /// <summary>
  /// If absent assumes AUD
  /// </summary>
  [Newtonsoft.Json.JsonProperty("originalLoanCurrency", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? OriginalLoanCurrency { get; set; } = default!;

  /// <summary>
  /// Date that the loan is due to be repaid in full
  /// </summary>
  [Newtonsoft.Json.JsonProperty("loanEndDate", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? LoanEndDate { get; set; } = default!;

  /// <summary>
  /// Next date that an instalment is required
  /// </summary>
  [Newtonsoft.Json.JsonProperty("nextInstalmentDate", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? NextInstalmentDate { get; set; } = default!;

  /// <summary>
  /// Minimum amount of next instalment
  /// </summary>
  [Newtonsoft.Json.JsonProperty("minInstalmentAmount", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? MinInstalmentAmount { get; set; } = default!;

  /// <summary>
  /// If absent assumes AUD
  /// </summary>
  [Newtonsoft.Json.JsonProperty("minInstalmentCurrency", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? MinInstalmentCurrency { get; set; } = default!;

  /// <summary>
  /// Maximum amount of funds that can be redrawn. If not present redraw is not available even if the feature exists for the account
  /// </summary>
  [Newtonsoft.Json.JsonProperty("maxRedraw", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? MaxRedraw { get; set; } = default!;

  /// <summary>
  /// If absent assumes AUD
  /// </summary>
  [Newtonsoft.Json.JsonProperty("maxRedrawCurrency", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? MaxRedrawCurrency { get; set; } = default!;

  /// <summary>
  /// Minimum redraw amount
  /// </summary>
  [Newtonsoft.Json.JsonProperty("minRedraw", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? MinRedraw { get; set; } = default!;

  /// <summary>
  /// If absent assumes AUD
  /// </summary>
  [Newtonsoft.Json.JsonProperty("minRedrawCurrency", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? MinRedrawCurrency { get; set; } = default!;

  /// <summary>
  /// Set to true if one or more offset accounts are configured for this loan account
  /// </summary>
  [Newtonsoft.Json.JsonProperty("offsetAccountEnabled", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public bool? OffsetAccountEnabled { get; set; } = default!;

  /// <summary>
  /// The accountIDs of the configured offset accounts attached to this loan. Only offset accounts that can be accessed under the current authorisation should be included. It is expected behaviour that offsetAccountEnabled is set to true but the offsetAccountIds field is absent or empty. This represents a situation where an offset account exists but details can not be accessed under the current authorisation
  /// </summary>
  [Newtonsoft.Json.JsonProperty("offsetAccountIds", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public System.Collections.Generic.List<string>? OffsetAccountIds { get; set; } = default!;

  /// <summary>
  /// Options in place for repayments. If absent defaults to PRINCIPAL_AND_INTEREST
  /// </summary>
  [Newtonsoft.Json.JsonProperty("repaymentType", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
  public BankingLoanAccountV2RepaymentType? RepaymentType { get; set; } = PurpleBank.BankingLoanAccountV2RepaymentType.PRINCIPAL_AND_INTEREST;

  /// <summary>
  /// The expected or required repayment frequency. Formatted according to [ISO 8601 Durations](https://en.wikipedia.org/wiki/ISO_8601#Durations) (excludes recurrence syntax)
  /// </summary>
  [Newtonsoft.Json.JsonProperty("repaymentFrequency", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? RepaymentFrequency { get; set; } = default!;

  private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

  [Newtonsoft.Json.JsonExtensionData]
  public System.Collections.Generic.IDictionary<string, object> AdditionalProperties {
   get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
   set { _additionalProperties = value; }
  }

 }

 [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public partial class ResponseBankingTransactionList {
  [Newtonsoft.Json.JsonProperty("data", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required]
  public ResponseBankingTransactionList_data Data { get; set; } = new ResponseBankingTransactionList_data();

  [Newtonsoft.Json.JsonProperty("links", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required]
  public LinksPaginated Links { get; set; } = new LinksPaginated();

  [Newtonsoft.Json.JsonProperty("meta", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required]
  public MetaPaginated Meta { get; set; } = new MetaPaginated();

  private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

  [Newtonsoft.Json.JsonExtensionData]
  public System.Collections.Generic.IDictionary<string, object> AdditionalProperties {
   get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
   set { _additionalProperties = value; }
  }

 }

 [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public partial class BankingTransaction {
  /// <summary>
  /// ID of the account for which transactions are provided
  /// </summary>
  [Newtonsoft.Json.JsonProperty("accountId", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
  public string AccountId { get; set; } = default!;

  /// <summary>
  /// A unique ID of the transaction adhering to the standards for ID permanence.  This is mandatory (through hashing if necessary) unless there are specific and justifiable technical reasons why a transaction cannot be uniquely identified for a particular account type. It is mandatory if `isDetailAvailable` is set to true.
  /// </summary>
  [Newtonsoft.Json.JsonProperty("transactionId", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? TransactionId { get; set; } = default!;

  /// <summary>
  /// True if extended information is available using the transaction detail end point. False if extended data is not available
  /// </summary>
  [Newtonsoft.Json.JsonProperty("isDetailAvailable", Required = Newtonsoft.Json.Required.Always)]
  public bool IsDetailAvailable { get; set; } = default!;

  /// <summary>
  /// The type of the transaction
  /// </summary>
  [Newtonsoft.Json.JsonProperty("type", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
  [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
  public BankingTransactionType Type { get; set; } = default!;

  /// <summary>
  /// Status of the transaction whether pending or posted. Note that there is currently no provision in the standards to guarantee the ability to correlate a pending transaction with an associated posted transaction
  /// </summary>
  [Newtonsoft.Json.JsonProperty("status", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
  [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
  public BankingTransactionStatus Status { get; set; } = default!;

  /// <summary>
  /// The transaction description as applied by the financial institution
  /// </summary>
  [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
  public string Description { get; set; } = default!;

  /// <summary>
  /// The time the transaction was posted. This field is Mandatory if the transaction has status POSTED.  This is the time that appears on a standard statement
  /// </summary>
  [Newtonsoft.Json.JsonProperty("postingDateTime", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? PostingDateTime { get; set; } = default!;

  /// <summary>
  /// Date and time at which assets become available to the account owner in case of a credit entry, or cease to be available to the account owner in case of a debit transaction entry
  /// </summary>
  [Newtonsoft.Json.JsonProperty("valueDateTime", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? ValueDateTime { get; set; } = default!;

  /// <summary>
  /// The time the transaction was executed by the originating customer, if available
  /// </summary>
  [Newtonsoft.Json.JsonProperty("executionDateTime", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? ExecutionDateTime { get; set; } = default!;

  /// <summary>
  /// The value of the transaction. Negative values mean money was outgoing from the account
  /// </summary>
  [Newtonsoft.Json.JsonProperty("amount", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
  public string Amount { get; set; } = default!;

  /// <summary>
  /// The currency for the transaction amount. AUD assumed if not present
  /// </summary>
  [Newtonsoft.Json.JsonProperty("currency", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? Currency { get; set; } = default!;

  /// <summary>
  /// The reference for the transaction provided by the originating institution. Empty string if no data provided
  /// </summary>
  [Newtonsoft.Json.JsonProperty("reference", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
  public string Reference { get; set; } = default!;

  /// <summary>
  /// Name of the merchant for an outgoing payment to a merchant
  /// </summary>
  [Newtonsoft.Json.JsonProperty("merchantName", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? MerchantName { get; set; } = default!;

  /// <summary>
  /// The merchant category code (or MCC) for an outgoing payment to a merchant
  /// </summary>
  [Newtonsoft.Json.JsonProperty("merchantCategoryCode", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? MerchantCategoryCode { get; set; } = default!;

  /// <summary>
  /// BPAY Biller Code for the transaction (if available)
  /// </summary>
  [Newtonsoft.Json.JsonProperty("billerCode", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? BillerCode { get; set; } = default!;

  /// <summary>
  /// Name of the BPAY biller for the transaction (if available)
  /// </summary>
  [Newtonsoft.Json.JsonProperty("billerName", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? BillerName { get; set; } = default!;

  /// <summary>
  /// BPAY CRN for the transaction (if available).&lt;br/&gt;Where the CRN contains sensitive information, it should be masked in line with how the Data Holder currently displays account identifiers in their existing online banking channels. If the contents of the CRN match the format of a Credit Card PAN they should be masked according to the rules applicable for MaskedPANString. If the contents are are otherwise sensitive, then it should be masked using the rules applicable for the MaskedAccountString common type.
  /// </summary>
  [Newtonsoft.Json.JsonProperty("crn", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? Crn { get; set; } = default!;

  /// <summary>
  /// 6 Digit APCA number for the initiating institution. The field is fixed-width and padded with leading zeros if applicable.
  /// </summary>
  [Newtonsoft.Json.JsonProperty("apcaNumber", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? ApcaNumber { get; set; } = default!;

  private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

  [Newtonsoft.Json.JsonExtensionData]
  public System.Collections.Generic.IDictionary<string, object> AdditionalProperties {
   get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
   set { _additionalProperties = value; }
  }

 }

 [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public partial class ResponseBankingTransactionById {
  [Newtonsoft.Json.JsonProperty("data", Required = Newtonsoft.Json.Required.Always)]
  public BankingTransactionDetail Data { get; set; } = default!;

  [Newtonsoft.Json.JsonProperty("links", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required]
  public Links Links { get; set; } = new Links();

  [Newtonsoft.Json.JsonProperty("meta", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public Meta? Meta { get; set; } = default!;

  private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

  [Newtonsoft.Json.JsonExtensionData]
  public System.Collections.Generic.IDictionary<string, object> AdditionalProperties {
   get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
   set { _additionalProperties = value; }
  }

 }

 [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public partial class BankingTransactionDetail : BankingTransaction {
  [Newtonsoft.Json.JsonProperty("extendedData", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required]
  public BankingTransactionDetail_allOf_extendedData ExtendedData { get; set; } = new BankingTransactionDetail_allOf_extendedData();

 }

 [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public partial class ResponseBankingAccountsBalanceList {
  [Newtonsoft.Json.JsonProperty("data", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required]
  public ResponseBankingAccountsBalanceList_data Data { get; set; } = new ResponseBankingAccountsBalanceList_data();

  [Newtonsoft.Json.JsonProperty("links", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required]
  public LinksPaginated Links { get; set; } = new LinksPaginated();

  [Newtonsoft.Json.JsonProperty("meta", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required]
  public MetaPaginated Meta { get; set; } = new MetaPaginated();

  private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

  [Newtonsoft.Json.JsonExtensionData]
  public System.Collections.Generic.IDictionary<string, object> AdditionalProperties {
   get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
   set { _additionalProperties = value; }
  }

 }

 [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public partial class ResponseBankingAccountsBalanceById {
  [Newtonsoft.Json.JsonProperty("data", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required]
  public BankingBalance Data { get; set; } = new BankingBalance();

  [Newtonsoft.Json.JsonProperty("links", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required]
  public Links Links { get; set; } = new Links();

  [Newtonsoft.Json.JsonProperty("meta", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public Meta? Meta { get; set; } = default!;

  private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

  [Newtonsoft.Json.JsonExtensionData]
  public System.Collections.Generic.IDictionary<string, object> AdditionalProperties {
   get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
   set { _additionalProperties = value; }
  }

 }

 [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public partial class BankingBalance {
  /// <summary>
  /// A unique ID of the account adhering to the standards for ID permanence
  /// </summary>
  [Newtonsoft.Json.JsonProperty("accountId", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
  public string AccountId { get; set; } = default!;

  /// <summary>
  /// The balance of the account at this time. Should align to the balance available via other channels such as Internet Banking. Assumed to be negative if the customer has money owing
  /// </summary>
  [Newtonsoft.Json.JsonProperty("currentBalance", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
  public string CurrentBalance { get; set; } = default!;

  /// <summary>
  /// Balance representing the amount of funds available for transfer. Assumed to be zero or positive
  /// </summary>
  [Newtonsoft.Json.JsonProperty("availableBalance", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
  public string AvailableBalance { get; set; } = default!;

  /// <summary>
  /// Object representing the maximum amount of credit that is available for this account. Assumed to be zero if absent
  /// </summary>
  [Newtonsoft.Json.JsonProperty("creditLimit", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? CreditLimit { get; set; } = default!;

  /// <summary>
  /// Object representing the available limit amortised according to payment schedule. Assumed to be zero if absent
  /// </summary>
  [Newtonsoft.Json.JsonProperty("amortisedLimit", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? AmortisedLimit { get; set; } = default!;

  /// <summary>
  /// The currency for the balance amounts. If absent assumed to be AUD
  /// </summary>
  [Newtonsoft.Json.JsonProperty("currency", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? Currency { get; set; } = default!;

  /// <summary>
  /// Optional array of balances for the account in other currencies. Included to support accounts that support multi-currency purses such as Travel Cards
  /// </summary>
  [Newtonsoft.Json.JsonProperty("purses", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public System.Collections.Generic.List<BankingBalancePurse>? Purses { get; set; } = default!;

  private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

  [Newtonsoft.Json.JsonExtensionData]
  public System.Collections.Generic.IDictionary<string, object> AdditionalProperties {
   get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
   set { _additionalProperties = value; }
  }

 }

 [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public partial class BankingBalancePurse {
  /// <summary>
  /// The balance available for this additional currency purse
  /// </summary>
  [Newtonsoft.Json.JsonProperty("amount", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
  public string Amount { get; set; } = default!;

  /// <summary>
  /// The currency for the purse
  /// </summary>
  [Newtonsoft.Json.JsonProperty("currency", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? Currency { get; set; } = default!;

  private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

  [Newtonsoft.Json.JsonExtensionData]
  public System.Collections.Generic.IDictionary<string, object> AdditionalProperties {
   get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
   set { _additionalProperties = value; }
  }

 }

 [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public partial class ResponseBankingPayeeListV2 {
  [Newtonsoft.Json.JsonProperty("data", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required]
  public ResponseBankingPayeeListV2_data Data { get; set; } = new ResponseBankingPayeeListV2_data();

  [Newtonsoft.Json.JsonProperty("links", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required]
  public LinksPaginated Links { get; set; } = new LinksPaginated();

  [Newtonsoft.Json.JsonProperty("meta", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required]
  public MetaPaginated Meta { get; set; } = new MetaPaginated();

  private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

  [Newtonsoft.Json.JsonExtensionData]
  public System.Collections.Generic.IDictionary<string, object> AdditionalProperties {
   get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
   set { _additionalProperties = value; }
  }

 }

 [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public partial class ResponseBankingPayeeByIdV2 {
  [Newtonsoft.Json.JsonProperty("data", Required = Newtonsoft.Json.Required.Always)]
  public BankingPayeeDetailV2 Data { get; set; } = default!;

  [Newtonsoft.Json.JsonProperty("links", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required]
  public Links Links { get; set; } = new Links();

  [Newtonsoft.Json.JsonProperty("meta", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public Meta? Meta { get; set; } = default!;

  private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

  [Newtonsoft.Json.JsonExtensionData]
  public System.Collections.Generic.IDictionary<string, object> AdditionalProperties {
   get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
   set { _additionalProperties = value; }
  }

 }

 [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public partial class BankingPayeeV2 {
  /// <summary>
  /// ID of the payee adhering to the rules of ID permanence
  /// </summary>
  [Newtonsoft.Json.JsonProperty("payeeId", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
  public string PayeeId { get; set; } = default!;

  /// <summary>
  /// The short display name of the payee as provided by the customer. Where a customer has not provided a nickname, a display name derived by the bank for the payee consistent with existing digital banking channels
  /// </summary>
  [Newtonsoft.Json.JsonProperty("nickname", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
  public string Nickname { get; set; } = default!;

  /// <summary>
  /// A description of the payee provided by the customer
  /// </summary>
  [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? Description { get; set; } = default!;

  /// <summary>
  /// The type of payee.&lt;br/&gt;DOMESTIC means a registered payee for domestic payments including NPP. &lt;br/&gt;INTERNATIONAL means a registered payee for international payments. &lt;br/&gt;BILLER means a registered payee for BPAY. &lt;br/&gt;DIGITAL_WALLET means a registered payee for a bank's digital wallet
  /// </summary>
  [Newtonsoft.Json.JsonProperty("type", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
  [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
  public BankingPayeeV2Type Type { get; set; } = default!;

  /// <summary>
  /// The date the payee was created by the customer
  /// </summary>
  [Newtonsoft.Json.JsonProperty("creationDate", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? CreationDate { get; set; } = default!;

  private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

  [Newtonsoft.Json.JsonExtensionData]
  public System.Collections.Generic.IDictionary<string, object> AdditionalProperties {
   get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
   set { _additionalProperties = value; }
  }

 }

 [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public partial class BankingPayeeDetailV2 : BankingPayeeV2 {
  /// <summary>
  /// Type of object included that describes the payee in detail
  /// </summary>
  [Newtonsoft.Json.JsonProperty("payeeUType", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
  [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
  public BankingPayeeDetailV2PayeeUType PayeeUType { get; set; } = default!;

  [Newtonsoft.Json.JsonProperty("biller", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public BankingBillerPayee? Biller { get; set; } = default!;

  [Newtonsoft.Json.JsonProperty("domestic", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public BankingDomesticPayee? Domestic { get; set; } = default!;

  [Newtonsoft.Json.JsonProperty("digitalWallet", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public BankingDigitalWalletPayee? DigitalWallet { get; set; } = default!;

  [Newtonsoft.Json.JsonProperty("international", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public BankingInternationalPayee? International { get; set; } = default!;

 }

 [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public partial class BankingDomesticPayee {
  /// <summary>
  /// Type of account object included. Valid values are: **account** A standard Australian account defined by BSB/Account Number. **card** A credit or charge card to pay to (note that PANs are masked). **payId** A PayID recognised by NPP
  /// </summary>
  [Newtonsoft.Json.JsonProperty("payeeAccountUType", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
  [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
  public BankingDomesticPayeePayeeAccountUType PayeeAccountUType { get; set; } = default!;

  [Newtonsoft.Json.JsonProperty("account", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public BankingDomesticPayeeAccount? Account { get; set; } = default!;

  [Newtonsoft.Json.JsonProperty("card", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public BankingDomesticPayeeCard? Card { get; set; } = default!;

  [Newtonsoft.Json.JsonProperty("payId", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public BankingDomesticPayeePayId? PayId { get; set; } = default!;

  private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

  [Newtonsoft.Json.JsonExtensionData]
  public System.Collections.Generic.IDictionary<string, object> AdditionalProperties {
   get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
   set { _additionalProperties = value; }
  }

 }

 [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public partial class BankingDomesticPayeeAccount {
  /// <summary>
  /// Name of the account to pay to
  /// </summary>
  [Newtonsoft.Json.JsonProperty("accountName", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? AccountName { get; set; } = default!;

  /// <summary>
  /// BSB of the account to pay to
  /// </summary>
  [Newtonsoft.Json.JsonProperty("bsb", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
  public string Bsb { get; set; } = default!;

  /// <summary>
  /// Number of the account to pay to
  /// </summary>
  [Newtonsoft.Json.JsonProperty("accountNumber", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
  public string AccountNumber { get; set; } = default!;

  private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

  [Newtonsoft.Json.JsonExtensionData]
  public System.Collections.Generic.IDictionary<string, object> AdditionalProperties {
   get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
   set { _additionalProperties = value; }
  }

 }

 [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public partial class BankingDomesticPayeeCard {
  /// <summary>
  /// Name of the account to pay to
  /// </summary>
  [Newtonsoft.Json.JsonProperty("cardNumber", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
  public string CardNumber { get; set; } = default!;

  private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

  [Newtonsoft.Json.JsonExtensionData]
  public System.Collections.Generic.IDictionary<string, object> AdditionalProperties {
   get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
   set { _additionalProperties = value; }
  }

 }

 [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public partial class BankingDomesticPayeePayId {
  /// <summary>
  /// The name assigned to the PayID by the owner of the PayID
  /// </summary>
  [Newtonsoft.Json.JsonProperty("name", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? Name { get; set; } = default!;

  /// <summary>
  /// The identifier of the PayID (dependent on type)
  /// </summary>
  [Newtonsoft.Json.JsonProperty("identifier", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
  public string Identifier { get; set; } = default!;

  /// <summary>
  /// The type of the PayID
  /// </summary>
  [Newtonsoft.Json.JsonProperty("type", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
  [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
  public BankingDomesticPayeePayIdType Type { get; set; } = default!;

  private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

  [Newtonsoft.Json.JsonExtensionData]
  public System.Collections.Generic.IDictionary<string, object> AdditionalProperties {
   get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
   set { _additionalProperties = value; }
  }

 }

 [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public partial class BankingBillerPayee {
  /// <summary>
  /// BPAY Biller Code of the Biller
  /// </summary>
  [Newtonsoft.Json.JsonProperty("billerCode", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
  public string BillerCode { get; set; } = default!;

  /// <summary>
  /// BPAY CRN of the Biller (if available).&lt;br/&gt;Where the CRN contains sensitive information, it should be masked in line with how the Data Holder currently displays account identifiers in their existing online banking channels. If the contents of the CRN match the format of a Credit Card PAN they should be masked according to the rules applicable for MaskedPANString. If the contents are are otherwise sensitive, then it should be masked using the rules applicable for the MaskedAccountString common type.
  /// </summary>
  [Newtonsoft.Json.JsonProperty("crn", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? Crn { get; set; } = default!;

  /// <summary>
  /// Name of the Biller
  /// </summary>
  [Newtonsoft.Json.JsonProperty("billerName", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
  public string BillerName { get; set; } = default!;

  private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

  [Newtonsoft.Json.JsonExtensionData]
  public System.Collections.Generic.IDictionary<string, object> AdditionalProperties {
   get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
   set { _additionalProperties = value; }
  }

 }

 [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public partial class BankingInternationalPayee {
  [Newtonsoft.Json.JsonProperty("beneficiaryDetails", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required]
  public BankingInternationalPayee_beneficiaryDetails BeneficiaryDetails { get; set; } = new BankingInternationalPayee_beneficiaryDetails();

  [Newtonsoft.Json.JsonProperty("bankDetails", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required]
  public BankingInternationalPayee_bankDetails BankDetails { get; set; } = new BankingInternationalPayee_bankDetails();

  private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

  [Newtonsoft.Json.JsonExtensionData]
  public System.Collections.Generic.IDictionary<string, object> AdditionalProperties {
   get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
   set { _additionalProperties = value; }
  }

 }

 [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public partial class BankingDigitalWalletPayee {
  /// <summary>
  /// The name assigned to the digital wallet by the owner of the wallet, else the display name provided by the digital wallet provider
  /// </summary>
  [Newtonsoft.Json.JsonProperty("name", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
  public string Name { get; set; } = default!;

  /// <summary>
  /// The identifier of the digital wallet (dependent on type)
  /// </summary>
  [Newtonsoft.Json.JsonProperty("identifier", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
  public string Identifier { get; set; } = default!;

  /// <summary>
  /// The type of the digital wallet identifier
  /// </summary>
  [Newtonsoft.Json.JsonProperty("type", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
  [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
  public BankingDigitalWalletPayeeType Type { get; set; } = default!;

  /// <summary>
  /// The provider of the digital wallet
  /// </summary>
  [Newtonsoft.Json.JsonProperty("provider", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
  [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
  public BankingDigitalWalletPayeeProvider Provider { get; set; } = default!;

  private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

  [Newtonsoft.Json.JsonExtensionData]
  public System.Collections.Generic.IDictionary<string, object> AdditionalProperties {
   get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
   set { _additionalProperties = value; }
  }

 }

 [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public partial class ResponseBankingDirectDebitAuthorisationList {
  [Newtonsoft.Json.JsonProperty("data", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required]
  public ResponseBankingDirectDebitAuthorisationList_data Data { get; set; } = new ResponseBankingDirectDebitAuthorisationList_data();

  [Newtonsoft.Json.JsonProperty("links", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required]
  public LinksPaginated Links { get; set; } = new LinksPaginated();

  [Newtonsoft.Json.JsonProperty("meta", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required]
  public MetaPaginated Meta { get; set; } = new MetaPaginated();

  private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

  [Newtonsoft.Json.JsonExtensionData]
  public System.Collections.Generic.IDictionary<string, object> AdditionalProperties {
   get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
   set { _additionalProperties = value; }
  }

 }

 [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public partial class BankingDirectDebit {
  /// <summary>
  /// A unique ID of the account adhering to the standards for ID permanence.
  /// </summary>
  [Newtonsoft.Json.JsonProperty("accountId", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
  public string AccountId { get; set; } = default!;

  [Newtonsoft.Json.JsonProperty("authorisedEntity", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required]
  public BankingAuthorisedEntity AuthorisedEntity { get; set; } = new BankingAuthorisedEntity();

  /// <summary>
  /// The date and time of the last debit executed under this authorisation
  /// </summary>
  [Newtonsoft.Json.JsonProperty("lastDebitDateTime", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? LastDebitDateTime { get; set; } = default!;

  /// <summary>
  /// The amount of the last debit executed under this authorisation
  /// </summary>
  [Newtonsoft.Json.JsonProperty("lastDebitAmount", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? LastDebitAmount { get; set; } = default!;

  private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

  [Newtonsoft.Json.JsonExtensionData]
  public System.Collections.Generic.IDictionary<string, object> AdditionalProperties {
   get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
   set { _additionalProperties = value; }
  }

 }

 [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public partial class BankingAuthorisedEntity {
  /// <summary>
  /// Description of the authorised entity derived from previously executed direct debits
  /// </summary>
  [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? Description { get; set; } = default!;

  /// <summary>
  /// Name of the financial institution through which the direct debit will be executed. Is required unless the payment is made via a credit card scheme
  /// </summary>
  [Newtonsoft.Json.JsonProperty("financialInstitution", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? FinancialInstitution { get; set; } = default!;

  /// <summary>
  /// Australian Business Number for the authorised entity
  /// </summary>
  [Newtonsoft.Json.JsonProperty("abn", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? Abn { get; set; } = default!;

  /// <summary>
  /// Australian Company Number for the authorised entity
  /// </summary>
  [Newtonsoft.Json.JsonProperty("acn", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? Acn { get; set; } = default!;

  /// <summary>
  /// Australian Registered Body Number for the authorised entity
  /// </summary>
  [Newtonsoft.Json.JsonProperty("arbn", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? Arbn { get; set; } = default!;

  private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

  [Newtonsoft.Json.JsonExtensionData]
  public System.Collections.Generic.IDictionary<string, object> AdditionalProperties {
   get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
   set { _additionalProperties = value; }
  }

 }

 [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public partial class ResponseBankingScheduledPaymentsList {
  [Newtonsoft.Json.JsonProperty("data", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required]
  public ResponseBankingScheduledPaymentsList_data Data { get; set; } = new ResponseBankingScheduledPaymentsList_data();

  [Newtonsoft.Json.JsonProperty("links", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required]
  public LinksPaginated Links { get; set; } = new LinksPaginated();

  [Newtonsoft.Json.JsonProperty("meta", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required]
  public MetaPaginated Meta { get; set; } = new MetaPaginated();

  private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

  [Newtonsoft.Json.JsonExtensionData]
  public System.Collections.Generic.IDictionary<string, object> AdditionalProperties {
   get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
   set { _additionalProperties = value; }
  }

 }

 [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public partial class BankingScheduledPayment {
  /// <summary>
  /// A unique ID of the scheduled payment adhering to the standards for ID permanence
  /// </summary>
  [Newtonsoft.Json.JsonProperty("scheduledPaymentId", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
  public string ScheduledPaymentId { get; set; } = default!;

  /// <summary>
  /// The short display name of the scheduled payment as provided by the customer if provided. Where a customer has not provided a nickname, a display name derived by the bank for the scheduled payment should be provided that is consistent with existing digital banking channels
  /// </summary>
  [Newtonsoft.Json.JsonProperty("nickname", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? Nickname { get; set; } = default!;

  /// <summary>
  /// The reference for the transaction that will be used by the originating institution for the purposes of constructing a statement narrative on the payer’s account. Empty string if no data provided
  /// </summary>
  [Newtonsoft.Json.JsonProperty("payerReference", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
  public string PayerReference { get; set; } = default!;

  /// <summary>
  /// The reference for the transaction, if applicable, that will be provided by the originating institution for all payments in the payment set. Empty string if no data provided
  /// </summary>
  [Newtonsoft.Json.JsonProperty("payeeReference", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? PayeeReference { get; set; } = default!;

  /// <summary>
  /// Indicates whether the schedule is currently active. The value SKIP is equivalent to ACTIVE except that the customer has requested the next normal occurrence to be skipped.
  /// </summary>
  [Newtonsoft.Json.JsonProperty("status", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
  [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
  public BankingScheduledPaymentStatus Status { get; set; } = default!;

  [Newtonsoft.Json.JsonProperty("from", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required]
  public BankingScheduledPaymentFrom From { get; set; } = new BankingScheduledPaymentFrom();

  [Newtonsoft.Json.JsonProperty("paymentSet", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required]
  public System.Collections.Generic.List<BankingScheduledPaymentSet> PaymentSet { get; set; } = new System.Collections.Generic.List<BankingScheduledPaymentSet>();

  [Newtonsoft.Json.JsonProperty("recurrence", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required]
  public BankingScheduledPaymentRecurrence Recurrence { get; set; } = new BankingScheduledPaymentRecurrence();

  private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

  [Newtonsoft.Json.JsonExtensionData]
  public System.Collections.Generic.IDictionary<string, object> AdditionalProperties {
   get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
   set { _additionalProperties = value; }
  }

 }

 /// <summary>
 /// The set of payment amounts and destination accounts for this payment accommodating multi-part payments. A single entry indicates a simple payment with one destination account. Must have at least one entry
 /// </summary>
 [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public partial class BankingScheduledPaymentSet {
  [Newtonsoft.Json.JsonProperty("to", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required]
  public BankingScheduledPaymentTo To { get; set; } = new BankingScheduledPaymentTo();

  /// <summary>
  /// Flag indicating whether the amount of the payment is calculated based on the context of the event. For instance a payment to reduce the balance of a credit card to zero. If absent then false is assumed
  /// </summary>
  [Newtonsoft.Json.JsonProperty("isAmountCalculated", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public bool? IsAmountCalculated { get; set; } = default!;

  /// <summary>
  /// The amount of the next payment if known. Mandatory unless the isAmountCalculated field is set to true. Must be zero or positive if present
  /// </summary>
  [Newtonsoft.Json.JsonProperty("amount", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? Amount { get; set; } = default!;

  /// <summary>
  /// The currency for the payment. AUD assumed if not present
  /// </summary>
  [Newtonsoft.Json.JsonProperty("currency", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? Currency { get; set; } = default!;

  private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

  [Newtonsoft.Json.JsonExtensionData]
  public System.Collections.Generic.IDictionary<string, object> AdditionalProperties {
   get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
   set { _additionalProperties = value; }
  }

 }

 /// <summary>
 /// Object containing details of the destination of the payment. Used to specify a variety of payment destination types
 /// </summary>
 [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public partial class BankingScheduledPaymentTo {
  /// <summary>
  /// The type of object provided that specifies the destination of the funds for the payment.
  /// </summary>
  [Newtonsoft.Json.JsonProperty("toUType", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
  [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
  public BankingScheduledPaymentToToUType ToUType { get; set; } = default!;

  /// <summary>
  /// Present if toUType is set to accountId. Indicates that the payment is to another account that is accessible under the current consent
  /// </summary>
  [Newtonsoft.Json.JsonProperty("accountId", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? AccountId { get; set; } = default!;

  /// <summary>
  /// Present if toUType is set to payeeId. Indicates that the payment is to registered payee that can be accessed using the payee end point. If the Bank Payees scope has not been consented to then a payeeId should not be provided and the full payee details should be provided instead
  /// </summary>
  [Newtonsoft.Json.JsonProperty("payeeId", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? PayeeId { get; set; } = default!;

  /// <summary>
  /// The short display name of the payee as provided by the customer unless toUType is set to payeeId. Where a customer has not provided a nickname, a display name derived by the bank for payee should be provided that is consistent with existing digital banking channels
  /// </summary>
  [Newtonsoft.Json.JsonProperty("nickname", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? Nickname { get; set; } = default!;

  /// <summary>
  /// The reference for the transaction, if applicable, that will be provided by the originating institution for the specific payment. If not empty, it overrides the value provided at the BankingScheduledPayment level.
  /// </summary>
  [Newtonsoft.Json.JsonProperty("payeeReference", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? PayeeReference { get; set; } = default!;

  [Newtonsoft.Json.JsonProperty("domestic", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public BankingDomesticPayee? Domestic { get; set; } = default!;

  [Newtonsoft.Json.JsonProperty("biller", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public BankingBillerPayee? Biller { get; set; } = default!;

  [Newtonsoft.Json.JsonProperty("international", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public BankingInternationalPayee? International { get; set; } = default!;

  private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

  [Newtonsoft.Json.JsonExtensionData]
  public System.Collections.Generic.IDictionary<string, object> AdditionalProperties {
   get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
   set { _additionalProperties = value; }
  }

 }

 /// <summary>
 /// Object containing details of the source of the payment. Currently only specifies an account ID but provided as an object to facilitate future extensibility and consistency with the to object
 /// </summary>
 [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public partial class BankingScheduledPaymentFrom {
  /// <summary>
  /// ID of the account that is the source of funds for the payment
  /// </summary>
  [Newtonsoft.Json.JsonProperty("accountId", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
  public string AccountId { get; set; } = default!;

  private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

  [Newtonsoft.Json.JsonExtensionData]
  public System.Collections.Generic.IDictionary<string, object> AdditionalProperties {
   get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
   set { _additionalProperties = value; }
  }

 }

 /// <summary>
 /// Object containing the detail of the schedule for the payment
 /// </summary>
 [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public partial class BankingScheduledPaymentRecurrence {
  /// <summary>
  /// The date of the next payment under the recurrence schedule
  /// </summary>
  [Newtonsoft.Json.JsonProperty("nextPaymentDate", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? NextPaymentDate { get; set; } = default!;

  /// <summary>
  /// The type of recurrence used to define the schedule
  /// </summary>
  [Newtonsoft.Json.JsonProperty("recurrenceUType", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
  [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
  public BankingScheduledPaymentRecurrenceRecurrenceUType RecurrenceUType { get; set; } = default!;

  [Newtonsoft.Json.JsonProperty("onceOff", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public BankingScheduledPaymentRecurrenceOnceOff? OnceOff { get; set; } = default!;

  [Newtonsoft.Json.JsonProperty("intervalSchedule", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public BankingScheduledPaymentRecurrenceIntervalSchedule? IntervalSchedule { get; set; } = default!;

  [Newtonsoft.Json.JsonProperty("lastWeekDay", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public BankingScheduledPaymentRecurrenceLastWeekday? LastWeekDay { get; set; } = default!;

  [Newtonsoft.Json.JsonProperty("eventBased", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public BankingScheduledPaymentRecurrenceEventBased? EventBased { get; set; } = default!;

  private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

  [Newtonsoft.Json.JsonExtensionData]
  public System.Collections.Generic.IDictionary<string, object> AdditionalProperties {
   get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
   set { _additionalProperties = value; }
  }

 }

 /// <summary>
 /// Indicates that the payment is a once off payment on a specific future date. Mandatory if recurrenceUType is set to onceOff
 /// </summary>
 [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public partial class BankingScheduledPaymentRecurrenceOnceOff {
  /// <summary>
  /// The scheduled date for the once off payment
  /// </summary>
  [Newtonsoft.Json.JsonProperty("paymentDate", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
  public string PaymentDate { get; set; } = default!;

  private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

  [Newtonsoft.Json.JsonExtensionData]
  public System.Collections.Generic.IDictionary<string, object> AdditionalProperties {
   get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
   set { _additionalProperties = value; }
  }

 }

 /// <summary>
 /// Indicates that the schedule of payments is defined by a series of intervals. Mandatory if recurrenceUType is set to intervalSchedule
 /// </summary>
 [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public partial class BankingScheduledPaymentRecurrenceIntervalSchedule {
  /// <summary>
  /// The limit date after which no more payments should be made using this schedule. If both finalPaymentDate and paymentsRemaining are present then payments will stop according to the most constraining value. If neither field is present the payments will continue indefinitely
  /// </summary>
  [Newtonsoft.Json.JsonProperty("finalPaymentDate", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? FinalPaymentDate { get; set; } = default!;

  /// <summary>
  /// Indicates the number of payments remaining in the schedule. If both finalPaymentDate and paymentsRemaining are present then payments will stop according to the most constraining value, If neither field is present the payments will continue indefinitely
  /// </summary>
  [Newtonsoft.Json.JsonProperty("paymentsRemaining", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public int? PaymentsRemaining { get; set; } = default!;

  /// <summary>
  /// Enumerated field giving the treatment where a scheduled payment date is not a business day. If absent assumed to be ON.&lt;br/&gt;**AFTER** - If a scheduled payment date is a non-business day the payment will be made on the first business day after the scheduled payment date.&lt;br/&gt;**BEFORE** - If a scheduled payment date is a non-business day the payment will be made on the first business day before the scheduled payment date.&lt;br/&gt;**ON** - If a scheduled payment date is a non-business day the payment will be made on that day regardless.&lt;br/&gt;**ONLY** - Payments only occur on business days. If a scheduled payment date is a non-business day the payment will be ignored
  /// </summary>
  [Newtonsoft.Json.JsonProperty("nonBusinessDayTreatment", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
  public BankingScheduledPaymentRecurrenceIntervalScheduleNonBusinessDayTreatment? NonBusinessDayTreatment { get; set; } = PurpleBank.BankingScheduledPaymentRecurrenceIntervalScheduleNonBusinessDayTreatment.ON;

  /// <summary>
  /// An array of interval objects defining the payment schedule.  Each entry in the array is additive, in that it adds payments to the overall payment schedule.  If multiple intervals result in a payment on the same day then only one payment will be made. Must have at least one entry
  /// </summary>
  [Newtonsoft.Json.JsonProperty("intervals", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required]
  public System.Collections.Generic.List<BankingScheduledPaymentInterval> Intervals { get; set; } = new System.Collections.Generic.List<BankingScheduledPaymentInterval>();

  private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

  [Newtonsoft.Json.JsonExtensionData]
  public System.Collections.Generic.IDictionary<string, object> AdditionalProperties {
   get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
   set { _additionalProperties = value; }
  }

 }

 [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public partial class BankingScheduledPaymentInterval {
  /// <summary>
  /// An interval for the payment. Formatted according to [ISO 8601 Durations](https://en.wikipedia.org/wiki/ISO_8601#Durations)  (excludes recurrence syntax) with components less than a day in length ignored. This duration defines the period between payments starting with nextPaymentDate
  /// </summary>
  [Newtonsoft.Json.JsonProperty("interval", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
  public string Interval { get; set; } = default!;

  /// <summary>
  /// Uses an interval to define the ordinal day within the interval defined by the interval field on which the payment occurs. If the resulting duration is 0 days in length or larger than the number of days in the interval then the payment will occur on the last day of the interval. A duration of 1 day indicates the first day of the interval. If absent the assumed value is P1D. Formatted according to [ISO 8601 Durations](https://en.wikipedia.org/wiki/ISO_8601#Durations) (excludes recurrence syntax) with components less than a day in length ignored. The first day of a week is considered to be Monday.
  /// </summary>
  [Newtonsoft.Json.JsonProperty("dayInInterval", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? DayInInterval { get; set; } = default!;

  private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

  [Newtonsoft.Json.JsonExtensionData]
  public System.Collections.Generic.IDictionary<string, object> AdditionalProperties {
   get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
   set { _additionalProperties = value; }
  }

 }

 /// <summary>
 /// Indicates that the schedule of payments is defined according to the last occurrence of a specific weekday in an interval. Mandatory if recurrenceUType is set to lastWeekDay
 /// </summary>
 [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public partial class BankingScheduledPaymentRecurrenceLastWeekday {
  /// <summary>
  /// The limit date after which no more payments should be made using this schedule. If both finalPaymentDate and paymentsRemaining are present then payments will stop according to the most constraining value. If neither field is present the payments will continue indefinitely
  /// </summary>
  [Newtonsoft.Json.JsonProperty("finalPaymentDate", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? FinalPaymentDate { get; set; } = default!;

  /// <summary>
  /// Indicates the number of payments remaining in the schedule. If both finalPaymentDate and paymentsRemaining are present then payments will stop according to the most constraining value. If neither field is present the payments will continue indefinitely
  /// </summary>
  [Newtonsoft.Json.JsonProperty("paymentsRemaining", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public int? PaymentsRemaining { get; set; } = default!;

  /// <summary>
  /// The interval for the payment. Formatted according to [ISO 8601 Durations](https://en.wikipedia.org/wiki/ISO_8601#Durations) (excludes recurrence syntax) with components less than a day in length ignored. This duration defines the period between payments starting with nextPaymentDate
  /// </summary>
  [Newtonsoft.Json.JsonProperty("interval", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
  public string Interval { get; set; } = default!;

  /// <summary>
  /// The weekDay specified. The payment will occur on the last occurrence of this weekday in the interval.
  /// </summary>
  [Newtonsoft.Json.JsonProperty("lastWeekDay", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
  [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
  public BankingScheduledPaymentRecurrenceLastWeekdayLastWeekDay LastWeekDay { get; set; } = default!;

  /// <summary>
  /// Enumerated field giving the treatment where a scheduled payment date is not a business day. If absent assumed to be ON.&lt;br/&gt;**AFTER** - If a scheduled payment date is a non-business day the payment will be made on the first business day after the scheduled payment date.&lt;br/&gt;**BEFORE** - If a scheduled payment date is a non-business day the payment will be made on the first business day before the scheduled payment date.&lt;br/&gt;**ON** - If a scheduled payment date is a non-business day the payment will be made on that day regardless.&lt;br/&gt;**ONLY** - Payments only occur on business days. If a scheduled payment date is a non-business day the payment will be ignored
  /// </summary>
  [Newtonsoft.Json.JsonProperty("nonBusinessDayTreatment", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
  public BankingScheduledPaymentRecurrenceLastWeekdayNonBusinessDayTreatment? NonBusinessDayTreatment { get; set; } = PurpleBank.BankingScheduledPaymentRecurrenceLastWeekdayNonBusinessDayTreatment.ON;

  private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

  [Newtonsoft.Json.JsonExtensionData]
  public System.Collections.Generic.IDictionary<string, object> AdditionalProperties {
   get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
   set { _additionalProperties = value; }
  }

 }

 /// <summary>
 /// Indicates that the schedule of payments is defined according to an external event that cannot be predetermined. Mandatory if recurrenceUType is set to eventBased
 /// </summary>
 [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public partial class BankingScheduledPaymentRecurrenceEventBased {
  /// <summary>
  /// Description of the event and conditions that will result in the payment. Expected to be formatted for display to a customer
  /// </summary>
  [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
  public string Description { get; set; } = default!;

  private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

  [Newtonsoft.Json.JsonExtensionData]
  public System.Collections.Generic.IDictionary<string, object> AdditionalProperties {
   get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
   set { _additionalProperties = value; }
  }

 }

 [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public partial class CommonPhysicalAddress {
  /// <summary>
  /// The type of address object present
  /// </summary>
  [Newtonsoft.Json.JsonProperty("addressUType", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
  [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
  public CommonPhysicalAddressAddressUType AddressUType { get; set; } = default!;

  [Newtonsoft.Json.JsonProperty("simple", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public CommonSimpleAddress? Simple { get; set; } = default!;

  [Newtonsoft.Json.JsonProperty("paf", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public CommonPAFAddress? Paf { get; set; } = default!;

  private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

  [Newtonsoft.Json.JsonExtensionData]
  public System.Collections.Generic.IDictionary<string, object> AdditionalProperties {
   get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
   set { _additionalProperties = value; }
  }

 }

 [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public partial class CommonSimpleAddress {
  /// <summary>
  /// Name of the individual or business formatted for inclusion in an address used for physical mail
  /// </summary>
  [Newtonsoft.Json.JsonProperty("mailingName", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? MailingName { get; set; } = default!;

  /// <summary>
  /// First line of the standard address object
  /// </summary>
  [Newtonsoft.Json.JsonProperty("addressLine1", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
  public string AddressLine1 { get; set; } = default!;

  /// <summary>
  /// Second line of the standard address object
  /// </summary>
  [Newtonsoft.Json.JsonProperty("addressLine2", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? AddressLine2 { get; set; } = default!;

  /// <summary>
  /// Third line of the standard address object
  /// </summary>
  [Newtonsoft.Json.JsonProperty("addressLine3", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? AddressLine3 { get; set; } = default!;

  /// <summary>
  /// Mandatory for Australian addresses
  /// </summary>
  [Newtonsoft.Json.JsonProperty("postcode", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? Postcode { get; set; } = default!;

  /// <summary>
  /// Name of the city or locality
  /// </summary>
  [Newtonsoft.Json.JsonProperty("city", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
  public string City { get; set; } = default!;

  /// <summary>
  /// Free text if the country is not Australia. If country is Australia then must be one of the values defined by the [State Type Abbreviation](https://auspost.com.au/content/dam/auspost_corp/media/documents/australia-post-data-guide.pdf) in the PAF file format. NSW, QLD, VIC, NT, WA, SA, TAS, ACT, AAT
  /// </summary>
  [Newtonsoft.Json.JsonProperty("state", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
  public string State { get; set; } = default!;

  /// <summary>
  /// A valid [ISO 3166 Alpha-3](https://www.iso.org/iso-3166-country-codes.html) country code. Australia (AUS) is assumed if country is not present.
  /// </summary>
  [Newtonsoft.Json.JsonProperty("country", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? Country { get; set; } = "AUS";

  private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

  [Newtonsoft.Json.JsonExtensionData]
  public System.Collections.Generic.IDictionary<string, object> AdditionalProperties {
   get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
   set { _additionalProperties = value; }
  }

 }

 /// <summary>
 /// Australian address formatted according to the file format defined by the [PAF file format](https://auspost.com.au/content/dam/auspost_corp/media/documents/australia-post-data-guide.pdf)
 /// </summary>
 [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public partial class CommonPAFAddress {
  /// <summary>
  /// Unique identifier for an address as defined by Australia Post.  Also known as Delivery Point Identifier
  /// </summary>
  [Newtonsoft.Json.JsonProperty("dpid", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? Dpid { get; set; } = default!;

  /// <summary>
  /// Thoroughfare number for a property (first number in a property ranged address)
  /// </summary>
  [Newtonsoft.Json.JsonProperty("thoroughfareNumber1", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public int? ThoroughfareNumber1 { get; set; } = default!;

  /// <summary>
  /// Suffix for the thoroughfare number. Only relevant is thoroughfareNumber1 is populated
  /// </summary>
  [Newtonsoft.Json.JsonProperty("thoroughfareNumber1Suffix", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? ThoroughfareNumber1Suffix { get; set; } = default!;

  /// <summary>
  /// Second thoroughfare number (only used if the property has a ranged address eg 23-25)
  /// </summary>
  [Newtonsoft.Json.JsonProperty("thoroughfareNumber2", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public int? ThoroughfareNumber2 { get; set; } = default!;

  /// <summary>
  /// Suffix for the second thoroughfare number. Only relevant is thoroughfareNumber2 is populated
  /// </summary>
  [Newtonsoft.Json.JsonProperty("thoroughfareNumber2Suffix", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? ThoroughfareNumber2Suffix { get; set; } = default!;

  /// <summary>
  /// Type of flat or unit for the address
  /// </summary>
  [Newtonsoft.Json.JsonProperty("flatUnitType", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? FlatUnitType { get; set; } = default!;

  /// <summary>
  /// Unit number (including suffix, if applicable)
  /// </summary>
  [Newtonsoft.Json.JsonProperty("flatUnitNumber", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? FlatUnitNumber { get; set; } = default!;

  /// <summary>
  /// Type of floor or level for the address
  /// </summary>
  [Newtonsoft.Json.JsonProperty("floorLevelType", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? FloorLevelType { get; set; } = default!;

  /// <summary>
  /// Floor or level number (including alpha characters)
  /// </summary>
  [Newtonsoft.Json.JsonProperty("floorLevelNumber", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? FloorLevelNumber { get; set; } = default!;

  /// <summary>
  /// Allotment number for the address
  /// </summary>
  [Newtonsoft.Json.JsonProperty("lotNumber", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? LotNumber { get; set; } = default!;

  /// <summary>
  /// Building/Property name 1
  /// </summary>
  [Newtonsoft.Json.JsonProperty("buildingName1", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? BuildingName1 { get; set; } = default!;

  /// <summary>
  /// Building/Property name 2
  /// </summary>
  [Newtonsoft.Json.JsonProperty("buildingName2", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? BuildingName2 { get; set; } = default!;

  /// <summary>
  /// The name of the street
  /// </summary>
  [Newtonsoft.Json.JsonProperty("streetName", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? StreetName { get; set; } = default!;

  /// <summary>
  /// The street type. Valid enumeration defined by Australia Post PAF code file
  /// </summary>
  [Newtonsoft.Json.JsonProperty("streetType", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? StreetType { get; set; } = default!;

  /// <summary>
  /// The street type suffix. Valid enumeration defined by Australia Post PAF code file
  /// </summary>
  [Newtonsoft.Json.JsonProperty("streetSuffix", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? StreetSuffix { get; set; } = default!;

  /// <summary>
  /// Postal delivery type. (eg. PO BOX). Valid enumeration defined by Australia Post PAF code file
  /// </summary>
  [Newtonsoft.Json.JsonProperty("postalDeliveryType", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? PostalDeliveryType { get; set; } = default!;

  /// <summary>
  /// Postal delivery number if the address is a postal delivery type
  /// </summary>
  [Newtonsoft.Json.JsonProperty("postalDeliveryNumber", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public int? PostalDeliveryNumber { get; set; } = default!;

  /// <summary>
  /// Postal delivery number prefix related to the postal delivery number
  /// </summary>
  [Newtonsoft.Json.JsonProperty("postalDeliveryNumberPrefix", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? PostalDeliveryNumberPrefix { get; set; } = default!;

  /// <summary>
  /// Postal delivery number suffix related to the postal delivery number
  /// </summary>
  [Newtonsoft.Json.JsonProperty("postalDeliveryNumberSuffix", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? PostalDeliveryNumberSuffix { get; set; } = default!;

  /// <summary>
  /// Full name of locality
  /// </summary>
  [Newtonsoft.Json.JsonProperty("localityName", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
  public string LocalityName { get; set; } = default!;

  /// <summary>
  /// Postcode for the locality
  /// </summary>
  [Newtonsoft.Json.JsonProperty("postcode", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
  public string Postcode { get; set; } = default!;

  /// <summary>
  /// State in which the address belongs. Valid enumeration defined by Australia Post PAF code file [State Type Abbreviation](https://auspost.com.au/content/dam/auspost_corp/media/documents/australia-post-data-guide.pdf). NSW, QLD, VIC, NT, WA, SA, TAS, ACT, AAT
  /// </summary>
  [Newtonsoft.Json.JsonProperty("state", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
  public string State { get; set; } = default!;

  private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

  [Newtonsoft.Json.JsonExtensionData]
  public System.Collections.Generic.IDictionary<string, object> AdditionalProperties {
   get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
   set { _additionalProperties = value; }
  }

 }

 [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public partial class Links {
  /// <summary>
  /// Fully qualified link that generated the current response document
  /// </summary>
  [Newtonsoft.Json.JsonProperty("self", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
  public string Self { get; set; } = default!;

  private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

  [Newtonsoft.Json.JsonExtensionData]
  public System.Collections.Generic.IDictionary<string, object> AdditionalProperties {
   get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
   set { _additionalProperties = value; }
  }

 }

 [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public partial class Meta {

  private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

  [Newtonsoft.Json.JsonExtensionData]
  public System.Collections.Generic.IDictionary<string, object> AdditionalProperties {
   get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
   set { _additionalProperties = value; }
  }

 }

 [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public partial class LinksPaginated {
  /// <summary>
  /// Fully qualified link that generated the current response document
  /// </summary>
  [Newtonsoft.Json.JsonProperty("self", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
  public string Self { get; set; } = default!;

  /// <summary>
  /// URI to the first page of this set. Mandatory if this response is not the first page
  /// </summary>
  [Newtonsoft.Json.JsonProperty("first", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? First { get; set; } = default!;

  /// <summary>
  /// URI to the previous page of this set. Mandatory if this response is not the first page
  /// </summary>
  [Newtonsoft.Json.JsonProperty("prev", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? Prev { get; set; } = default!;

  /// <summary>
  /// URI to the next page of this set. Mandatory if this response is not the last page
  /// </summary>
  [Newtonsoft.Json.JsonProperty("next", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? Next { get; set; } = default!;

  /// <summary>
  /// URI to the last page of this set. Mandatory if this response is not the last page
  /// </summary>
  [Newtonsoft.Json.JsonProperty("last", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? Last { get; set; } = default!;

  private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

  [Newtonsoft.Json.JsonExtensionData]
  public System.Collections.Generic.IDictionary<string, object> AdditionalProperties {
   get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
   set { _additionalProperties = value; }
  }

 }

 [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public partial class MetaPaginated {
  /// <summary>
  /// The total number of records in the full set. See [pagination](#pagination).
  /// </summary>
  [Newtonsoft.Json.JsonProperty("totalRecords", Required = Newtonsoft.Json.Required.Always)]
  public int TotalRecords { get; set; } = default!;

  /// <summary>
  /// The total number of pages in the full set. See [pagination](#pagination).
  /// </summary>
  [Newtonsoft.Json.JsonProperty("totalPages", Required = Newtonsoft.Json.Required.Always)]
  public int TotalPages { get; set; } = default!;

  private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

  [Newtonsoft.Json.JsonExtensionData]
  public System.Collections.Generic.IDictionary<string, object> AdditionalProperties {
   get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
   set { _additionalProperties = value; }
  }

 }

 /// <summary>
 /// Additional data for customised error codes
 /// </summary>
 [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public partial class MetaError {
  /// <summary>
  /// The CDR error code URN which the application-specific error code extends. Mandatory if the error `code` is an application-specific error rather than a standardised error code.
  /// </summary>
  [Newtonsoft.Json.JsonProperty("urn", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? Urn { get; set; } = default!;

  private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

  [Newtonsoft.Json.JsonExtensionData]
  public System.Collections.Generic.IDictionary<string, object> AdditionalProperties {
   get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
   set { _additionalProperties = value; }
  }

 }

 [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public partial class ResponseErrorListV2 {
  [Newtonsoft.Json.JsonProperty("errors", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required]
  public System.Collections.Generic.List<ResponseErrorListV2_errors> Errors { get; set; } = new System.Collections.Generic.List<ResponseErrorListV2_errors>();

  private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

  [Newtonsoft.Json.JsonExtensionData]
  public System.Collections.Generic.IDictionary<string, object> AdditionalProperties {
   get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
   set { _additionalProperties = value; }
  }

 }

 /// <summary>
 /// The category to which a product or account belongs. See [here](#product-categories) for more details
 /// </summary>
 [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public enum BankingProductCategory {

  [System.Runtime.Serialization.EnumMember(Value = @"BUSINESS_LOANS")]
  BUSINESS_LOANS = 0,

  [System.Runtime.Serialization.EnumMember(Value = @"CRED_AND_CHRG_CARDS")]
  CRED_AND_CHRG_CARDS = 1,

  [System.Runtime.Serialization.EnumMember(Value = @"LEASES")]
  LEASES = 2,

  [System.Runtime.Serialization.EnumMember(Value = @"MARGIN_LOANS")]
  MARGIN_LOANS = 3,

  [System.Runtime.Serialization.EnumMember(Value = @"OVERDRAFTS")]
  OVERDRAFTS = 4,

  [System.Runtime.Serialization.EnumMember(Value = @"PERS_LOANS")]
  PERS_LOANS = 5,

  [System.Runtime.Serialization.EnumMember(Value = @"REGULATED_TRUST_ACCOUNTS")]
  REGULATED_TRUST_ACCOUNTS = 6,

  [System.Runtime.Serialization.EnumMember(Value = @"RESIDENTIAL_MORTGAGES")]
  RESIDENTIAL_MORTGAGES = 7,

  [System.Runtime.Serialization.EnumMember(Value = @"TERM_DEPOSITS")]
  TERM_DEPOSITS = 8,

  [System.Runtime.Serialization.EnumMember(Value = @"TRADE_FINANCE")]
  TRADE_FINANCE = 9,

  [System.Runtime.Serialization.EnumMember(Value = @"TRANS_AND_SAVINGS_ACCOUNTS")]
  TRANS_AND_SAVINGS_ACCOUNTS = 10,

  [System.Runtime.Serialization.EnumMember(Value = @"TRAVEL_CARDS")]
  TRAVEL_CARDS = 11,

 }

 [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public partial class RequestAccountIds_data {
  [Newtonsoft.Json.JsonProperty("accountIds", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required]
  public System.Collections.Generic.List<string> AccountIds { get; set; } = new System.Collections.Generic.List<string>();

  private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

  [Newtonsoft.Json.JsonExtensionData]
  public System.Collections.Generic.IDictionary<string, object> AdditionalProperties {
   get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
   set { _additionalProperties = value; }
  }

 }

 [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public partial class ResponseBankingProductListV2_data {
  /// <summary>
  /// The list of products returned.  If the filter results in an empty set then this array may have no records
  /// </summary>
  [Newtonsoft.Json.JsonProperty("products", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required]
  public System.Collections.Generic.List<BankingProductV4> Products { get; set; } = new System.Collections.Generic.List<BankingProductV4>();

  private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

  [Newtonsoft.Json.JsonExtensionData]
  public System.Collections.Generic.IDictionary<string, object> AdditionalProperties {
   get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
   set { _additionalProperties = value; }
  }

 }

 [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public partial class BankingProductV4_cardArt {
  /// <summary>
  /// Display label for the specific image
  /// </summary>
  [Newtonsoft.Json.JsonProperty("title", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? Title { get; set; } = default!;

  /// <summary>
  /// URI reference to a PNG, JPG or GIF image with proportions defined by ISO 7810 ID-1 and width no greater than 512 pixels. The URI reference may be a link or url-encoded data URI according to **[[RFC2397]](#nref-RFC2397)**
  /// </summary>
  [Newtonsoft.Json.JsonProperty("imageUri", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
  public string ImageUri { get; set; } = default!;

  private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

  [Newtonsoft.Json.JsonExtensionData]
  public System.Collections.Generic.IDictionary<string, object> AdditionalProperties {
   get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
   set { _additionalProperties = value; }
  }

 }

 [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public partial class BankingProductDetailV4_allOf {
  /// <summary>
  /// An array of bundles that this product participates in.  Each bundle is described by free form information but also by a list of product IDs of the other products that are included in the bundle.  It is assumed that the current product is included in the bundle also
  /// </summary>
  [Newtonsoft.Json.JsonProperty("bundles", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public System.Collections.Generic.List<BankingProductBundle>? Bundles { get; set; } = default!;

  /// <summary>
  /// Array of features available for the product
  /// </summary>
  [Newtonsoft.Json.JsonProperty("features", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public System.Collections.Generic.List<BankingProductFeatureV2>? Features { get; set; } = default!;

  /// <summary>
  /// Constraints on the application for or operation of the product such as minimum balances or limit thresholds
  /// </summary>
  [Newtonsoft.Json.JsonProperty("constraints", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public System.Collections.Generic.List<BankingProductConstraint>? Constraints { get; set; } = default!;

  /// <summary>
  /// Eligibility criteria for the product
  /// </summary>
  [Newtonsoft.Json.JsonProperty("eligibility", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public System.Collections.Generic.List<BankingProductEligibility>? Eligibility { get; set; } = default!;

  /// <summary>
  /// Fees applicable for the product
  /// </summary>
  [Newtonsoft.Json.JsonProperty("fees", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public System.Collections.Generic.List<BankingProductFee>? Fees { get; set; } = default!;

  /// <summary>
  /// Interest rates available for deposits
  /// </summary>
  [Newtonsoft.Json.JsonProperty("depositRates", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public System.Collections.Generic.List<BankingProductDepositRate>? DepositRates { get; set; } = default!;

  /// <summary>
  /// Interest rates charged against lending balances
  /// </summary>
  [Newtonsoft.Json.JsonProperty("lendingRates", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public System.Collections.Generic.List<BankingProductLendingRateV2>? LendingRates { get; set; } = default!;

  private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

  [Newtonsoft.Json.JsonExtensionData]
  public System.Collections.Generic.IDictionary<string, object> AdditionalProperties {
   get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
   set { _additionalProperties = value; }
  }

 }

 [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public partial class ResponseBankingAccountListV2_data {
  /// <summary>
  /// The list of accounts returned. If the filter results in an empty set then this array may have no records
  /// </summary>
  [Newtonsoft.Json.JsonProperty("accounts", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required]
  public System.Collections.Generic.List<BankingAccountV2> Accounts { get; set; } = new System.Collections.Generic.List<BankingAccountV2>();

  private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

  [Newtonsoft.Json.JsonExtensionData]
  public System.Collections.Generic.IDictionary<string, object> AdditionalProperties {
   get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
   set { _additionalProperties = value; }
  }

 }

 [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public partial class BankingAccountDetailV3_allOf {
  /// <summary>
  /// The unmasked BSB for the account. Is expected to be formatted as digits only with leading zeros included and no punctuation or spaces
  /// </summary>
  [Newtonsoft.Json.JsonProperty("bsb", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? Bsb { get; set; } = default!;

  /// <summary>
  /// The unmasked account number for the account. Should not be supplied if the account number is a PAN requiring PCI compliance. Is expected to be formatted as digits only with leading zeros included and no punctuation or spaces
  /// </summary>
  [Newtonsoft.Json.JsonProperty("accountNumber", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? AccountNumber { get; set; } = default!;

  /// <summary>
  /// Optional field to indicate if this account is part of a bundle that is providing additional benefit for to the customer
  /// </summary>
  [Newtonsoft.Json.JsonProperty("bundleName", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? BundleName { get; set; } = default!;

  /// <summary>
  /// The type of structure to present account specific fields.
  /// </summary>
  [Newtonsoft.Json.JsonProperty("specificAccountUType", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
  public BankingAccountDetailV3SpecificAccountUType? SpecificAccountUType { get; set; } = default!;

  [Newtonsoft.Json.JsonProperty("termDeposit", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public System.Collections.Generic.List<BankingTermDepositAccount>? TermDeposit { get; set; } = default!;

  [Newtonsoft.Json.JsonProperty("creditCard", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public BankingCreditCardAccount? CreditCard { get; set; } = default!;

  [Newtonsoft.Json.JsonProperty("loan", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public BankingLoanAccountV2? Loan { get; set; } = default!;

  /// <summary>
  /// current rate to calculate interest earned being applied to deposit balances as it stands at the time of the API call
  /// </summary>
  [Newtonsoft.Json.JsonProperty("depositRate", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? DepositRate { get; set; } = default!;

  /// <summary>
  /// The current rate to calculate interest payable being applied to lending balances as it stands at the time of the API call
  /// </summary>
  [Newtonsoft.Json.JsonProperty("lendingRate", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? LendingRate { get; set; } = default!;

  /// <summary>
  /// Fully described deposit rates for this account based on the equivalent structure in Product Reference
  /// </summary>
  [Newtonsoft.Json.JsonProperty("depositRates", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public System.Collections.Generic.List<BankingProductDepositRate>? DepositRates { get; set; } = default!;

  /// <summary>
  /// Fully described deposit rates for this account based on the equivalent structure in Product Reference
  /// </summary>
  [Newtonsoft.Json.JsonProperty("lendingRates", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public System.Collections.Generic.List<BankingProductLendingRateV2>? LendingRates { get; set; } = default!;

  /// <summary>
  /// Array of features of the account based on the equivalent structure in Product Reference with the following additional field
  /// </summary>
  [Newtonsoft.Json.JsonProperty("features", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public System.Collections.Generic.List<Features>? Features { get; set; } = default!;

  /// <summary>
  /// Fees and charges applicable to the account based on the equivalent structure in Product Reference
  /// </summary>
  [Newtonsoft.Json.JsonProperty("fees", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public System.Collections.Generic.List<BankingProductFee>? Fees { get; set; } = default!;

  /// <summary>
  /// The addresses for the account to be used for correspondence
  /// </summary>
  [Newtonsoft.Json.JsonProperty("addresses", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public System.Collections.Generic.List<CommonPhysicalAddress>? Addresses { get; set; } = default!;

  private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

  [Newtonsoft.Json.JsonExtensionData]
  public System.Collections.Generic.IDictionary<string, object> AdditionalProperties {
   get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
   set { _additionalProperties = value; }
  }

 }

 [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public partial class ResponseBankingTransactionList_data {
  [Newtonsoft.Json.JsonProperty("transactions", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required]
  public System.Collections.Generic.List<BankingTransaction> Transactions { get; set; } = new System.Collections.Generic.List<BankingTransaction>();

  private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

  [Newtonsoft.Json.JsonExtensionData]
  public System.Collections.Generic.IDictionary<string, object> AdditionalProperties {
   get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
   set { _additionalProperties = value; }
  }

 }

 [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public partial class BankingTransactionDetail_allOf_extendedData_x2p101Payload {
  /// <summary>
  /// An extended string description. Required if the extensionUType field is `x2p101Payload`
  /// </summary>
  [Newtonsoft.Json.JsonProperty("extendedDescription", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? ExtendedDescription { get; set; } = default!;

  /// <summary>
  /// An end to end ID for the payment created at initiation
  /// </summary>
  [Newtonsoft.Json.JsonProperty("endToEndId", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? EndToEndId { get; set; } = default!;

  /// <summary>
  /// Purpose of the payment.  Format is defined by NPP standards for the x2p1.01 overlay service
  /// </summary>
  [Newtonsoft.Json.JsonProperty("purposeCode", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? PurposeCode { get; set; } = default!;

  private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

  [Newtonsoft.Json.JsonExtensionData]
  public System.Collections.Generic.IDictionary<string, object> AdditionalProperties {
   get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
   set { _additionalProperties = value; }
  }

 }

 [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public partial class BankingTransactionDetail_allOf_extendedData {
  /// <summary>
  /// Label of the originating payer. Mandatory for inbound payment
  /// </summary>
  [Newtonsoft.Json.JsonProperty("payer", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? Payer { get; set; } = default!;

  /// <summary>
  /// Label of the target PayID.  Mandatory for an outbound payment. The name assigned to the BSB/Account Number or PayID (by the owner of the PayID)
  /// </summary>
  [Newtonsoft.Json.JsonProperty("payee", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? Payee { get; set; } = default!;

  /// <summary>
  /// Optional extended data specific to transactions originated via NPP
  /// </summary>
  [Newtonsoft.Json.JsonProperty("extensionUType", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
  public BankingTransactionDetail_allOf_extendedDataExtensionUType? ExtensionUType { get; set; } = default!;

  [Newtonsoft.Json.JsonProperty("x2p101Payload", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public BankingTransactionDetail_allOf_extendedData_x2p101Payload? X2p101Payload { get; set; } = default!;

  /// <summary>
  /// Identifier of the applicable overlay service. Valid values are: X2P1.01
  /// </summary>
  [Newtonsoft.Json.JsonProperty("service", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
  [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
  public BankingTransactionDetail_allOf_extendedDataService Service { get; set; } = default!;

  private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

  [Newtonsoft.Json.JsonExtensionData]
  public System.Collections.Generic.IDictionary<string, object> AdditionalProperties {
   get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
   set { _additionalProperties = value; }
  }

 }

 [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public partial class BankingTransactionDetail_allOf {
  [Newtonsoft.Json.JsonProperty("extendedData", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required]
  public BankingTransactionDetail_allOf_extendedData ExtendedData { get; set; } = new BankingTransactionDetail_allOf_extendedData();

  private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

  [Newtonsoft.Json.JsonExtensionData]
  public System.Collections.Generic.IDictionary<string, object> AdditionalProperties {
   get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
   set { _additionalProperties = value; }
  }

 }

 [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public partial class ResponseBankingAccountsBalanceList_data {
  /// <summary>
  /// The list of balances returned
  /// </summary>
  [Newtonsoft.Json.JsonProperty("balances", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required]
  public System.Collections.Generic.List<BankingBalance> Balances { get; set; } = new System.Collections.Generic.List<BankingBalance>();

  private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

  [Newtonsoft.Json.JsonExtensionData]
  public System.Collections.Generic.IDictionary<string, object> AdditionalProperties {
   get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
   set { _additionalProperties = value; }
  }

 }

 [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public partial class ResponseBankingPayeeListV2_data {
  /// <summary>
  /// The list of payees returned
  /// </summary>
  [Newtonsoft.Json.JsonProperty("payees", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required]
  public System.Collections.Generic.List<BankingPayeeV2> Payees { get; set; } = new System.Collections.Generic.List<BankingPayeeV2>();

  private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

  [Newtonsoft.Json.JsonExtensionData]
  public System.Collections.Generic.IDictionary<string, object> AdditionalProperties {
   get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
   set { _additionalProperties = value; }
  }

 }

 [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public partial class BankingPayeeDetailV2_allOf {
  /// <summary>
  /// Type of object included that describes the payee in detail
  /// </summary>
  [Newtonsoft.Json.JsonProperty("payeeUType", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
  [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
  public BankingPayeeDetailV2PayeeUType PayeeUType { get; set; } = default!;

  [Newtonsoft.Json.JsonProperty("biller", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public BankingBillerPayee? Biller { get; set; } = default!;

  [Newtonsoft.Json.JsonProperty("domestic", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public BankingDomesticPayee? Domestic { get; set; } = default!;

  [Newtonsoft.Json.JsonProperty("digitalWallet", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public BankingDigitalWalletPayee? DigitalWallet { get; set; } = default!;

  [Newtonsoft.Json.JsonProperty("international", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public BankingInternationalPayee? International { get; set; } = default!;

  private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

  [Newtonsoft.Json.JsonExtensionData]
  public System.Collections.Generic.IDictionary<string, object> AdditionalProperties {
   get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
   set { _additionalProperties = value; }
  }

 }

 [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public partial class BankingInternationalPayee_beneficiaryDetails {
  /// <summary>
  /// Name of the beneficiary
  /// </summary>
  [Newtonsoft.Json.JsonProperty("name", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? Name { get; set; } = default!;

  /// <summary>
  /// Country where the beneficiary resides. A valid [ISO 3166 Alpha-3](https://www.iso.org/iso-3166-country-codes.html) country code
  /// </summary>
  [Newtonsoft.Json.JsonProperty("country", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
  public string Country { get; set; } = default!;

  /// <summary>
  /// Response message for the payment
  /// </summary>
  [Newtonsoft.Json.JsonProperty("message", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? Message { get; set; } = default!;

  private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

  [Newtonsoft.Json.JsonExtensionData]
  public System.Collections.Generic.IDictionary<string, object> AdditionalProperties {
   get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
   set { _additionalProperties = value; }
  }

 }

 [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public partial class BankingInternationalPayee_bankDetails_bankAddress {
  /// <summary>
  /// Name of the recipient Bank
  /// </summary>
  [Newtonsoft.Json.JsonProperty("name", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
  public string Name { get; set; } = default!;

  /// <summary>
  /// Address of the recipient Bank
  /// </summary>
  [Newtonsoft.Json.JsonProperty("address", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
  public string Address { get; set; } = default!;

  private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

  [Newtonsoft.Json.JsonExtensionData]
  public System.Collections.Generic.IDictionary<string, object> AdditionalProperties {
   get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
   set { _additionalProperties = value; }
  }

 }

 [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public partial class BankingInternationalPayee_bankDetails {
  /// <summary>
  /// Country of the recipient institution. A valid [ISO 3166 Alpha-3](https://www.iso.org/iso-3166-country-codes.html) country code
  /// </summary>
  [Newtonsoft.Json.JsonProperty("country", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
  public string Country { get; set; } = default!;

  /// <summary>
  /// Account Targeted for payment
  /// </summary>
  [Newtonsoft.Json.JsonProperty("accountNumber", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
  public string AccountNumber { get; set; } = default!;

  [Newtonsoft.Json.JsonProperty("bankAddress", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public BankingInternationalPayee_bankDetails_bankAddress? BankAddress { get; set; } = default!;

  /// <summary>
  /// Swift bank code.  Aligns with standard [ISO 9362](https://www.iso.org/standard/60390.html)
  /// </summary>
  [Newtonsoft.Json.JsonProperty("beneficiaryBankBIC", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? BeneficiaryBankBIC { get; set; } = default!;

  /// <summary>
  /// Number for Fedwire payment (Federal Reserve Wire Network)
  /// </summary>
  [Newtonsoft.Json.JsonProperty("fedWireNumber", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? FedWireNumber { get; set; } = default!;

  /// <summary>
  /// Sort code used for account identification in some jurisdictions
  /// </summary>
  [Newtonsoft.Json.JsonProperty("sortCode", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? SortCode { get; set; } = default!;

  /// <summary>
  /// Number for the Clearing House Interbank Payments System
  /// </summary>
  [Newtonsoft.Json.JsonProperty("chipNumber", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? ChipNumber { get; set; } = default!;

  /// <summary>
  /// International bank routing number
  /// </summary>
  [Newtonsoft.Json.JsonProperty("routingNumber", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? RoutingNumber { get; set; } = default!;

  /// <summary>
  /// The legal entity identifier (LEI) for the beneficiary.  Aligns with [ISO 17442](https://www.iso.org/standard/59771.html)
  /// </summary>
  [Newtonsoft.Json.JsonProperty("legalEntityIdentifier", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public string? LegalEntityIdentifier { get; set; } = default!;

  private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

  [Newtonsoft.Json.JsonExtensionData]
  public System.Collections.Generic.IDictionary<string, object> AdditionalProperties {
   get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
   set { _additionalProperties = value; }
  }

 }

 [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public partial class ResponseBankingDirectDebitAuthorisationList_data {
  /// <summary>
  /// The list of authorisations returned
  /// </summary>
  [Newtonsoft.Json.JsonProperty("directDebitAuthorisations", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required]
  public System.Collections.Generic.List<BankingDirectDebit> DirectDebitAuthorisations { get; set; } = new System.Collections.Generic.List<BankingDirectDebit>();

  private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

  [Newtonsoft.Json.JsonExtensionData]
  public System.Collections.Generic.IDictionary<string, object> AdditionalProperties {
   get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
   set { _additionalProperties = value; }
  }

 }

 [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public partial class ResponseBankingScheduledPaymentsList_data {
  /// <summary>
  /// The list of scheduled payments to return
  /// </summary>
  [Newtonsoft.Json.JsonProperty("scheduledPayments", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required]
  public System.Collections.Generic.List<BankingScheduledPayment> ScheduledPayments { get; set; } = new System.Collections.Generic.List<BankingScheduledPayment>();

  private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

  [Newtonsoft.Json.JsonExtensionData]
  public System.Collections.Generic.IDictionary<string, object> AdditionalProperties {
   get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
   set { _additionalProperties = value; }
  }

 }

 [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public partial class ResponseErrorListV2_errors {
  /// <summary>
  /// The code of the error encountered. Where the error is specific to the respondent, an application-specific error code, expressed as a string value. If the error is application-specific, the URN code that the specific error extends must be provided in the meta object. Otherwise, the value is the error code URN.
  /// </summary>
  [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
  public string Code { get; set; } = default!;

  /// <summary>
  /// A short, human-readable summary of the problem that MUST NOT change from occurrence to occurrence of the problem represented by the error code.
  /// </summary>
  [Newtonsoft.Json.JsonProperty("title", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
  public string Title { get; set; } = default!;

  /// <summary>
  /// A human-readable explanation specific to this occurrence of the problem.
  /// </summary>
  [Newtonsoft.Json.JsonProperty("detail", Required = Newtonsoft.Json.Required.Always)]
  [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
  public string Detail { get; set; } = default!;

  [Newtonsoft.Json.JsonProperty("meta", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public MetaError? Meta { get; set; } = default!;

  private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

  [Newtonsoft.Json.JsonExtensionData]
  public System.Collections.Generic.IDictionary<string, object> AdditionalProperties {
   get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
   set { _additionalProperties = value; }
  }

 }

 [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public enum ProductCategory {

  [System.Runtime.Serialization.EnumMember(Value = @"BUSINESS_LOANS")]
  BUSINESS_LOANS = 0,

  [System.Runtime.Serialization.EnumMember(Value = @"CRED_AND_CHRG_CARDS")]
  CRED_AND_CHRG_CARDS = 1,

  [System.Runtime.Serialization.EnumMember(Value = @"LEASES")]
  LEASES = 2,

  [System.Runtime.Serialization.EnumMember(Value = @"MARGIN_LOANS")]
  MARGIN_LOANS = 3,

  [System.Runtime.Serialization.EnumMember(Value = @"OVERDRAFTS")]
  OVERDRAFTS = 4,

  [System.Runtime.Serialization.EnumMember(Value = @"PERS_LOANS")]
  PERS_LOANS = 5,

  [System.Runtime.Serialization.EnumMember(Value = @"REGULATED_TRUST_ACCOUNTS")]
  REGULATED_TRUST_ACCOUNTS = 6,

  [System.Runtime.Serialization.EnumMember(Value = @"RESIDENTIAL_MORTGAGES")]
  RESIDENTIAL_MORTGAGES = 7,

  [System.Runtime.Serialization.EnumMember(Value = @"TERM_DEPOSITS")]
  TERM_DEPOSITS = 8,

  [System.Runtime.Serialization.EnumMember(Value = @"TRADE_FINANCE")]
  TRADE_FINANCE = 9,

  [System.Runtime.Serialization.EnumMember(Value = @"TRANS_AND_SAVINGS_ACCOUNTS")]
  TRANS_AND_SAVINGS_ACCOUNTS = 10,

  [System.Runtime.Serialization.EnumMember(Value = @"TRAVEL_CARDS")]
  TRAVEL_CARDS = 11,

 }

 [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public enum OpenStatus {

  [System.Runtime.Serialization.EnumMember(Value = @"ALL")]
  ALL = 0,

  [System.Runtime.Serialization.EnumMember(Value = @"CLOSED")]
  CLOSED = 1,

  [System.Runtime.Serialization.EnumMember(Value = @"OPEN")]
  OPEN = 2,

 }

 [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public enum ProductCategory2 {

  [System.Runtime.Serialization.EnumMember(Value = @"BUSINESS_LOANS")]
  BUSINESS_LOANS = 0,

  [System.Runtime.Serialization.EnumMember(Value = @"CRED_AND_CHRG_CARDS")]
  CRED_AND_CHRG_CARDS = 1,

  [System.Runtime.Serialization.EnumMember(Value = @"LEASES")]
  LEASES = 2,

  [System.Runtime.Serialization.EnumMember(Value = @"MARGIN_LOANS")]
  MARGIN_LOANS = 3,

  [System.Runtime.Serialization.EnumMember(Value = @"OVERDRAFTS")]
  OVERDRAFTS = 4,

  [System.Runtime.Serialization.EnumMember(Value = @"PERS_LOANS")]
  PERS_LOANS = 5,

  [System.Runtime.Serialization.EnumMember(Value = @"REGULATED_TRUST_ACCOUNTS")]
  REGULATED_TRUST_ACCOUNTS = 6,

  [System.Runtime.Serialization.EnumMember(Value = @"RESIDENTIAL_MORTGAGES")]
  RESIDENTIAL_MORTGAGES = 7,

  [System.Runtime.Serialization.EnumMember(Value = @"TERM_DEPOSITS")]
  TERM_DEPOSITS = 8,

  [System.Runtime.Serialization.EnumMember(Value = @"TRADE_FINANCE")]
  TRADE_FINANCE = 9,

  [System.Runtime.Serialization.EnumMember(Value = @"TRANS_AND_SAVINGS_ACCOUNTS")]
  TRANS_AND_SAVINGS_ACCOUNTS = 10,

  [System.Runtime.Serialization.EnumMember(Value = @"TRAVEL_CARDS")]
  TRAVEL_CARDS = 11,

 }

 [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public enum OpenStatus2 {

  [System.Runtime.Serialization.EnumMember(Value = @"ALL")]
  ALL = 0,

  [System.Runtime.Serialization.EnumMember(Value = @"CLOSED")]
  CLOSED = 1,

  [System.Runtime.Serialization.EnumMember(Value = @"OPEN")]
  OPEN = 2,

 }

 [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public enum ProductCategory3 {

  [System.Runtime.Serialization.EnumMember(Value = @"BUSINESS_LOANS")]
  BUSINESS_LOANS = 0,

  [System.Runtime.Serialization.EnumMember(Value = @"CRED_AND_CHRG_CARDS")]
  CRED_AND_CHRG_CARDS = 1,

  [System.Runtime.Serialization.EnumMember(Value = @"LEASES")]
  LEASES = 2,

  [System.Runtime.Serialization.EnumMember(Value = @"MARGIN_LOANS")]
  MARGIN_LOANS = 3,

  [System.Runtime.Serialization.EnumMember(Value = @"OVERDRAFTS")]
  OVERDRAFTS = 4,

  [System.Runtime.Serialization.EnumMember(Value = @"PERS_LOANS")]
  PERS_LOANS = 5,

  [System.Runtime.Serialization.EnumMember(Value = @"REGULATED_TRUST_ACCOUNTS")]
  REGULATED_TRUST_ACCOUNTS = 6,

  [System.Runtime.Serialization.EnumMember(Value = @"RESIDENTIAL_MORTGAGES")]
  RESIDENTIAL_MORTGAGES = 7,

  [System.Runtime.Serialization.EnumMember(Value = @"TERM_DEPOSITS")]
  TERM_DEPOSITS = 8,

  [System.Runtime.Serialization.EnumMember(Value = @"TRADE_FINANCE")]
  TRADE_FINANCE = 9,

  [System.Runtime.Serialization.EnumMember(Value = @"TRANS_AND_SAVINGS_ACCOUNTS")]
  TRANS_AND_SAVINGS_ACCOUNTS = 10,

  [System.Runtime.Serialization.EnumMember(Value = @"TRAVEL_CARDS")]
  TRAVEL_CARDS = 11,

 }

 [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public enum OpenStatus3 {

  [System.Runtime.Serialization.EnumMember(Value = @"ALL")]
  ALL = 0,

  [System.Runtime.Serialization.EnumMember(Value = @"CLOSED")]
  CLOSED = 1,

  [System.Runtime.Serialization.EnumMember(Value = @"OPEN")]
  OPEN = 2,

 }

 [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public enum ProductCategory4 {

  [System.Runtime.Serialization.EnumMember(Value = @"BUSINESS_LOANS")]
  BUSINESS_LOANS = 0,

  [System.Runtime.Serialization.EnumMember(Value = @"CRED_AND_CHRG_CARDS")]
  CRED_AND_CHRG_CARDS = 1,

  [System.Runtime.Serialization.EnumMember(Value = @"LEASES")]
  LEASES = 2,

  [System.Runtime.Serialization.EnumMember(Value = @"MARGIN_LOANS")]
  MARGIN_LOANS = 3,

  [System.Runtime.Serialization.EnumMember(Value = @"OVERDRAFTS")]
  OVERDRAFTS = 4,

  [System.Runtime.Serialization.EnumMember(Value = @"PERS_LOANS")]
  PERS_LOANS = 5,

  [System.Runtime.Serialization.EnumMember(Value = @"REGULATED_TRUST_ACCOUNTS")]
  REGULATED_TRUST_ACCOUNTS = 6,

  [System.Runtime.Serialization.EnumMember(Value = @"RESIDENTIAL_MORTGAGES")]
  RESIDENTIAL_MORTGAGES = 7,

  [System.Runtime.Serialization.EnumMember(Value = @"TERM_DEPOSITS")]
  TERM_DEPOSITS = 8,

  [System.Runtime.Serialization.EnumMember(Value = @"TRADE_FINANCE")]
  TRADE_FINANCE = 9,

  [System.Runtime.Serialization.EnumMember(Value = @"TRANS_AND_SAVINGS_ACCOUNTS")]
  TRANS_AND_SAVINGS_ACCOUNTS = 10,

  [System.Runtime.Serialization.EnumMember(Value = @"TRAVEL_CARDS")]
  TRAVEL_CARDS = 11,

 }

 [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public enum OpenStatus4 {

  [System.Runtime.Serialization.EnumMember(Value = @"ALL")]
  ALL = 0,

  [System.Runtime.Serialization.EnumMember(Value = @"CLOSED")]
  CLOSED = 1,

  [System.Runtime.Serialization.EnumMember(Value = @"OPEN")]
  OPEN = 2,

 }

 [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public enum Type {

  [System.Runtime.Serialization.EnumMember(Value = @"ALL")]
  ALL = 0,

  [System.Runtime.Serialization.EnumMember(Value = @"BILLER")]
  BILLER = 1,

  [System.Runtime.Serialization.EnumMember(Value = @"DIGITAL_WALLET")]
  DIGITAL_WALLET = 2,

  [System.Runtime.Serialization.EnumMember(Value = @"DOMESTIC")]
  DOMESTIC = 3,

  [System.Runtime.Serialization.EnumMember(Value = @"INTERNATIONAL")]
  INTERNATIONAL = 4,

 }

 [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public enum Effective {

  [System.Runtime.Serialization.EnumMember(Value = @"ALL")]
  ALL = 0,

  [System.Runtime.Serialization.EnumMember(Value = @"CURRENT")]
  CURRENT = 1,

  [System.Runtime.Serialization.EnumMember(Value = @"FUTURE")]
  FUTURE = 2,

 }

 [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public enum ProductCategory5 {

  [System.Runtime.Serialization.EnumMember(Value = @"BUSINESS_LOANS")]
  BUSINESS_LOANS = 0,

  [System.Runtime.Serialization.EnumMember(Value = @"CRED_AND_CHRG_CARDS")]
  CRED_AND_CHRG_CARDS = 1,

  [System.Runtime.Serialization.EnumMember(Value = @"LEASES")]
  LEASES = 2,

  [System.Runtime.Serialization.EnumMember(Value = @"MARGIN_LOANS")]
  MARGIN_LOANS = 3,

  [System.Runtime.Serialization.EnumMember(Value = @"OVERDRAFTS")]
  OVERDRAFTS = 4,

  [System.Runtime.Serialization.EnumMember(Value = @"PERS_LOANS")]
  PERS_LOANS = 5,

  [System.Runtime.Serialization.EnumMember(Value = @"REGULATED_TRUST_ACCOUNTS")]
  REGULATED_TRUST_ACCOUNTS = 6,

  [System.Runtime.Serialization.EnumMember(Value = @"RESIDENTIAL_MORTGAGES")]
  RESIDENTIAL_MORTGAGES = 7,

  [System.Runtime.Serialization.EnumMember(Value = @"TERM_DEPOSITS")]
  TERM_DEPOSITS = 8,

  [System.Runtime.Serialization.EnumMember(Value = @"TRADE_FINANCE")]
  TRADE_FINANCE = 9,

  [System.Runtime.Serialization.EnumMember(Value = @"TRANS_AND_SAVINGS_ACCOUNTS")]
  TRANS_AND_SAVINGS_ACCOUNTS = 10,

  [System.Runtime.Serialization.EnumMember(Value = @"TRAVEL_CARDS")]
  TRAVEL_CARDS = 11,

 }

 [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public enum BankingProductFeatureV2FeatureType {

  [System.Runtime.Serialization.EnumMember(Value = @"ADDITIONAL_CARDS")]
  ADDITIONAL_CARDS = 0,

  [System.Runtime.Serialization.EnumMember(Value = @"BALANCE_TRANSFERS")]
  BALANCE_TRANSFERS = 1,

  [System.Runtime.Serialization.EnumMember(Value = @"BILL_PAYMENT")]
  BILL_PAYMENT = 2,

  [System.Runtime.Serialization.EnumMember(Value = @"BONUS_REWARDS")]
  BONUS_REWARDS = 3,

  [System.Runtime.Serialization.EnumMember(Value = @"CARD_ACCESS")]
  CARD_ACCESS = 4,

  [System.Runtime.Serialization.EnumMember(Value = @"CASHBACK_OFFER")]
  CASHBACK_OFFER = 5,

  [System.Runtime.Serialization.EnumMember(Value = @"COMPLEMENTARY_PRODUCT_DISCOUNTS")]
  COMPLEMENTARY_PRODUCT_DISCOUNTS = 6,

  [System.Runtime.Serialization.EnumMember(Value = @"DIGITAL_BANKING")]
  DIGITAL_BANKING = 7,

  [System.Runtime.Serialization.EnumMember(Value = @"DIGITAL_WALLET")]
  DIGITAL_WALLET = 8,

  [System.Runtime.Serialization.EnumMember(Value = @"DONATE_INTEREST")]
  DONATE_INTEREST = 9,

  [System.Runtime.Serialization.EnumMember(Value = @"EXTRA_REPAYMENTS")]
  EXTRA_REPAYMENTS = 10,

  [System.Runtime.Serialization.EnumMember(Value = @"FRAUD_PROTECTION")]
  FRAUD_PROTECTION = 11,

  [System.Runtime.Serialization.EnumMember(Value = @"FREE_TXNS")]
  FREE_TXNS = 12,

  [System.Runtime.Serialization.EnumMember(Value = @"FREE_TXNS_ALLOWANCE")]
  FREE_TXNS_ALLOWANCE = 13,

  [System.Runtime.Serialization.EnumMember(Value = @"GUARANTOR")]
  GUARANTOR = 14,

  [System.Runtime.Serialization.EnumMember(Value = @"INSURANCE")]
  INSURANCE = 15,

  [System.Runtime.Serialization.EnumMember(Value = @"INSTALMENT_PLAN")]
  INSTALMENT_PLAN = 16,

  [System.Runtime.Serialization.EnumMember(Value = @"INTEREST_FREE")]
  INTEREST_FREE = 17,

  [System.Runtime.Serialization.EnumMember(Value = @"INTEREST_FREE_TRANSFERS")]
  INTEREST_FREE_TRANSFERS = 18,

  [System.Runtime.Serialization.EnumMember(Value = @"LOYALTY_PROGRAM")]
  LOYALTY_PROGRAM = 19,

  [System.Runtime.Serialization.EnumMember(Value = @"NOTIFICATIONS")]
  NOTIFICATIONS = 20,

  [System.Runtime.Serialization.EnumMember(Value = @"NPP_ENABLED")]
  NPP_ENABLED = 21,

  [System.Runtime.Serialization.EnumMember(Value = @"NPP_PAYID")]
  NPP_PAYID = 22,

  [System.Runtime.Serialization.EnumMember(Value = @"OFFSET")]
  OFFSET = 23,

  [System.Runtime.Serialization.EnumMember(Value = @"OTHER")]
  OTHER = 24,

  [System.Runtime.Serialization.EnumMember(Value = @"OVERDRAFT")]
  OVERDRAFT = 25,

  [System.Runtime.Serialization.EnumMember(Value = @"REDRAW")]
  REDRAW = 26,

  [System.Runtime.Serialization.EnumMember(Value = @"RELATIONSHIP_MANAGEMENT")]
  RELATIONSHIP_MANAGEMENT = 27,

  [System.Runtime.Serialization.EnumMember(Value = @"UNLIMITED_TXNS")]
  UNLIMITED_TXNS = 28,

 }

 [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public enum BankingProductConstraintConstraintType {

  [System.Runtime.Serialization.EnumMember(Value = @"MAX_BALANCE")]
  MAX_BALANCE = 0,

  [System.Runtime.Serialization.EnumMember(Value = @"MAX_LIMIT")]
  MAX_LIMIT = 1,

  [System.Runtime.Serialization.EnumMember(Value = @"MIN_BALANCE")]
  MIN_BALANCE = 2,

  [System.Runtime.Serialization.EnumMember(Value = @"MIN_LIMIT")]
  MIN_LIMIT = 3,

  [System.Runtime.Serialization.EnumMember(Value = @"OPENING_BALANCE")]
  OPENING_BALANCE = 4,

 }

 [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public enum BankingProductEligibilityEligibilityType {

  [System.Runtime.Serialization.EnumMember(Value = @"BUSINESS")]
  BUSINESS = 0,

  [System.Runtime.Serialization.EnumMember(Value = @"EMPLOYMENT_STATUS")]
  EMPLOYMENT_STATUS = 1,

  [System.Runtime.Serialization.EnumMember(Value = @"MAX_AGE")]
  MAX_AGE = 2,

  [System.Runtime.Serialization.EnumMember(Value = @"MIN_AGE")]
  MIN_AGE = 3,

  [System.Runtime.Serialization.EnumMember(Value = @"MIN_INCOME")]
  MIN_INCOME = 4,

  [System.Runtime.Serialization.EnumMember(Value = @"MIN_TURNOVER")]
  MIN_TURNOVER = 5,

  [System.Runtime.Serialization.EnumMember(Value = @"NATURAL_PERSON")]
  NATURAL_PERSON = 6,

  [System.Runtime.Serialization.EnumMember(Value = @"OTHER")]
  OTHER = 7,

  [System.Runtime.Serialization.EnumMember(Value = @"PENSION_RECIPIENT")]
  PENSION_RECIPIENT = 8,

  [System.Runtime.Serialization.EnumMember(Value = @"RESIDENCY_STATUS")]
  RESIDENCY_STATUS = 9,

  [System.Runtime.Serialization.EnumMember(Value = @"STAFF")]
  STAFF = 10,

  [System.Runtime.Serialization.EnumMember(Value = @"STUDENT")]
  STUDENT = 11,

 }

 [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public enum BankingProductFeeFeeType {

  [System.Runtime.Serialization.EnumMember(Value = @"DEPOSIT")]
  DEPOSIT = 0,

  [System.Runtime.Serialization.EnumMember(Value = @"EVENT")]
  EVENT = 1,

  [System.Runtime.Serialization.EnumMember(Value = @"EXIT")]
  EXIT = 2,

  [System.Runtime.Serialization.EnumMember(Value = @"PAYMENT")]
  PAYMENT = 3,

  [System.Runtime.Serialization.EnumMember(Value = @"PERIODIC")]
  PERIODIC = 4,

  [System.Runtime.Serialization.EnumMember(Value = @"PURCHASE")]
  PURCHASE = 5,

  [System.Runtime.Serialization.EnumMember(Value = @"TRANSACTION")]
  TRANSACTION = 6,

  [System.Runtime.Serialization.EnumMember(Value = @"UPFRONT")]
  UPFRONT = 7,

  [System.Runtime.Serialization.EnumMember(Value = @"VARIABLE")]
  VARIABLE = 8,

  [System.Runtime.Serialization.EnumMember(Value = @"WITHDRAWAL")]
  WITHDRAWAL = 9,

 }

 [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public enum BankingProductDiscountDiscountType {

  [System.Runtime.Serialization.EnumMember(Value = @"BALANCE")]
  BALANCE = 0,

  [System.Runtime.Serialization.EnumMember(Value = @"DEPOSITS")]
  DEPOSITS = 1,

  [System.Runtime.Serialization.EnumMember(Value = @"ELIGIBILITY_ONLY")]
  ELIGIBILITY_ONLY = 2,

  [System.Runtime.Serialization.EnumMember(Value = @"FEE_CAP")]
  FEE_CAP = 3,

  [System.Runtime.Serialization.EnumMember(Value = @"PAYMENTS")]
  PAYMENTS = 4,

 }

 [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public enum BankingProductDiscountEligibilityDiscountEligibilityType {

  [System.Runtime.Serialization.EnumMember(Value = @"BUSINESS")]
  BUSINESS = 0,

  [System.Runtime.Serialization.EnumMember(Value = @"EMPLOYMENT_STATUS")]
  EMPLOYMENT_STATUS = 1,

  [System.Runtime.Serialization.EnumMember(Value = @"INTRODUCTORY")]
  INTRODUCTORY = 2,

  [System.Runtime.Serialization.EnumMember(Value = @"MAX_AGE")]
  MAX_AGE = 3,

  [System.Runtime.Serialization.EnumMember(Value = @"MIN_AGE")]
  MIN_AGE = 4,

  [System.Runtime.Serialization.EnumMember(Value = @"MIN_INCOME")]
  MIN_INCOME = 5,

  [System.Runtime.Serialization.EnumMember(Value = @"MIN_TURNOVER")]
  MIN_TURNOVER = 6,

  [System.Runtime.Serialization.EnumMember(Value = @"NATURAL_PERSON")]
  NATURAL_PERSON = 7,

  [System.Runtime.Serialization.EnumMember(Value = @"OTHER")]
  OTHER = 8,

  [System.Runtime.Serialization.EnumMember(Value = @"PENSION_RECIPIENT")]
  PENSION_RECIPIENT = 9,

  [System.Runtime.Serialization.EnumMember(Value = @"RESIDENCY_STATUS")]
  RESIDENCY_STATUS = 10,

  [System.Runtime.Serialization.EnumMember(Value = @"STAFF")]
  STAFF = 11,

  [System.Runtime.Serialization.EnumMember(Value = @"STUDENT")]
  STUDENT = 12,

 }

 [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public enum BankingProductDepositRateDepositRateType {

  [System.Runtime.Serialization.EnumMember(Value = @"BONUS")]
  BONUS = 0,

  [System.Runtime.Serialization.EnumMember(Value = @"BUNDLE_BONUS")]
  BUNDLE_BONUS = 1,

  [System.Runtime.Serialization.EnumMember(Value = @"FIXED")]
  FIXED = 2,

  [System.Runtime.Serialization.EnumMember(Value = @"FLOATING")]
  FLOATING = 3,

  [System.Runtime.Serialization.EnumMember(Value = @"INTRODUCTORY")]
  INTRODUCTORY = 4,

  [System.Runtime.Serialization.EnumMember(Value = @"MARKET_LINKED")]
  MARKET_LINKED = 5,

  [System.Runtime.Serialization.EnumMember(Value = @"VARIABLE")]
  VARIABLE = 6,

 }

 [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public enum BankingProductLendingRateV2LendingRateType {

  [System.Runtime.Serialization.EnumMember(Value = @"BUNDLE_DISCOUNT_FIXED")]
  BUNDLE_DISCOUNT_FIXED = 0,

  [System.Runtime.Serialization.EnumMember(Value = @"BUNDLE_DISCOUNT_VARIABLE")]
  BUNDLE_DISCOUNT_VARIABLE = 1,

  [System.Runtime.Serialization.EnumMember(Value = @"CASH_ADVANCE")]
  CASH_ADVANCE = 2,

  [System.Runtime.Serialization.EnumMember(Value = @"DISCOUNT")]
  DISCOUNT = 3,

  [System.Runtime.Serialization.EnumMember(Value = @"FIXED")]
  FIXED = 4,

  [System.Runtime.Serialization.EnumMember(Value = @"FLOATING")]
  FLOATING = 5,

  [System.Runtime.Serialization.EnumMember(Value = @"INTRODUCTORY")]
  INTRODUCTORY = 6,

  [System.Runtime.Serialization.EnumMember(Value = @"MARKET_LINKED")]
  MARKET_LINKED = 7,

  [System.Runtime.Serialization.EnumMember(Value = @"PENALTY")]
  PENALTY = 8,

  [System.Runtime.Serialization.EnumMember(Value = @"PURCHASE")]
  PURCHASE = 9,

  [System.Runtime.Serialization.EnumMember(Value = @"VARIABLE")]
  VARIABLE = 10,

 }

 [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public enum BankingProductLendingRateV2InterestPaymentDue {

  [System.Runtime.Serialization.EnumMember(Value = @"IN_ADVANCE")]
  IN_ADVANCE = 0,

  [System.Runtime.Serialization.EnumMember(Value = @"IN_ARREARS")]
  IN_ARREARS = 1,

 }

 [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public enum BankingProductLendingRateV2RepaymentType {

  [System.Runtime.Serialization.EnumMember(Value = @"INTEREST_ONLY")]
  INTEREST_ONLY = 0,

  [System.Runtime.Serialization.EnumMember(Value = @"PRINCIPAL_AND_INTEREST")]
  PRINCIPAL_AND_INTEREST = 1,

 }

 [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public enum BankingProductLendingRateV2LoanPurpose {

  [System.Runtime.Serialization.EnumMember(Value = @"INVESTMENT")]
  INVESTMENT = 0,

  [System.Runtime.Serialization.EnumMember(Value = @"OWNER_OCCUPIED")]
  OWNER_OCCUPIED = 1,

 }

 [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public enum BankingProductRateTierV3UnitOfMeasure {

  [System.Runtime.Serialization.EnumMember(Value = @"DAY")]
  DAY = 0,

  [System.Runtime.Serialization.EnumMember(Value = @"DOLLAR")]
  DOLLAR = 1,

  [System.Runtime.Serialization.EnumMember(Value = @"MONTH")]
  MONTH = 2,

  [System.Runtime.Serialization.EnumMember(Value = @"PERCENT")]
  PERCENT = 3,

 }

 [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public enum BankingProductRateTierV3RateApplicationMethod {

  [System.Runtime.Serialization.EnumMember(Value = @"PER_TIER")]
  PER_TIER = 0,

  [System.Runtime.Serialization.EnumMember(Value = @"WHOLE_BALANCE")]
  WHOLE_BALANCE = 1,

 }

 [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public enum BankingAccountV2OpenStatus {

  [System.Runtime.Serialization.EnumMember(Value = @"CLOSED")]
  CLOSED = 0,

  [System.Runtime.Serialization.EnumMember(Value = @"OPEN")]
  OPEN = 1,

 }

 [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public enum BankingAccountV2AccountOwnership {

  [System.Runtime.Serialization.EnumMember(Value = @"UNKNOWN")]
  UNKNOWN = 0,

  [System.Runtime.Serialization.EnumMember(Value = @"ONE_PARTY")]
  ONE_PARTY = 1,

  [System.Runtime.Serialization.EnumMember(Value = @"TWO_PARTY")]
  TWO_PARTY = 2,

  [System.Runtime.Serialization.EnumMember(Value = @"MANY_PARTY")]
  MANY_PARTY = 3,

  [System.Runtime.Serialization.EnumMember(Value = @"OTHER")]
  OTHER = 4,

 }

 [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public enum BankingAccountDetailV3SpecificAccountUType {

  [System.Runtime.Serialization.EnumMember(Value = @"creditCard")]
  CreditCard = 0,

  [System.Runtime.Serialization.EnumMember(Value = @"loan")]
  Loan = 1,

  [System.Runtime.Serialization.EnumMember(Value = @"termDeposit")]
  TermDeposit = 2,

 }

 [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public partial class Features : BankingProductFeatureV2 {
  /// <summary>
  /// True if the feature is already activated and false if the feature is available for activation. Defaults to true if absent. (note this is an additional field appended to the feature object defined in the Product Reference payload)
  /// </summary>
  [Newtonsoft.Json.JsonProperty("isActivated", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
  public bool? IsActivated { get; set; } = true;

 }

 [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public enum BankingTermDepositAccountMaturityInstructions {

  [System.Runtime.Serialization.EnumMember(Value = @"HOLD_ON_MATURITY")]
  HOLD_ON_MATURITY = 0,

  [System.Runtime.Serialization.EnumMember(Value = @"PAID_OUT_AT_MATURITY")]
  PAID_OUT_AT_MATURITY = 1,

  [System.Runtime.Serialization.EnumMember(Value = @"ROLLED_OVER")]
  ROLLED_OVER = 2,

 }

 [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public enum BankingLoanAccountV2RepaymentType {

  [System.Runtime.Serialization.EnumMember(Value = @"INTEREST_ONLY")]
  INTEREST_ONLY = 0,

  [System.Runtime.Serialization.EnumMember(Value = @"PRINCIPAL_AND_INTEREST")]
  PRINCIPAL_AND_INTEREST = 1,

 }

 [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public enum BankingTransactionType {

  [System.Runtime.Serialization.EnumMember(Value = @"DIRECT_DEBIT")]
  DIRECT_DEBIT = 0,

  [System.Runtime.Serialization.EnumMember(Value = @"FEE")]
  FEE = 1,

  [System.Runtime.Serialization.EnumMember(Value = @"INTEREST_CHARGED")]
  INTEREST_CHARGED = 2,

  [System.Runtime.Serialization.EnumMember(Value = @"INTEREST_PAID")]
  INTEREST_PAID = 3,

  [System.Runtime.Serialization.EnumMember(Value = @"OTHER")]
  OTHER = 4,

  [System.Runtime.Serialization.EnumMember(Value = @"PAYMENT")]
  PAYMENT = 5,

  [System.Runtime.Serialization.EnumMember(Value = @"TRANSFER_INCOMING")]
  TRANSFER_INCOMING = 6,

  [System.Runtime.Serialization.EnumMember(Value = @"TRANSFER_OUTGOING")]
  TRANSFER_OUTGOING = 7,

 }

 [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public enum BankingTransactionStatus {

  [System.Runtime.Serialization.EnumMember(Value = @"PENDING")]
  PENDING = 0,

  [System.Runtime.Serialization.EnumMember(Value = @"POSTED")]
  POSTED = 1,

 }

 [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public enum BankingPayeeV2Type {

  [System.Runtime.Serialization.EnumMember(Value = @"BILLER")]
  BILLER = 0,

  [System.Runtime.Serialization.EnumMember(Value = @"DIGITAL_WALLET")]
  DIGITAL_WALLET = 1,

  [System.Runtime.Serialization.EnumMember(Value = @"DOMESTIC")]
  DOMESTIC = 2,

  [System.Runtime.Serialization.EnumMember(Value = @"INTERNATIONAL")]
  INTERNATIONAL = 3,

 }

 [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public enum BankingPayeeDetailV2PayeeUType {

  [System.Runtime.Serialization.EnumMember(Value = @"biller")]
  Biller = 0,

  [System.Runtime.Serialization.EnumMember(Value = @"digitalWallet")]
  DigitalWallet = 1,

  [System.Runtime.Serialization.EnumMember(Value = @"domestic")]
  Domestic = 2,

  [System.Runtime.Serialization.EnumMember(Value = @"international")]
  International = 3,

 }

 [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public enum BankingDomesticPayeePayeeAccountUType {

  [System.Runtime.Serialization.EnumMember(Value = @"account")]
  Account = 0,

  [System.Runtime.Serialization.EnumMember(Value = @"card")]
  Card = 1,

  [System.Runtime.Serialization.EnumMember(Value = @"payId")]
  PayId = 2,

 }

 [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public enum BankingDomesticPayeePayIdType {

  [System.Runtime.Serialization.EnumMember(Value = @"ABN")]
  ABN = 0,

  [System.Runtime.Serialization.EnumMember(Value = @"EMAIL")]
  EMAIL = 1,

  [System.Runtime.Serialization.EnumMember(Value = @"ORG_IDENTIFIER")]
  ORG_IDENTIFIER = 2,

  [System.Runtime.Serialization.EnumMember(Value = @"TELEPHONE")]
  TELEPHONE = 3,

 }

 [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public enum BankingDigitalWalletPayeeType {

  [System.Runtime.Serialization.EnumMember(Value = @"EMAIL")]
  EMAIL = 0,

  [System.Runtime.Serialization.EnumMember(Value = @"CONTACT_NAME")]
  CONTACT_NAME = 1,

  [System.Runtime.Serialization.EnumMember(Value = @"TELEPHONE")]
  TELEPHONE = 2,

 }

 [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public enum BankingDigitalWalletPayeeProvider {

  [System.Runtime.Serialization.EnumMember(Value = @"PAYPAL_AU")]
  PAYPAL_AU = 0,

  [System.Runtime.Serialization.EnumMember(Value = @"OTHER")]
  OTHER = 1,

 }

 [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public enum BankingScheduledPaymentStatus {

  [System.Runtime.Serialization.EnumMember(Value = @"ACTIVE")]
  ACTIVE = 0,

  [System.Runtime.Serialization.EnumMember(Value = @"INACTIVE")]
  INACTIVE = 1,

  [System.Runtime.Serialization.EnumMember(Value = @"SKIP")]
  SKIP = 2,

 }

 [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public enum BankingScheduledPaymentToToUType {

  [System.Runtime.Serialization.EnumMember(Value = @"accountId")]
  AccountId = 0,

  [System.Runtime.Serialization.EnumMember(Value = @"biller")]
  Biller = 1,

  [System.Runtime.Serialization.EnumMember(Value = @"domestic")]
  Domestic = 2,

  [System.Runtime.Serialization.EnumMember(Value = @"international")]
  International = 3,

  [System.Runtime.Serialization.EnumMember(Value = @"payeeId")]
  PayeeId = 4,

 }

 [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public enum BankingScheduledPaymentRecurrenceRecurrenceUType {

  [System.Runtime.Serialization.EnumMember(Value = @"eventBased")]
  EventBased = 0,

  [System.Runtime.Serialization.EnumMember(Value = @"intervalSchedule")]
  IntervalSchedule = 1,

  [System.Runtime.Serialization.EnumMember(Value = @"lastWeekDay")]
  LastWeekDay = 2,

  [System.Runtime.Serialization.EnumMember(Value = @"onceOff")]
  OnceOff = 3,

 }

 [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public enum BankingScheduledPaymentRecurrenceIntervalScheduleNonBusinessDayTreatment {

  [System.Runtime.Serialization.EnumMember(Value = @"AFTER")]
  AFTER = 0,

  [System.Runtime.Serialization.EnumMember(Value = @"BEFORE")]
  BEFORE = 1,

  [System.Runtime.Serialization.EnumMember(Value = @"ON")]
  ON = 2,

  [System.Runtime.Serialization.EnumMember(Value = @"ONLY")]
  ONLY = 3,

 }

 [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public enum BankingScheduledPaymentRecurrenceLastWeekdayLastWeekDay {

  [System.Runtime.Serialization.EnumMember(Value = @"FRI")]
  FRI = 0,

  [System.Runtime.Serialization.EnumMember(Value = @"MON")]
  MON = 1,

  [System.Runtime.Serialization.EnumMember(Value = @"SAT")]
  SAT = 2,

  [System.Runtime.Serialization.EnumMember(Value = @"SUN")]
  SUN = 3,

  [System.Runtime.Serialization.EnumMember(Value = @"THU")]
  THU = 4,

  [System.Runtime.Serialization.EnumMember(Value = @"TUE")]
  TUE = 5,

  [System.Runtime.Serialization.EnumMember(Value = @"WED")]
  WED = 6,

 }

 [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public enum BankingScheduledPaymentRecurrenceLastWeekdayNonBusinessDayTreatment {

  [System.Runtime.Serialization.EnumMember(Value = @"AFTER")]
  AFTER = 0,

  [System.Runtime.Serialization.EnumMember(Value = @"BEFORE")]
  BEFORE = 1,

  [System.Runtime.Serialization.EnumMember(Value = @"ON")]
  ON = 2,

  [System.Runtime.Serialization.EnumMember(Value = @"ONLY")]
  ONLY = 3,

 }

 [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public enum CommonPhysicalAddressAddressUType {

  [System.Runtime.Serialization.EnumMember(Value = @"paf")]
  Paf = 0,

  [System.Runtime.Serialization.EnumMember(Value = @"simple")]
  Simple = 1,

 }

 [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public enum BankingTransactionDetail_allOf_extendedDataExtensionUType {

  [System.Runtime.Serialization.EnumMember(Value = @"x2p101Payload")]
  X2p101Payload = 0,

 }

 [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
 public enum BankingTransactionDetail_allOf_extendedDataService {

  [System.Runtime.Serialization.EnumMember(Value = @"X2P1.01")]
  X2P1_01 = 0,

 }


}

#pragma warning restore 1591
#pragma warning restore 1573
#pragma warning restore 472
#pragma warning restore 114
#pragma warning restore 108
#pragma warning restore 3016
#pragma warning restore 8603